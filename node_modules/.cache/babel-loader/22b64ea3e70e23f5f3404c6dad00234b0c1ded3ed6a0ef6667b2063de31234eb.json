{"ast":null,"code":"/*\nCopyright (c) 2019 Daybrush\nname: react-moveable\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/moveable/blob/master/packages/react-moveable\nversion: 0.56.0\n*/\nimport getAgent from '@egjs/agent';\nimport { prefixNames, ref, refs, prefixCSS, withMethods } from 'framework-utils';\nimport { findIndex, find, isArray, splitSpace, splitUnit, dot, isString, getDocumentElement, getDocumentBody, getWindow, throttle, getKeys, getRad, TINY_NUM as TINY_NUM$1, average, getDist as getDist$1, throttleArray, calculateBoundSize, convertUnitSize, isNumber, hasClass, isObject, flat as flat$1, decamelize, isNode, isFunction, isWindow, counter, isUndefined, between, addClass, requestAnimationFrame, removeClass, splitBracket, splitComma, cancelAnimationFrame, pushSet } from '@daybrush/utils';\nimport { minus, invert, convertPositionMatrix, plus, calculate, fromTranslation, multiply, convertDimension, createScaleMatrix, convertCSStoMatrix, createIdentityMatrix, createOriginMatrix, createRotateMatrix, rotate, getOrigin, multiplies, convertMatrixtoCSS, ignoreDimension, createWarpMatrix } from '@scena/matrix';\nimport { parse, parseMat, toMat, calculateMatrixDist } from 'css-to-mat';\nimport ChildrenDiffer, { diff } from '@egjs/children-differ';\nimport DragScroll from '@scena/dragscroll';\nimport { getMinMaxs, fitPoints, getOverlapSize, getAreaSize, isInside, getIntersectionPointsByConstants } from 'overlap-area';\nimport * as React from 'react';\nimport { createElement } from 'react';\nimport Gesto from 'gesto';\nimport { styled } from 'react-css-styled';\nimport EventEmitter from '@scena/event-emitter';\nimport { diff as diff$1 } from '@egjs/list-differ';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction makeAble(name, able) {\n  return __assign({\n    events: [],\n    props: [],\n    name: name\n  }, able);\n}\nvar DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nvar DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\nfunction getSVGCursor(scale, degree) {\n  return \"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(32 * scale, \"px\\\" height=\\\"\").concat(32 * scale, \"px\\\" viewBox=\\\"0 0 32 32\\\" ><path d=\\\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"1.2\\\" fill=\\\"black\\\" stroke=\\\"white\\\" style=\\\"transform:rotate(\").concat(degree, \"deg);transform-origin: 16px 16px\\\"></path></svg>\");\n}\nfunction getCursorCSS(degree) {\n  var x1 = getSVGCursor(1, degree);\n  // const x2 = getSVGCursor(2, degree);\n  var degree45 = Math.round(degree / 45) * 45 % 180;\n  var defaultCursor = \"ns-resize\";\n  if (degree45 === 135) {\n    defaultCursor = \"nwse-resize\";\n  } else if (degree45 === 45) {\n    defaultCursor = \"nesw-resize\";\n  } else if (degree45 === 90) {\n    defaultCursor = \"ew-resize\";\n  }\n  // tslint:disable-next-line: max-line-length\n  return \"cursor:\".concat(defaultCursor, \";cursor: url('\").concat(x1, \"') 16 16, \").concat(defaultCursor, \";\");\n}\nvar agent = getAgent();\nvar IS_WEBKIT = agent.browser.webkit;\nvar IS_WEBKIT605 = IS_WEBKIT && function () {\n  var navi = typeof window === \"undefined\" ? {\n    userAgent: \"\"\n  } : window.navigator;\n  var res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n  return res ? parseFloat(res[1]) < 605 : false;\n}();\nvar browserName = agent.browser.name;\nvar browserVersion = parseInt(agent.browser.version, 10);\nvar IS_CHROME = browserName === \"chrome\";\nvar IS_CHROMIUM = agent.browser.chromium;\nvar chromiumVersion = parseInt(agent.browser.chromiumVersion, 10) || 0;\nvar IS_CHROMIUM109 = IS_CHROME && browserVersion >= 109 || IS_CHROMIUM && chromiumVersion >= 109;\nvar IS_FIREFOX = browserName === \"firefox\";\nvar IS_SAFARI_ABOVE15 = parseInt(agent.browser.webkitVersion, 10) >= 612 || browserVersion >= 15;\nvar PREFIX = \"moveable-\";\nvar directionCSS = DIRECTIONS.map(function (dir) {\n  var top = \"\";\n  var left = \"\";\n  var originX = \"center\";\n  var originY = \"center\";\n  var offset = \"calc(var(--moveable-control-padding, 20) * -1px)\";\n  if (dir.indexOf(\"n\") > -1) {\n    top = \"top: \".concat(offset, \";\");\n    originY = \"bottom\";\n  }\n  if (dir.indexOf(\"s\") > -1) {\n    top = \"top: 0px;\";\n    originY = \"top\";\n  }\n  if (dir.indexOf(\"w\") > -1) {\n    left = \"left: \".concat(offset, \";\");\n    originX = \"right\";\n  }\n  if (dir.indexOf(\"e\") > -1) {\n    left = \"left: 0px;\";\n    originX = \"left\";\n  }\n  return \".around-control[data-direction*=\\\"\".concat(dir, \"\\\"] {\\n        \").concat(left).concat(top, \"\\n        transform-origin: \").concat(originX, \" \").concat(originY, \";\\n    }\");\n}).join(\"\\n\");\nvar MOVEABLE_CSS = \"\\n{\\nposition: absolute;\\nwidth: 1px;\\nheight: 1px;\\nleft: 0;\\ntop: 0;\\nz-index: 3000;\\n--moveable-color: #4af;\\n--zoom: 1;\\n--zoompx: 1px;\\n--moveable-line-padding: 0;\\n--moveable-control-padding: 0;\\nwill-change: transform;\\noutline: 1px solid transparent;\\n}\\n.control-box {\\nz-index: 0;\\n}\\n.line, .control {\\nposition: absolute;\\nleft: 0;\\ntop: 0;\\nwill-change: transform;\\n}\\n.control {\\nwidth: 14px;\\nheight: 14px;\\nborder-radius: 50%;\\nborder: 2px solid #fff;\\nbox-sizing: border-box;\\nbackground: #4af;\\nbackground: var(--moveable-color);\\nmargin-top: -7px;\\nmargin-left: -7px;\\nborder: 2px solid #fff;\\nz-index: 10;\\n}\\n.around-control {\\nposition: absolute;\\nwill-change: transform;\\nwidth: calc(var(--moveable-control-padding, 20) * 1px);\\nheight: calc(var(--moveable-control-padding, 20) * 1px);\\nleft: calc(var(--moveable-control-padding, 20) * -0.5px);\\ntop: calc(var(--moveable-control-padding, 20) * -0.5px);\\nbox-sizing: border-box;\\nbackground: transparent;\\nz-index: 8;\\ncursor: alias;\\ntransform-origin: center center;\\n}\\n\".concat(directionCSS, \"\\n.padding {\\nposition: absolute;\\ntop: 0px;\\nleft: 0px;\\nwidth: 100px;\\nheight: 100px;\\ntransform-origin: 0 0;\\n}\\n.line {\\nwidth: 1px;\\nheight: 1px;\\nbackground: #4af;\\nbackground: var(--moveable-color);\\ntransform-origin: 0px 50%;\\n}\\n.line.edge {\\nz-index: 1;\\nbackground: transparent;\\n}\\n.line.dashed {\\nbox-sizing: border-box;\\nbackground: transparent;\\n}\\n.line.dashed.horizontal {\\nborder-top: 1px dashed #4af;\\nborder-top-color: #4af;\\nborder-top-color: var(--moveable-color);\\n}\\n.line.dashed.vertical {\\nborder-left: 1px dashed #4af;\\nborder-left-color: #4af;\\nborder-left-color: var(--moveable-color);\\n}\\n.line.vertical {\\ntransform: translateX(-50%);\\n}\\n.line.horizontal {\\ntransform: translateY(-50%);\\n}\\n.line.vertical.bold {\\nwidth: 2px;\\n}\\n.line.horizontal.bold {\\nheight: 2px;\\n}\\n\\n.control.origin {\\nborder-color: #f55;\\nbackground: #fff;\\nwidth: 12px;\\nheight: 12px;\\nmargin-top: -6px;\\nmargin-left: -6px;\\npointer-events: none;\\n}\\n\").concat([0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(function (degree) {\n  return \"\\n.direction[data-rotation=\\\"\".concat(degree, \"\\\"], :global .view-control-rotation\").concat(degree, \" {\\n\").concat(getCursorCSS(degree), \"\\n}\\n\");\n}).join(\"\\n\"), \"\\n\\n.line.direction:before {\\ncontent: \\\"\\\";\\nposition: absolute;\\nwidth: 100%;\\nheight: calc(var(--moveable-line-padding, 0) * 1px);\\nbottom: 0;\\nleft: 0;\\n}\\n.group {\\nz-index: -1;\\n}\\n.area {\\nposition: absolute;\\n}\\n.area-pieces {\\nposition: absolute;\\ntop: 0;\\nleft: 0;\\ndisplay: none;\\n}\\n.area.avoid, .area.pass {\\npointer-events: none;\\n}\\n.area.avoid+.area-pieces {\\ndisplay: block;\\n}\\n.area-piece {\\nposition: absolute;\\n}\\n\\n\").concat(IS_WEBKIT605 ? \":global svg *:before {\\ncontent:\\\"\\\";\\ntransform-origin: inherit;\\n}\" : \"\", \"\\n\");\nvar NEARBY_POS = [[0, 1, 2], [1, 0, 3], [2, 0, 3], [3, 1, 2]];\nvar FLOAT_POINT_NUM = 0.0001;\nvar TINY_NUM = 0.0000001;\nvar MIN_SCALE = 0.000000001;\nvar MAX_NUM = Math.pow(10, 10);\nvar MIN_NUM = -MAX_NUM;\nvar DIRECTION_REGION_TO_DIRECTION = {\n  n: [0, -1],\n  e: [1, 0],\n  s: [0, 1],\n  w: [-1, 0],\n  nw: [-1, -1],\n  ne: [1, -1],\n  sw: [-1, 1],\n  se: [1, 1]\n};\nvar DIRECTION_INDEXES = {\n  n: [0, 1],\n  e: [1, 3],\n  s: [3, 2],\n  w: [2, 0],\n  nw: [0],\n  ne: [1],\n  sw: [2],\n  se: [3]\n};\nvar DIRECTION_ROTATIONS = {\n  n: 0,\n  s: 180,\n  w: 270,\n  e: 90,\n  nw: 315,\n  ne: 45,\n  sw: 225,\n  se: 135\n};\nvar MOVEABLE_METHODS = [\"isMoveableElement\", \"updateRect\", \"updateTarget\", \"destroy\", \"dragStart\", \"isInside\", \"hitTest\", \"setState\", \"getRect\", \"request\", \"isDragging\", \"getManager\", \"forceUpdate\", \"waitToChangeTarget\", \"updateSelectors\", \"getTargets\", \"stopDrag\", \"getControlBoxElement\", \"getMoveables\", \"getDragElement\"];\nfunction setCustomDrag(e, state, delta, isPinch, isConvert, ableName) {\n  var _a, _b;\n  if (ableName === void 0) {\n    ableName = \"draggable\";\n  }\n  var result = (_b = (_a = state.gestos[ableName]) === null || _a === void 0 ? void 0 : _a.move(delta, e.inputEvent)) !== null && _b !== void 0 ? _b : {};\n  var datas = result.originalDatas || result.datas;\n  var ableDatas = datas[ableName] || (datas[ableName] = {});\n  return __assign(__assign({}, isConvert ? convertDragDist(state, result) : result), {\n    isPinch: !!isPinch,\n    parentEvent: true,\n    datas: ableDatas,\n    originalDatas: e.originalDatas\n  });\n}\nvar CustomGesto = /*#__PURE__*/function () {\n  function CustomGesto(ableName) {\n    var _a;\n    if (ableName === void 0) {\n      ableName = \"draggable\";\n    }\n    this.ableName = ableName;\n    this.prevX = 0;\n    this.prevY = 0;\n    this.startX = 0;\n    this.startY = 0;\n    this.isDrag = false;\n    this.isFlag = false;\n    this.datas = {\n      draggable: {}\n    };\n    this.datas = (_a = {}, _a[ableName] = {}, _a);\n  }\n  CustomGesto.prototype.dragStart = function (client, e) {\n    this.isDrag = false;\n    this.isFlag = false;\n    var originalDatas = e.originalDatas;\n    this.datas = originalDatas;\n    if (!originalDatas[this.ableName]) {\n      originalDatas[this.ableName] = {};\n    }\n    return __assign(__assign({}, this.move(client, e.inputEvent)), {\n      type: \"dragstart\"\n    });\n  };\n  CustomGesto.prototype.drag = function (client, inputEvent) {\n    return this.move([client[0] - this.prevX, client[1] - this.prevY], inputEvent);\n  };\n  CustomGesto.prototype.move = function (delta, inputEvent) {\n    var clientX;\n    var clientY;\n    var isFirstDrag = false;\n    if (!this.isFlag) {\n      this.prevX = delta[0];\n      this.prevY = delta[1];\n      this.startX = delta[0];\n      this.startY = delta[1];\n      clientX = delta[0];\n      clientY = delta[1];\n      this.isFlag = true;\n    } else {\n      var isPrevDrag = this.isDrag;\n      clientX = this.prevX + delta[0];\n      clientY = this.prevY + delta[1];\n      if (delta[0] || delta[1]) {\n        this.isDrag = true;\n      }\n      if (!isPrevDrag && this.isDrag) {\n        isFirstDrag = true;\n      }\n    }\n    this.prevX = clientX;\n    this.prevY = clientY;\n    return {\n      type: \"drag\",\n      clientX: clientX,\n      clientY: clientY,\n      inputEvent: inputEvent,\n      isFirstDrag: isFirstDrag,\n      isDrag: this.isDrag,\n      distX: clientX - this.startX,\n      distY: clientY - this.startY,\n      deltaX: delta[0],\n      deltaY: delta[1],\n      datas: this.datas[this.ableName],\n      originalDatas: this.datas,\n      parentEvent: true,\n      parentGesto: this\n    };\n  };\n  return CustomGesto;\n}();\nfunction calculateElementPosition(matrix, origin, width, height) {\n  var is3d = matrix.length === 16;\n  var n = is3d ? 4 : 3;\n  var poses = calculatePoses(matrix, width, height, n);\n  var _a = __read(poses, 4),\n    _b = __read(_a[0], 2),\n    x1 = _b[0],\n    y1 = _b[1],\n    _c = __read(_a[1], 2),\n    x2 = _c[0],\n    y2 = _c[1],\n    _d = __read(_a[2], 2),\n    x3 = _d[0],\n    y3 = _d[1],\n    _e = __read(_a[3], 2),\n    x4 = _e[0],\n    y4 = _e[1];\n  var _f = __read(calculatePosition(matrix, origin, n), 2),\n    originX = _f[0],\n    originY = _f[1];\n  var left = Math.min(x1, x2, x3, x4);\n  var top = Math.min(y1, y2, y3, y4);\n  var right = Math.max(x1, x2, x3, x4);\n  var bottom = Math.max(y1, y2, y3, y4);\n  x1 = x1 - left || 0;\n  x2 = x2 - left || 0;\n  x3 = x3 - left || 0;\n  x4 = x4 - left || 0;\n  y1 = y1 - top || 0;\n  y2 = y2 - top || 0;\n  y3 = y3 - top || 0;\n  y4 = y4 - top || 0;\n  originX = originX - left || 0;\n  originY = originY - top || 0;\n  var sx = matrix[0];\n  var sy = matrix[n + 1];\n  var direction = sign(sx * sy);\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    origin: [originX, originY],\n    pos1: [x1, y1],\n    pos2: [x2, y2],\n    pos3: [x3, y3],\n    pos4: [x4, y4],\n    direction: direction\n  };\n}\nfunction calculatePointerDist(moveable, e) {\n  var clientX = e.clientX,\n    clientY = e.clientY,\n    datas = e.datas;\n  var _a = moveable.state,\n    moveableClientRect = _a.moveableClientRect,\n    rootMatrix = _a.rootMatrix,\n    is3d = _a.is3d,\n    pos1 = _a.pos1;\n  var left = moveableClientRect.left,\n    top = moveableClientRect.top;\n  var n = is3d ? 4 : 3;\n  var _b = __read(minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1), 2),\n    posX = _b[0],\n    posY = _b[1];\n  var _c = __read(getDragDist({\n      datas: datas,\n      distX: posX,\n      distY: posY\n    }), 2),\n    distX = _c[0],\n    distY = _c[1];\n  return [distX, distY];\n}\nfunction setDragStart(moveable, _a) {\n  var datas = _a.datas;\n  var _b = moveable.state,\n    allMatrix = _b.allMatrix,\n    beforeMatrix = _b.beforeMatrix,\n    is3d = _b.is3d,\n    left = _b.left,\n    top = _b.top,\n    origin = _b.origin,\n    offsetMatrix = _b.offsetMatrix,\n    targetMatrix = _b.targetMatrix,\n    transformOrigin = _b.transformOrigin;\n  var n = is3d ? 4 : 3;\n  datas.is3d = is3d;\n  datas.matrix = allMatrix;\n  datas.targetMatrix = targetMatrix;\n  datas.beforeMatrix = beforeMatrix;\n  datas.offsetMatrix = offsetMatrix;\n  datas.transformOrigin = transformOrigin;\n  datas.inverseMatrix = invert(allMatrix, n);\n  datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n  datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n  datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n  datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nfunction getTransformDirection(e) {\n  return calculateElementPosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nfunction resolveTransformEvent(moveable, event, functionName) {\n  var datas = event.datas,\n    originalDatas = event.originalDatas.beforeRenderable;\n  var index = datas.transformIndex;\n  var nextTransforms = originalDatas.nextTransforms;\n  var length = nextTransforms.length;\n  var nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n  var nextIndex = -1;\n  if (index === -1) {\n    // translate => rotate => scale\n    if (functionName === \"translate\") {\n      nextIndex = 0;\n    } else if (functionName === \"rotate\") {\n      nextIndex = findIndex(nextTransforms, function (text) {\n        return text.match(/scale\\(/g);\n      });\n    }\n    if (nextIndex === -1) {\n      nextIndex = nextTransforms.length;\n    }\n    datas.transformIndex = nextIndex;\n  } else if (find(nextTransformAppendedIndexes, function (info) {\n    return info.index === index && info.functionName === functionName;\n  })) {\n    nextIndex = index;\n  } else {\n    nextIndex = index + nextTransformAppendedIndexes.filter(function (info) {\n      return info.index < index;\n    }).length;\n  }\n  var result = convertTransformInfo(nextTransforms, moveable.state, nextIndex);\n  var targetFunction = result.targetFunction;\n  var matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n  datas.beforeFunctionTexts = result.beforeFunctionTexts;\n  datas.afterFunctionTexts = result.afterFunctionTexts;\n  datas.beforeTransform = result.beforeFunctionMatrix;\n  datas.beforeTransform2 = result.beforeFunctionMatrix2;\n  datas.targetTansform = result.targetFunctionMatrix;\n  datas.afterTransform = result.afterFunctionMatrix;\n  datas.afterTransform2 = result.afterFunctionMatrix2;\n  datas.targetAllTransform = result.allFunctionMatrix;\n  if (targetFunction.functionName === matFunctionName) {\n    datas.afterFunctionTexts.splice(0, 1);\n    datas.isAppendTransform = false;\n  } else if (length > nextIndex) {\n    datas.isAppendTransform = true;\n    originalDatas.nextTransformAppendedIndexes = __spreadArray(__spreadArray([], __read(nextTransformAppendedIndexes), false), [{\n      functionName: functionName,\n      index: nextIndex,\n      isAppend: true\n    }], false);\n  }\n}\nfunction convertTransformFormat(datas, value, dist) {\n  return \"\".concat(datas.beforeFunctionTexts.join(\" \"), \" \").concat(datas.isAppendTransform ? dist : value, \" \").concat(datas.afterFunctionTexts.join(\" \"));\n}\nfunction getTransformDist(_a) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var _b = __read(getBeforeDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), 2),\n    bx = _b[0],\n    by = _b[1];\n  // B * [tx, ty] * A = [bx, by] * targetMatrix;\n  // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n  var res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n  return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nfunction getTransfromMatrix(datas, targetMatrix, isAfter) {\n  var beforeTransform = datas.beforeTransform,\n    afterTransform = datas.afterTransform,\n    beforeTransform2 = datas.beforeTransform2,\n    afterTransform2 = datas.afterTransform2,\n    targetAllTransform = datas.targetAllTransform;\n  // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n  // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n  // nextTargetMatrix = (targetMatrix * targetAllTransform)\n  var nextTargetMatrix = isAfter ? multiply(targetAllTransform, targetMatrix, 4) : multiply(targetMatrix, targetAllTransform, 4);\n  // res1 = B-1 * nextTargetMatrix\n  var res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n  // res3 = res2 * A-1\n  var afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n  return afterTargetMatrix;\n}\nfunction getBeforeDragDist(_a) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  // TT = BT\n  var inverseBeforeMatrix = datas.inverseBeforeMatrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n  // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n  return minus(calculate(inverseBeforeMatrix, plus(absoluteOrigin, [distX, distY]), n), startDragBeforeDist);\n}\nfunction getDragDist(_a, isBefore) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var inverseBeforeMatrix = datas.inverseBeforeMatrix,\n    inverseMatrix = datas.inverseMatrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    startDragDist = datas.startDragDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  return minus(calculate(isBefore ? inverseBeforeMatrix : inverseMatrix, plus(absoluteOrigin, [distX, distY]), n), isBefore ? startDragBeforeDist : startDragDist);\n}\nfunction getInverseDragDist(_a, isBefore) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var beforeMatrix = datas.beforeMatrix,\n    matrix = datas.matrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    startDragDist = datas.startDragDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  return minus(calculate(isBefore ? beforeMatrix : matrix, plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]), n), absoluteOrigin);\n}\nfunction calculateTransformOrigin(transformOrigin, width, height, prevWidth, prevHeight, prevOrigin) {\n  if (prevWidth === void 0) {\n    prevWidth = width;\n  }\n  if (prevHeight === void 0) {\n    prevHeight = height;\n  }\n  if (prevOrigin === void 0) {\n    prevOrigin = [0, 0];\n  }\n  if (!transformOrigin) {\n    return prevOrigin;\n  }\n  return transformOrigin.map(function (pos, i) {\n    var _a = splitUnit(pos),\n      value = _a.value,\n      unit = _a.unit;\n    var prevSize = i ? prevHeight : prevWidth;\n    var size = i ? height : width;\n    if (pos === \"%\" || isNaN(value)) {\n      // no value but %\n      var measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n      return size * measureRatio;\n    } else if (unit !== \"%\") {\n      return value;\n    }\n    return size * value / 100;\n  });\n}\nfunction getPosIndexesByDirection(direction) {\n  var indexes = [];\n  if (direction[1] >= 0) {\n    if (direction[0] >= 0) {\n      indexes.push(3);\n    }\n    if (direction[0] <= 0) {\n      indexes.push(2);\n    }\n  }\n  if (direction[1] <= 0) {\n    if (direction[0] >= 0) {\n      indexes.push(1);\n    }\n    if (direction[0] <= 0) {\n      indexes.push(0);\n    }\n  }\n  return indexes;\n}\nfunction getPosesByDirection(poses, direction) {\n  /*\r\n  [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\r\n  [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\r\n  [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\r\n  */\n  return getPosIndexesByDirection(direction).map(function (index) {\n    return poses[index];\n  });\n}\nfunction getPosBySingleDirection(poses, direction) {\n  var ratio = (direction + 1) / 2;\n  return [dot(poses[0][0], poses[1][0], ratio, 1 - ratio), dot(poses[0][1], poses[1][1], ratio, 1 - ratio)];\n}\nfunction getPosByDirection(poses, direction) {\n  var top = getPosBySingleDirection([poses[0], poses[1]], direction[0]);\n  var bottom = getPosBySingleDirection([poses[2], poses[3]], direction[0]);\n  return getPosBySingleDirection([top, bottom], direction[1]);\n}\nfunction getDist(startPos, matrix, width, height, n, fixedDirection) {\n  var poses = calculatePoses(matrix, width, height, n);\n  var fixedPos = getPosByDirection(poses, fixedDirection);\n  var distX = startPos[0] - fixedPos[0];\n  var distY = startPos[1] - fixedPos[1];\n  return [distX, distY];\n}\nfunction getNextMatrix(offsetMatrix, targetMatrix, origin, n) {\n  return multiply(offsetMatrix, getAbsoluteMatrix(targetMatrix, n, origin), n);\n}\nfunction getNextTransformMatrix(state, datas, transform, isAllTransform) {\n  var transformOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d;\n  var n = is3d ? 4 : 3;\n  var targetTransform;\n  if (isString(transform)) {\n    var beforeTransform = datas.beforeTransform,\n      afterTransform = datas.afterTransform;\n    if (isAllTransform) {\n      targetTransform = convertDimension(parseMat(transform), 4, n);\n    } else {\n      targetTransform = convertDimension(multiply(multiply(beforeTransform, parseMat([transform]), 4), afterTransform, 4), 4, n);\n    }\n  } else {\n    targetTransform = transform;\n  }\n  return getNextMatrix(offsetMatrix, targetTransform, transformOrigin, n);\n}\nfunction scaleMatrix(state, scale) {\n  var transformOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d,\n    targetMatrix = state.targetMatrix,\n    targetAllTransform = state.targetAllTransform;\n  var n = is3d ? 4 : 3;\n  return getNextMatrix(offsetMatrix, multiply(targetAllTransform || targetMatrix, createScaleMatrix(scale, n), n), transformOrigin, n);\n}\nfunction fillTransformStartEvent(moveable, e) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  return {\n    setTransform: function (transform, index) {\n      if (index === void 0) {\n        index = -1;\n      }\n      originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n      setTransformIndex(moveable, e, index);\n    },\n    setTransformIndex: function (index) {\n      setTransformIndex(moveable, e, index);\n    }\n  };\n}\nfunction setDefaultTransformIndex(moveable, e, property) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  var startTransforms = originalDatas.startTransforms;\n  setTransformIndex(moveable, e, findIndex(startTransforms, function (func) {\n    return func.indexOf(\"\".concat(property, \"(\")) === 0;\n  }));\n}\nfunction setTransformIndex(moveable, e, index) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  var datas = e.datas;\n  datas.transformIndex = index;\n  if (index === -1) {\n    return;\n  }\n  var transform = originalDatas.startTransforms[index];\n  if (!transform) {\n    return;\n  }\n  var state = moveable.state;\n  var info = parse([transform], {\n    \"x%\": function (v) {\n      return v / 100 * state.offsetWidth;\n    },\n    \"y%\": function (v) {\n      return v / 100 * state.offsetHeight;\n    }\n  });\n  datas.startValue = info[0].functionValue;\n}\nfunction fillOriginalTransform(e, transform) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  originalDatas.nextTransforms = splitSpace(transform);\n  // originalDatas.nextTargetMatrix = parseMat(transform);\n}\nfunction getBeforeRenderableDatas(e) {\n  return e.originalDatas.beforeRenderable;\n}\nfunction getNextTransforms(e) {\n  var originalDatas = e.originalDatas.beforeRenderable;\n  return originalDatas.nextTransforms;\n}\nfunction getNextTransformText(e) {\n  return (getNextTransforms(e) || []).join(\" \");\n}\nfunction getNextStyle(e) {\n  return getBeforeRenderableDatas(e).nextStyle;\n}\nfunction fillTransformEvent(moveable, nextTransform, delta, isPinch, e) {\n  fillOriginalTransform(e, nextTransform);\n  var drag = Draggable.drag(moveable, setCustomDrag(e, moveable.state, delta, isPinch, false));\n  var afterTransform = drag ? drag.transform : nextTransform;\n  return __assign(__assign({\n    transform: nextTransform,\n    drag: drag\n  }, fillCSSObject({\n    transform: afterTransform\n  }, e)), {\n    afterTransform: afterTransform\n  });\n}\nfunction getTranslateFixedPosition(moveable, transform, fixedDirection, fixedOffset, datas, isAllTransform) {\n  var nextMatrix = getNextTransformMatrix(moveable.state, datas, transform, isAllTransform);\n  var nextFixedPosition = getDirectionOffset(moveable, fixedDirection, fixedOffset, nextMatrix);\n  return nextFixedPosition;\n}\nfunction getTranslateDist(moveable, transform, fixedDirection, fixedPosition, fixedOffset, datas, isAllTransform) {\n  var nextFixedPosition = getTranslateFixedPosition(moveable, transform, fixedDirection, fixedOffset, datas, isAllTransform);\n  var state = moveable.state;\n  var left = state.left,\n    top = state.top;\n  var groupable = moveable.props.groupable;\n  var groupLeft = groupable ? left : 0;\n  var groupTop = groupable ? top : 0;\n  var dist = minus(fixedPosition, nextFixedPosition);\n  return minus(dist, [groupLeft, groupTop]);\n}\nfunction getScaleDist(moveable, transform, fixedDirection, fixedPosition, fixedOffset, datas, isAllTransform) {\n  var dist = getTranslateDist(moveable, transform, fixedDirection, fixedPosition, fixedOffset, datas, isAllTransform);\n  return dist;\n}\nfunction getDirectionByPos(pos, width, height) {\n  return [width ? -1 + pos[0] / (width / 2) : 0, height ? -1 + pos[1] / (height / 2) : 0];\n}\nfunction getDirectionOffset(moveable, fixedDirection, fixedOffset, nextMatrix) {\n  if (nextMatrix === void 0) {\n    nextMatrix = moveable.state.allMatrix;\n  }\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height,\n    is3d = _a.is3d;\n  var n = is3d ? 4 : 3;\n  var fixedOffsetPosition = [width / 2 * (1 + fixedDirection[0]) + fixedOffset[0], height / 2 * (1 + fixedDirection[1]) + fixedOffset[1]];\n  return calculatePosition(nextMatrix, fixedOffsetPosition, n);\n}\nfunction getRotateDist(moveable, rotateDist, datas) {\n  var fixedDirection = datas.fixedDirection;\n  var fixedPosition = datas.fixedPosition;\n  var fixedOffset = datas.fixedOffset;\n  return getTranslateDist(moveable, \"rotate(\".concat(rotateDist, \"deg)\"), fixedDirection, fixedPosition, fixedOffset, datas);\n}\nfunction getResizeDist(moveable, width, height, fixedPosition, transformOrigin, datas) {\n  var groupable = moveable.props.groupable;\n  var state = moveable.state;\n  var prevOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d,\n    prevWidth = state.width,\n    prevHeight = state.height,\n    left = state.left,\n    top = state.top;\n  var fixedDirection = datas.fixedDirection;\n  var targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n  var n = is3d ? 4 : 3;\n  var nextOrigin = calculateTransformOrigin(transformOrigin, width, height, prevWidth, prevHeight, prevOrigin);\n  var groupLeft = groupable ? left : 0;\n  var groupTop = groupable ? top : 0;\n  var nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n  var dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n  return minus(dist, [groupLeft, groupTop]);\n}\nfunction getAbsolutePosition(moveable, direction) {\n  return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\nfunction getGestoData(moveable, ableName) {\n  var targetGesto = moveable.targetGesto;\n  var controlGesto = moveable.controlGesto;\n  var data;\n  if (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) {\n    data = targetGesto.getEventData()[ableName];\n  }\n  if (!data && (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag())) {\n    data = controlGesto.getEventData()[ableName];\n  }\n  return data || {};\n}\nfunction getShadowRoot(parentElement) {\n  if (parentElement && parentElement.getRootNode) {\n    var rootNode = parentElement.getRootNode();\n    if (rootNode.nodeType === 11) {\n      return rootNode;\n    }\n  }\n  return;\n}\nfunction getIndividualTransforms(getStyle) {\n  var scale = getStyle(\"scale\");\n  var rotate = getStyle(\"rotate\");\n  var translate = getStyle(\"translate\");\n  var individualTransforms = [];\n  if (translate && translate !== \"0px\" && translate !== \"none\") {\n    individualTransforms.push(\"translate(\".concat(translate.split(/\\s+/).join(\",\"), \")\"));\n  }\n  if (rotate && rotate !== \"1\" && rotate !== \"none\") {\n    individualTransforms.push(\"rotate(\".concat(rotate, \")\"));\n  }\n  if (scale && scale !== \"1\" && scale !== \"none\") {\n    individualTransforms.push(\"scale(\".concat(scale.split(/\\s+/).join(\",\"), \")\"));\n  }\n  return individualTransforms;\n}\nfunction getMatrixStackInfo(target, container, checkContainer) {\n  var el = target;\n  var matrixes = [];\n  var documentElement = getDocumentElement(target) || getDocumentBody(target);\n  var requestEnd = !checkContainer && target === container || target === documentElement;\n  var isEnd = requestEnd;\n  var is3d = false;\n  var n = 3;\n  var transformOrigin;\n  var targetTransformOrigin;\n  var targetMatrix;\n  var hasFixed = false;\n  var offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n  var zoom = 1;\n  while (el && !isEnd) {\n    isEnd = requestEnd;\n    var getStyle = getCachedStyle(el);\n    var position = getStyle(\"position\");\n    var transform = getElementTransform(el);\n    var isFixed = position === \"fixed\";\n    var individualTransforms = getIndividualTransforms(getStyle);\n    var matrix = convertCSStoMatrix(getTransformMatrix(transform));\n    var offsetParent = void 0;\n    var isOffsetEnd = false;\n    var isStatic = false;\n    var parentClientLeft = 0;\n    var parentClientTop = 0;\n    var fixedClientLeft = 0;\n    var fixedClientTop = 0;\n    var fixedInfo = {\n      hasTransform: false,\n      fixedContainer: null\n    };\n    if (isFixed) {\n      hasFixed = true;\n      fixedInfo = getPositionFixedInfo(el);\n      offsetContainer = fixedInfo.fixedContainer;\n    }\n    // convert 3 to 4\n    var length_1 = matrix.length;\n    if (!is3d && (length_1 === 16 || individualTransforms.length)) {\n      is3d = true;\n      n = 4;\n      convert3DMatrixes(matrixes);\n      if (targetMatrix) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n      }\n    }\n    if (is3d && length_1 === 9) {\n      matrix = convertDimension(matrix, 3, 4);\n    }\n    var _a = getOffsetPosInfo(el, target),\n      tagName = _a.tagName,\n      hasOffset = _a.hasOffset,\n      isSVG = _a.isSVG,\n      origin_1 = _a.origin,\n      targetOrigin = _a.targetOrigin,\n      offsetPos = _a.offset;\n    var _b = __read(offsetPos, 2),\n      offsetLeft = _b[0],\n      offsetTop = _b[1];\n    // no target with svg\n    if (tagName === \"svg\" && !el.ownerSVGElement && targetMatrix) {\n      // scale matrix for svg's SVGElements.\n      matrixes.push({\n        type: \"target\",\n        target: el,\n        matrix: getSVGMatrix(el, n)\n      });\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createIdentityMatrix(n)\n      });\n    }\n    var targetZoom = parseFloat(getStyle(\"zoom\")) || 1;\n    if (isFixed) {\n      offsetParent = fixedInfo.fixedContainer;\n      isOffsetEnd = true;\n    } else {\n      var offsetInfo = getOffsetInfo(el, container, false, true, getStyle);\n      var offsetZoom = offsetInfo.offsetZoom;\n      offsetParent = offsetInfo.offsetParent;\n      isOffsetEnd = offsetInfo.isEnd;\n      isStatic = offsetInfo.isStatic;\n      zoom *= offsetZoom;\n      if ((offsetInfo.isCustomElement || offsetZoom !== 1) && isStatic) {\n        offsetLeft -= offsetParent.offsetLeft;\n        offsetTop -= offsetParent.offsetTop;\n      } else if (IS_FIREFOX || IS_CHROMIUM109) {\n        var parentSlotElement = offsetInfo.parentSlotElement;\n        if (parentSlotElement) {\n          var customOffsetParent = offsetParent;\n          var customOffsetLeft = 0;\n          var customOffsetTop = 0;\n          while (customOffsetParent) {\n            if (!getShadowRoot(customOffsetParent)) {\n              break;\n            }\n            customOffsetLeft += customOffsetParent.offsetLeft;\n            customOffsetTop += customOffsetParent.offsetTop;\n            customOffsetParent = customOffsetParent.offsetParent;\n          }\n          offsetLeft -= customOffsetLeft;\n          offsetTop -= customOffsetTop;\n        }\n      }\n    }\n    if (IS_WEBKIT && !IS_SAFARI_ABOVE15 && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n      offsetLeft -= offsetParent.offsetLeft;\n      offsetTop -= offsetParent.offsetTop;\n      requestEnd = requestEnd || isOffsetEnd;\n    }\n    if (isFixed) {\n      if (hasOffset && fixedInfo.hasTransform) {\n        // border\n        fixedClientLeft = offsetParent.clientLeft;\n        fixedClientTop = offsetParent.clientTop;\n      }\n    } else {\n      if (hasOffset && offsetContainer !== offsetParent) {\n        // border\n        parentClientLeft = offsetParent.clientLeft;\n        parentClientTop = offsetParent.clientTop;\n      }\n      if (hasOffset && offsetParent === documentElement) {\n        var margin = getBodyOffset(el, false);\n        offsetLeft += margin[0];\n        offsetTop += margin[1];\n      }\n    }\n    matrixes.push({\n      type: \"target\",\n      target: el,\n      matrix: getAbsoluteMatrix(matrix, n, origin_1)\n    });\n    if (individualTransforms.length) {\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createIdentityMatrix(n)\n      });\n      matrixes.push({\n        type: \"target\",\n        target: el,\n        matrix: getAbsoluteMatrix(parseMat(individualTransforms), n, origin_1)\n      });\n    }\n    if (hasOffset) {\n      var isElementTarget = el === target;\n      var scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n      var scrollTop = isElementTarget ? 0 : el.scrollTop;\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createOriginMatrix([offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft, offsetTop - scrollTop + parentClientTop - fixedClientTop], n)\n      });\n    } else {\n      // svg\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        origin: origin_1\n      });\n    }\n    // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\n    if (targetZoom !== 1) {\n      matrixes.push({\n        type: \"zoom\",\n        target: el,\n        matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0])\n      });\n    }\n    if (!targetMatrix) {\n      targetMatrix = matrix;\n    }\n    if (!transformOrigin) {\n      transformOrigin = origin_1;\n    }\n    if (!targetTransformOrigin) {\n      targetTransformOrigin = targetOrigin;\n    }\n    if (isEnd || isFixed) {\n      break;\n    } else {\n      el = offsetParent;\n      requestEnd = isOffsetEnd;\n    }\n    if (!checkContainer || el === documentElement) {\n      isEnd = requestEnd;\n    }\n  }\n  if (!targetMatrix) {\n    targetMatrix = createIdentityMatrix(n);\n  }\n  if (!transformOrigin) {\n    transformOrigin = [0, 0];\n  }\n  if (!targetTransformOrigin) {\n    targetTransformOrigin = [0, 0];\n  }\n  return {\n    zoom: zoom,\n    offsetContainer: offsetContainer,\n    matrixes: matrixes,\n    targetMatrix: targetMatrix,\n    transformOrigin: transformOrigin,\n    targetOrigin: targetTransformOrigin,\n    is3d: is3d,\n    hasFixed: hasFixed\n  };\n}\nvar cacheStyleMap = null;\nvar clientRectStyleMap = null;\nvar matrixContainerInfos = null;\nfunction setStoreCache(useCache) {\n  if (useCache) {\n    if (window.Map) {\n      cacheStyleMap = new Map();\n      clientRectStyleMap = new Map();\n    }\n    matrixContainerInfos = [];\n  } else {\n    cacheStyleMap = null;\n    matrixContainerInfos = null;\n    clientRectStyleMap = null;\n  }\n}\nfunction getCachedClientRect(el) {\n  var clientRect = clientRectStyleMap === null || clientRectStyleMap === void 0 ? void 0 : clientRectStyleMap.get(el);\n  if (clientRect) {\n    return clientRect;\n  }\n  var nextClientRect = getClientRect(el, true);\n  if (clientRectStyleMap) {\n    clientRectStyleMap.set(el, nextClientRect);\n  }\n  return nextClientRect;\n}\nfunction getCachedMatrixContainerInfo(target, container) {\n  if (matrixContainerInfos) {\n    var result_1 = find(matrixContainerInfos, function (info) {\n      return info[0][0] == target && info[0][1] == container;\n    });\n    if (result_1) {\n      return result_1[1];\n    }\n  }\n  var result = getMatrixStackInfo(target, container, true);\n  if (matrixContainerInfos) {\n    matrixContainerInfos.push([[target, container], result]);\n  }\n  return result;\n}\nfunction getCachedStyle(element) {\n  var cache = cacheStyleMap === null || cacheStyleMap === void 0 ? void 0 : cacheStyleMap.get(element);\n  if (!cache) {\n    var nextStyle_1 = getWindow(element).getComputedStyle(element);\n    if (!cacheStyleMap) {\n      return function (property) {\n        return nextStyle_1[property];\n      };\n    }\n    cache = {\n      style: nextStyle_1,\n      cached: {}\n    };\n    cacheStyleMap.set(element, cache);\n  }\n  var cached = cache.cached;\n  var style = cache.style;\n  return function (property) {\n    if (!(property in cached)) {\n      cached[property] = style[property];\n    }\n    return cached[property];\n  };\n}\nfunction fillChildEvents(moveable, name, e) {\n  var datas = e.originalDatas;\n  datas.groupable = datas.groupable || {};\n  var groupableDatas = datas.groupable;\n  groupableDatas.childDatas = groupableDatas.childDatas || [];\n  var childDatas = groupableDatas.childDatas;\n  return moveable.moveables.map(function (_, i) {\n    childDatas[i] = childDatas[i] || {};\n    childDatas[i][name] = childDatas[i][name] || {};\n    return __assign(__assign({}, e), {\n      isRequestChild: true,\n      datas: childDatas[i][name],\n      originalDatas: childDatas[i]\n    });\n  });\n}\nfunction triggerChildGesto(moveable, able, type, delta, e, isConvert, ableName) {\n  var isStart = !!type.match(/Start$/g);\n  var isEnd = !!type.match(/End$/g);\n  var isPinch = e.isPinch;\n  var datas = e.datas;\n  var events = fillChildEvents(moveable, able.name, e);\n  var moveables = moveable.moveables;\n  var childEvents = [];\n  var eventParams = events.map(function (ev, i) {\n    var childMoveable = moveables[i];\n    var state = childMoveable.state;\n    var gestos = state.gestos;\n    var childEvent = ev;\n    if (isStart) {\n      childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n      childEvents.push(childEvent);\n    } else {\n      if (!gestos[ableName]) {\n        gestos[ableName] = datas.childGestos[i];\n      }\n      if (!gestos[ableName]) {\n        return;\n      }\n      childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n      childEvents.push(childEvent);\n    }\n    var result = able[type](childMoveable, __assign(__assign({}, childEvent), {\n      parentFlag: true\n    }));\n    if (isEnd) {\n      gestos[ableName] = null;\n    }\n    return result;\n  });\n  if (isStart) {\n    datas.childGestos = moveables.map(function (child) {\n      return child.state.gestos[ableName];\n    });\n  }\n  return {\n    eventParams: eventParams,\n    childEvents: childEvents\n  };\n}\nfunction triggerChildAbles(moveable, able, type, e, eachEvent, callback) {\n  if (eachEvent === void 0) {\n    eachEvent = function (_, ev) {\n      return ev;\n    };\n  }\n  var isEnd = !!type.match(/End$/g);\n  var events = fillChildEvents(moveable, able.name, e);\n  var moveables = moveable.moveables;\n  var childs = events.map(function (ev, i) {\n    var childMoveable = moveables[i];\n    var childEvent = ev;\n    childEvent = eachEvent(childMoveable, ev);\n    var result = able[type](childMoveable, __assign(__assign({}, childEvent), {\n      parentFlag: true\n    }));\n    result && callback && callback(childMoveable, ev, result, i);\n    if (isEnd) {\n      childMoveable.state.gestos = {};\n    }\n    return result;\n  });\n  return childs;\n}\nfunction startChildDist(moveable, child, parentDatas, childEvent) {\n  var fixedDirection = parentDatas.fixedDirection;\n  var fixedPosition = parentDatas.fixedPosition;\n  var startPositions = childEvent.datas.startPositions || getAbsolutePosesByState(child.state);\n  var pos = getPosByDirection(startPositions, fixedDirection);\n  var _a = __read(calculate(createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3), [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1], 3), 2),\n    originalX = _a[0],\n    originalY = _a[1];\n  childEvent.datas.originalX = originalX;\n  childEvent.datas.originalY = originalY;\n  return childEvent;\n}\nfunction renderDirectionControlsByInfos(moveable, ableName, renderDirections, React) {\n  var _a = moveable.getState(),\n    renderPoses = _a.renderPoses,\n    rotationRad = _a.rotation,\n    direction = _a.direction;\n  var zoom = getProps(moveable.props, ableName).zoom;\n  var degRotation = absDegree(rotationRad / Math.PI * 180);\n  var directionMap = {};\n  var renderState = moveable.renderState;\n  if (!renderState.renderDirectionMap) {\n    renderState.renderDirectionMap = {};\n  }\n  var renderDirectionMap = renderState.renderDirectionMap;\n  renderDirections.forEach(function (_a) {\n    var dir = _a.dir;\n    directionMap[dir] = true;\n  });\n  var directionSign = sign(direction);\n  return renderDirections.map(function (_a) {\n    var data = _a.data,\n      classNames = _a.classNames,\n      dir = _a.dir;\n    var indexes = DIRECTION_INDEXES[dir];\n    if (!indexes || !directionMap[dir]) {\n      return null;\n    }\n    renderDirectionMap[dir] = true;\n    var directionRotation = (throttle(degRotation, 15) + directionSign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n    var dataAttrs = {};\n    getKeys(data).forEach(function (name) {\n      dataAttrs[\"data-\".concat(name)] = data[name];\n    });\n    return React.createElement(\"div\", __assign({\n      className: prefix.apply(void 0, __spreadArray([\"control\", \"direction\", dir, ableName], __read(classNames), false)),\n      \"data-rotation\": directionRotation,\n      \"data-direction\": dir\n    }, dataAttrs, {\n      key: \"direction-\".concat(dir),\n      style: getControlTransform.apply(void 0, __spreadArray([rotationRad, zoom], __read(indexes.map(function (index) {\n        return renderPoses[index];\n      })), false))\n    }));\n  });\n}\nfunction renderDirectionControls(moveable, defaultDirections, ableName, React) {\n  var _a = getProps(moveable.props, ableName),\n    _b = _a.renderDirections,\n    directions = _b === void 0 ? defaultDirections : _b,\n    displayAroundControls = _a.displayAroundControls;\n  if (!directions) {\n    return [];\n  }\n  var renderDirections = directions === true ? DIRECTIONS : directions;\n  return __spreadArray(__spreadArray([], __read(displayAroundControls ? renderAroundControls(moveable, React, ableName, renderDirections) : []), false), __read(renderDirectionControlsByInfos(moveable, ableName, renderDirections.map(function (dir) {\n    return {\n      data: {},\n      classNames: [],\n      dir: dir\n    };\n  }), React)), false);\n}\nfunction renderLine(React, direction, pos1, pos2, zoom, key) {\n  var classNames = [];\n  for (var _i = 6; _i < arguments.length; _i++) {\n    classNames[_i - 6] = arguments[_i];\n  }\n  var rad = getRad(pos1, pos2);\n  var rotation = direction ? throttle(rad / Math.PI * 180, 15) % 180 : -1;\n  return React.createElement(\"div\", {\n    key: \"line-\".concat(key),\n    className: prefix.apply(void 0, __spreadArray([\"line\", \"direction\", direction ? \"edge\" : \"\", direction], __read(classNames), false)),\n    \"data-rotation\": rotation,\n    \"data-line-key\": key,\n    \"data-direction\": direction,\n    style: getLineStyle(pos1, pos2, zoom, rad)\n  });\n}\nfunction renderEdgeLines(React, ableName, edge, poses, zoom) {\n  var directions = edge === true ? DIRECTIONS4 : edge;\n  return directions.map(function (direction, i) {\n    var _a = __read(DIRECTION_INDEXES[direction], 2),\n      index1 = _a[0],\n      index2 = _a[1];\n    if (index2 == null) {\n      return;\n    }\n    return renderLine(React, direction, poses[index1], poses[index2], zoom, \"\".concat(ableName, \"Edge\").concat(i), ableName);\n  }).filter(Boolean);\n}\nfunction getRenderDirections(ableName) {\n  return function (moveable, React) {\n    var edge = getProps(moveable.props, ableName).edge;\n    if (edge && (edge === true || edge.length)) {\n      return __spreadArray(__spreadArray([], __read(renderEdgeLines(React, ableName, edge, moveable.getState().renderPoses, moveable.props.zoom)), false), __read(renderDiagonalDirections(moveable, ableName, React)), false);\n    }\n    return renderAllDirections(moveable, ableName, React);\n  };\n}\nfunction renderAllDirections(moveable, ableName, React) {\n  return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\nfunction renderDiagonalDirections(moveable, ableName, React) {\n  return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\nfunction renderAroundControls(moveable, React, ableName, renderDirections) {\n  var renderState = moveable.renderState;\n  if (!renderState.renderDirectionMap) {\n    renderState.renderDirectionMap = {};\n  }\n  var _a = moveable.getState(),\n    renderPoses = _a.renderPoses,\n    rotationRad = _a.rotation,\n    direction = _a.direction;\n  var renderDirectionMap = renderState.renderDirectionMap;\n  var zoom = moveable.props.zoom;\n  var directionSign = sign(direction);\n  var degRotation = rotationRad / Math.PI * 180;\n  return (renderDirections || getKeys(renderDirectionMap)).map(function (dir) {\n    var indexes = DIRECTION_INDEXES[dir];\n    if (!indexes) {\n      return null;\n    }\n    var directionRotation = (throttle(degRotation, 15) + directionSign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n    var classNames = [\"around-control\"];\n    if (ableName) {\n      classNames.push(\"direction\", ableName);\n    }\n    return React.createElement(\"div\", {\n      className: prefix.apply(void 0, __spreadArray([], __read(classNames), false)),\n      \"data-rotation\": directionRotation,\n      \"data-direction\": dir,\n      key: \"direction-around-\".concat(dir),\n      style: getControlTransform.apply(void 0, __spreadArray([rotationRad, zoom], __read(indexes.map(function (index) {\n        return renderPoses[index];\n      })), false))\n    });\n  });\n}\nfunction checkBoundPoses(bounds, verticalPoses, horizontalPoses) {\n  var _a = bounds || {},\n    _b = _a.position,\n    position = _b === void 0 ? \"client\" : _b,\n    _c = _a.left,\n    left = _c === void 0 ? -Infinity : _c,\n    _d = _a.top,\n    top = _d === void 0 ? -Infinity : _d,\n    _e = _a.right,\n    right = _e === void 0 ? Infinity : _e,\n    _f = _a.bottom,\n    bottom = _f === void 0 ? Infinity : _f;\n  var nextBounds = {\n    position: position,\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n  return {\n    vertical: checkBounds(nextBounds, verticalPoses, true),\n    horizontal: checkBounds(nextBounds, horizontalPoses, false)\n  };\n}\nfunction getBounds(moveable, externalBounds) {\n  var _a = moveable.state,\n    _b = _a.containerClientRect,\n    containerHeight = _b.clientHeight,\n    containerWidth = _b.clientWidth,\n    clientLeft = _b.clientLeft,\n    clientTop = _b.clientTop,\n    _c = _a.snapOffset,\n    snapOffsetLeft = _c.left,\n    snapOffsetTop = _c.top,\n    snapOffsetRight = _c.right,\n    snapOffsetBottom = _c.bottom;\n  var bounds = externalBounds || moveable.props.bounds || {};\n  var position = bounds.position || \"client\";\n  var isCSS = position === \"css\";\n  var _d = bounds.left,\n    left = _d === void 0 ? -Infinity : _d,\n    _e = bounds.top,\n    top = _e === void 0 ? -Infinity : _e;\n  var _f = bounds.right,\n    right = _f === void 0 ? isCSS ? -Infinity : Infinity : _f,\n    _g = bounds.bottom,\n    bottom = _g === void 0 ? isCSS ? -Infinity : Infinity : _g;\n  if (isCSS) {\n    right = containerWidth + snapOffsetRight - snapOffsetLeft - right;\n    bottom = containerHeight + snapOffsetBottom - snapOffsetTop - bottom;\n  }\n  return {\n    left: left + snapOffsetLeft - clientLeft,\n    right: right + snapOffsetLeft - clientLeft,\n    top: top + snapOffsetTop - clientTop,\n    bottom: bottom + snapOffsetTop - clientTop\n  };\n}\nfunction checkBoundKeepRatio(moveable, startPos, endPos) {\n  var _a = getBounds(moveable),\n    left = _a.left,\n    top = _a.top,\n    right = _a.right,\n    bottom = _a.bottom;\n  var _b = __read(endPos, 2),\n    endX = _b[0],\n    endY = _b[1];\n  var _c = __read(minus(endPos, startPos), 2),\n    dx = _c[0],\n    dy = _c[1];\n  if (abs(dx) < TINY_NUM) {\n    dx = 0;\n  }\n  if (abs(dy) < TINY_NUM) {\n    dy = 0;\n  }\n  var isBottom = dy > 0;\n  var isRight = dx > 0;\n  var verticalInfo = {\n    isBound: false,\n    offset: 0,\n    pos: 0\n  };\n  var horizontalInfo = {\n    isBound: false,\n    offset: 0,\n    pos: 0\n  };\n  if (dx === 0 && dy === 0) {\n    return {\n      vertical: verticalInfo,\n      horizontal: horizontalInfo\n    };\n  } else if (dx === 0) {\n    if (isBottom) {\n      if (bottom < endY) {\n        horizontalInfo.pos = bottom;\n        horizontalInfo.offset = endY - bottom;\n      }\n    } else {\n      if (top > endY) {\n        horizontalInfo.pos = top;\n        horizontalInfo.offset = endY - top;\n      }\n    }\n  } else if (dy === 0) {\n    if (isRight) {\n      if (right < endX) {\n        verticalInfo.pos = right;\n        verticalInfo.offset = endX - right;\n      }\n    } else {\n      if (left > endX) {\n        verticalInfo.pos = left;\n        verticalInfo.offset = endX - left;\n      }\n    }\n  } else {\n    // y - y1 = a * (x - x1)\n    var a = dy / dx;\n    var b = endPos[1] - a * endX;\n    var y = 0;\n    var x = 0;\n    var isBound = false;\n    if (isRight && right <= endX) {\n      y = a * right + b;\n      x = right;\n      isBound = true;\n    } else if (!isRight && endX <= left) {\n      y = a * left + b;\n      x = left;\n      isBound = true;\n    }\n    if (isBound) {\n      if (y < top || y > bottom) {\n        isBound = false;\n      }\n    }\n    if (!isBound) {\n      if (isBottom && bottom <= endY) {\n        y = bottom;\n        x = (y - b) / a;\n        isBound = true;\n      } else if (!isBottom && endY <= top) {\n        y = top;\n        x = (y - b) / a;\n        isBound = true;\n      }\n    }\n    if (isBound) {\n      verticalInfo.isBound = true;\n      verticalInfo.pos = x;\n      verticalInfo.offset = endX - x;\n      horizontalInfo.isBound = true;\n      horizontalInfo.pos = y;\n      horizontalInfo.offset = endY - y;\n    }\n  }\n  return {\n    vertical: verticalInfo,\n    horizontal: horizontalInfo\n  };\n}\nfunction checkBounds(bounds, poses, isVertical) {\n  // 0   [100 - 200]  300\n  var startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n  var endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n  // 450\n  var minPos = Math.min.apply(Math, __spreadArray([], __read(poses), false));\n  var maxPos = Math.max.apply(Math, __spreadArray([], __read(poses), false));\n  var boundInfos = [];\n  if (startBoundPos + 1 > minPos) {\n    boundInfos.push({\n      direction: \"start\",\n      isBound: true,\n      offset: minPos - startBoundPos,\n      pos: startBoundPos\n    });\n  }\n  if (endBoundPos - 1 < maxPos) {\n    boundInfos.push({\n      direction: \"end\",\n      isBound: true,\n      offset: maxPos - endBoundPos,\n      pos: endBoundPos\n    });\n  }\n  if (!boundInfos.length) {\n    boundInfos.push({\n      isBound: false,\n      offset: 0,\n      pos: 0\n    });\n  }\n  return boundInfos.sort(function (a, b) {\n    return abs(b.offset) - abs(a.offset);\n  });\n}\nfunction isBoundRotate$1(relativePoses, boundRect, rad) {\n  var nextPoses = rad ? relativePoses.map(function (pos) {\n    return rotate(pos, rad);\n  }) : relativePoses;\n  return nextPoses.some(function (pos) {\n    return pos[0] < boundRect.left && abs(pos[0] - boundRect.left) > 0.1 || pos[0] > boundRect.right && abs(pos[0] - boundRect.right) > 0.1 || pos[1] < boundRect.top && abs(pos[1] - boundRect.top) > 0.1 || pos[1] > boundRect.bottom && abs(pos[1] - boundRect.bottom) > 0.1;\n  });\n}\nfunction boundRotate(vec, boundPos, index) {\n  var r = getDistSize(vec);\n  var nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n  return [nextPos, -nextPos].sort(function (a, b) {\n    return abs(a - vec[index ? 0 : 1]) - abs(b - vec[index ? 0 : 1]);\n  }).map(function (pos) {\n    return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n  });\n}\nfunction checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation) {\n  if (!moveable.props.bounds) {\n    return [];\n  }\n  var rad = rotation * Math.PI / 180;\n  var _a = getBounds(moveable),\n    left = _a.left,\n    top = _a.top,\n    right = _a.right,\n    bottom = _a.bottom;\n  var relativeLeft = left - origin[0];\n  var relativeRight = right - origin[0];\n  var relativeTop = top - origin[1];\n  var relativeBottom = bottom - origin[1];\n  var boundRect = {\n    left: relativeLeft,\n    top: relativeTop,\n    right: relativeRight,\n    bottom: relativeBottom\n  };\n  if (!isBoundRotate$1(nextPoses, boundRect, 0)) {\n    return [];\n  }\n  var result = [];\n  [[relativeLeft, 0], [relativeRight, 0], [relativeTop, 1], [relativeBottom, 1]].forEach(function (_a) {\n    var _b = __read(_a, 2),\n      boundPos = _b[0],\n      index = _b[1];\n    nextPoses.forEach(function (nextPos) {\n      var relativeRad1 = getRad([0, 0], nextPos);\n      result.push.apply(result, __spreadArray([], __read(boundRotate(nextPos, boundPos, index).map(function (relativeRad2) {\n        return rad + relativeRad2 - relativeRad1;\n      }).filter(function (nextRad) {\n        return !isBoundRotate$1(prevPoses, boundRect, nextRad);\n      }).map(function (nextRad) {\n        return throttle(nextRad * 180 / Math.PI, TINY_NUM);\n      })), false));\n    });\n  });\n  return result;\n}\nvar VERTICAL_NAMES = [\"left\", \"right\", \"center\"];\nvar HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"];\nvar SNAP_SKIP_NAMES_MAP = {\n  \"left\": \"start\",\n  \"right\": \"end\",\n  \"center\": \"center\",\n  \"top\": \"start\",\n  \"bottom\": \"end\",\n  \"middle\": \"center\"\n};\nvar VERTICAL_NAMES_MAP = {\n  start: \"left\",\n  end: \"right\",\n  center: \"center\"\n};\nvar HORIZONTAL_NAMES_MAP = {\n  start: \"top\",\n  end: \"bottom\",\n  center: \"middle\"\n};\nfunction getInitialBounds() {\n  return {\n    left: false,\n    top: false,\n    right: false,\n    bottom: false\n  };\n}\nfunction hasGuidelines(moveable, ableName) {\n  var _a = moveable.props,\n    snappable = _a.snappable,\n    bounds = _a.bounds,\n    innerBounds = _a.innerBounds,\n    verticalGuidelines = _a.verticalGuidelines,\n    horizontalGuidelines = _a.horizontalGuidelines,\n    snapGridWidth = _a.snapGridWidth,\n    snapGridHeight = _a.snapGridHeight,\n    _b = moveable.state,\n    guidelines = _b.guidelines,\n    enableSnap = _b.enableSnap;\n  if (!snappable || !enableSnap || ableName && snappable !== true && snappable.indexOf(ableName) < 0) {\n    return false;\n  }\n  if (snapGridWidth || snapGridHeight || bounds || innerBounds || guidelines && guidelines.length || verticalGuidelines && verticalGuidelines.length || horizontalGuidelines && horizontalGuidelines.length) {\n    return true;\n  }\n  return false;\n}\nfunction getSnapDirections(snapDirections) {\n  if (snapDirections === false) {\n    return {};\n  } else if (snapDirections === true || !snapDirections) {\n    return {\n      left: true,\n      right: true,\n      top: true,\n      bottom: true\n    };\n  }\n  return snapDirections;\n}\nfunction mapSnapDirectionPoses(snapDirections, snapPoses) {\n  var nextSnapDirections = getSnapDirections(snapDirections);\n  var nextSnapPoses = {};\n  for (var name_1 in nextSnapDirections) {\n    if (name_1 in snapPoses && nextSnapDirections[name_1]) {\n      nextSnapPoses[name_1] = snapPoses[name_1];\n    }\n  }\n  return nextSnapPoses;\n}\nfunction splitSnapDirectionPoses(snapDirections, snapPoses) {\n  var nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n  var horizontalNames = HORIZONTAL_NAMES.filter(function (name) {\n    return name in nextSnapPoses;\n  });\n  var verticalNames = VERTICAL_NAMES.filter(function (name) {\n    return name in nextSnapPoses;\n  });\n  return {\n    horizontalNames: horizontalNames,\n    verticalNames: verticalNames,\n    horizontal: horizontalNames.map(function (name) {\n      return nextSnapPoses[name];\n    }),\n    vertical: verticalNames.map(function (name) {\n      return nextSnapPoses[name];\n    })\n  };\n}\nfunction calculateContainerPos(rootMatrix, containerRect, n) {\n  var clientPos = calculatePosition(rootMatrix, [containerRect.clientLeft, containerRect.clientTop], n);\n  return [containerRect.left + clientPos[0], containerRect.top + clientPos[1]];\n}\nfunction solveLineConstants(_a) {\n  var _b = __read(_a, 2),\n    point1 = _b[0],\n    point2 = _b[1];\n  var dx = point2[0] - point1[0];\n  var dy = point2[1] - point1[1];\n  if (Math.abs(dx) < TINY_NUM$1) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM$1) {\n    dy = 0;\n  }\n  // b > 0\n  // ax + by + c = 0\n  var a = 0;\n  var b = 0;\n  var c = 0;\n  if (!dx) {\n    // -x + 1 = 0\n    a = -1;\n    c = point1[0];\n  } else if (!dy) {\n    // y - 1 = 0\n    b = 1;\n    c = -point1[1];\n  } else {\n    // y = -a(x - x1) + y1\n    // ax + y + a * x1 - y1 = 0\n    a = -dy / dx;\n    b = 1;\n    c = a * point1[0] - point1[1];\n  }\n  return [a, b, c].map(function (v) {\n    return throttle(v, TINY_NUM$1);\n  });\n}\nvar NAME_snapRotationThreshold = \"snapRotationThreshold\";\nvar NAME_snapRotationDegrees = \"snapRotationDegrees\";\nvar NAME_snapHorizontalThreshold = \"snapHorizontalThreshold\";\nvar NAME_snapVerticalThreshold = \"snapVerticalThreshold\";\nfunction checkMoveableSnapPoses(moveable, posesX, posesY, dirXs, dirYs, customSnapVerticalThreshold, customSnapHorizontalThreshold) {\n  var _a;\n  if (dirXs === void 0) {\n    dirXs = [];\n  }\n  if (dirYs === void 0) {\n    dirYs = [];\n  }\n  var props = moveable.props;\n  var snapThresholdMultiples = ((_a = moveable.state.snapThresholdInfo) === null || _a === void 0 ? void 0 : _a.multiples) || [1, 1];\n  var snapHorizontalThreshold = selectValue(customSnapHorizontalThreshold, props[NAME_snapHorizontalThreshold], 5);\n  var snapVerticalThreshold = selectValue(customSnapVerticalThreshold, props[NAME_snapVerticalThreshold], 5);\n  return checkSnapPoses(moveable.state.guidelines, posesX, posesY, dirXs, dirYs, snapHorizontalThreshold, snapVerticalThreshold, snapThresholdMultiples);\n}\nfunction checkSnapPoses(guidelines, posesX, posesY, dirXs, dirYs, snapHorizontalThreshold, snapVerticalThreshold, multiples) {\n  return {\n    vertical: checkSnap(guidelines, \"vertical\", posesX, snapVerticalThreshold * multiples[0], dirXs),\n    horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapHorizontalThreshold * multiples[1], dirYs)\n  };\n}\nfunction checkSnapKeepRatio(moveable, startPos, endPos) {\n  var _a = __read(endPos, 2),\n    endX = _a[0],\n    endY = _a[1];\n  var _b = __read(startPos, 2),\n    startX = _b[0],\n    startY = _b[1];\n  var _c = __read(minus(endPos, startPos), 2),\n    dx = _c[0],\n    dy = _c[1];\n  var isBottom = dy > 0;\n  var isRight = dx > 0;\n  dx = getTinyDist(dx);\n  dy = getTinyDist(dy);\n  var verticalInfo = {\n    isSnap: false,\n    offset: 0,\n    pos: 0\n  };\n  var horizontalInfo = {\n    isSnap: false,\n    offset: 0,\n    pos: 0\n  };\n  if (dx === 0 && dy === 0) {\n    return {\n      vertical: verticalInfo,\n      horizontal: horizontalInfo\n    };\n  }\n  var _d = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : [], [], [], undefined, undefined),\n    verticalSnapInfo = _d.vertical,\n    horizontalSnapInfo = _d.horizontal;\n  verticalSnapInfo.posInfos.filter(function (_a) {\n    var pos = _a.pos;\n    return isRight ? pos >= startX : pos <= startX;\n  });\n  horizontalSnapInfo.posInfos.filter(function (_a) {\n    var pos = _a.pos;\n    return isBottom ? pos >= startY : pos <= startY;\n  });\n  verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n  horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n  var _e = getNearestSnapGuidelineInfo(verticalSnapInfo),\n    isVerticalSnap = _e.isSnap,\n    verticalGuideline = _e.guideline;\n  var _f = getNearestSnapGuidelineInfo(horizontalSnapInfo),\n    isHorizontalSnap = _f.isSnap,\n    horizontalGuideline = _f.guideline;\n  var horizontalPos = isHorizontalSnap ? horizontalGuideline.pos[1] : 0;\n  var verticalPos = isVerticalSnap ? verticalGuideline.pos[0] : 0;\n  if (dx === 0) {\n    if (isHorizontalSnap) {\n      horizontalInfo.isSnap = true;\n      horizontalInfo.pos = horizontalGuideline.pos[1];\n      horizontalInfo.offset = endY - horizontalInfo.pos;\n    }\n  } else if (dy === 0) {\n    if (isVerticalSnap) {\n      verticalInfo.isSnap = true;\n      verticalInfo.pos = verticalPos;\n      verticalInfo.offset = endX - verticalPos;\n    }\n  } else {\n    // y - y1 = a * (x - x1)\n    var a = dy / dx;\n    var b = endPos[1] - a * endX;\n    var y = 0;\n    var x = 0;\n    var isSnap = false;\n    if (isVerticalSnap) {\n      x = verticalPos;\n      y = a * x + b;\n      isSnap = true;\n    } else if (isHorizontalSnap) {\n      y = horizontalPos;\n      x = (y - b) / a;\n      isSnap = true;\n    }\n    if (isSnap) {\n      verticalInfo.isSnap = true;\n      verticalInfo.pos = x;\n      verticalInfo.offset = endX - x;\n      horizontalInfo.isSnap = true;\n      horizontalInfo.pos = y;\n      horizontalInfo.offset = endY - y;\n    }\n  }\n  return {\n    vertical: verticalInfo,\n    horizontal: horizontalInfo\n  };\n}\nfunction getStringDirection(dir) {\n  var stringDirection = \"\";\n  if (dir === -1 || dir === \"top\" || dir === \"left\") {\n    stringDirection = \"start\";\n  } else if (dir === 0 || dir === \"center\" || dir === \"middle\") {\n    stringDirection = \"center\";\n  } else if (dir === 1 || dir === \"right\" || dir === \"bottom\") {\n    stringDirection = \"end\";\n  }\n  return stringDirection;\n}\nfunction checkSnaps(moveable, rect, customSnapVerticalThreshold, customSnapHorizontalThreshold) {\n  var poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n  var result = checkMoveableSnapPoses(moveable, poses.vertical, poses.horizontal, poses.verticalNames.map(function (name) {\n    return getStringDirection(name);\n  }), poses.horizontalNames.map(function (name) {\n    return getStringDirection(name);\n  }), customSnapVerticalThreshold, customSnapHorizontalThreshold);\n  var horizontalDirection = getStringDirection(poses.horizontalNames[result.horizontal.index]);\n  var verticalDirection = getStringDirection(poses.verticalNames[result.vertical.index]);\n  return {\n    vertical: __assign(__assign({}, result.vertical), {\n      direction: verticalDirection\n    }),\n    horizontal: __assign(__assign({}, result.horizontal), {\n      direction: horizontalDirection\n    })\n  };\n}\nfunction getNearestSnapGuidelineInfo(snapInfo) {\n  var isSnap = snapInfo.isSnap;\n  if (!isSnap) {\n    return {\n      isSnap: false,\n      offset: 0,\n      dist: -1,\n      pos: 0,\n      guideline: null\n    };\n  }\n  var posInfo = snapInfo.posInfos[0];\n  var guidelineInfo = posInfo.guidelineInfos[0];\n  var offset = guidelineInfo.offset;\n  var dist = guidelineInfo.dist;\n  var guideline = guidelineInfo.guideline;\n  return {\n    isSnap: isSnap,\n    offset: offset,\n    dist: dist,\n    pos: posInfo.pos,\n    guideline: guideline\n  };\n}\nfunction checkSnap(guidelines, targetType, targetPoses, snapThreshold, dirs) {\n  var _a, _b;\n  if (dirs === void 0) {\n    dirs = [];\n  }\n  if (!guidelines || !guidelines.length) {\n    return {\n      isSnap: false,\n      index: -1,\n      direction: \"\",\n      posInfos: []\n    };\n  }\n  var isVertical = targetType === \"vertical\";\n  var posType = isVertical ? 0 : 1;\n  var snapPosInfos = targetPoses.map(function (targetPos, index) {\n    var direction = dirs[index] || \"\";\n    var guidelineInfos = guidelines.map(function (guideline) {\n      var pos = guideline.pos;\n      var offset = targetPos - pos[posType];\n      return {\n        offset: offset,\n        dist: abs(offset),\n        guideline: guideline,\n        direction: direction\n      };\n    }).filter(function (_a) {\n      var guideline = _a.guideline,\n        dist = _a.dist;\n      var type = guideline.type;\n      if (type !== targetType || dist > snapThreshold) {\n        return false;\n      }\n      return true;\n    }).sort(function (a, b) {\n      return a.dist - b.dist;\n    });\n    return {\n      pos: targetPos,\n      index: index,\n      guidelineInfos: guidelineInfos,\n      direction: direction\n    };\n  }).filter(function (snapPosInfo) {\n    return snapPosInfo.guidelineInfos.length > 0;\n  }).sort(function (a, b) {\n    return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n  });\n  var isSnap = snapPosInfos.length > 0;\n  return {\n    isSnap: isSnap,\n    index: isSnap ? snapPosInfos[0].index : -1,\n    direction: (_b = (_a = snapPosInfos[0]) === null || _a === void 0 ? void 0 : _a.direction) !== null && _b !== void 0 ? _b : \"\",\n    posInfos: snapPosInfos\n  };\n}\nfunction getSnapInfosByDirection(moveable,\n// pos1 pos2 pos3 pos4\nposes, snapDirection, customSnapVerticalThreshold, customSnapHorizontalThreshold) {\n  var dirs = [];\n  if (snapDirection[0] && snapDirection[1]) {\n    dirs = [snapDirection, [-snapDirection[0], snapDirection[1]], [snapDirection[0], -snapDirection[1]]];\n  } else if (!snapDirection[0] && !snapDirection[1]) {\n    [[-1, -1], [1, -1], [1, 1], [-1, 1]].forEach(function (dir, i, arr) {\n      var nextDir = arr[i + 1] || arr[0];\n      dirs.push(dir);\n      dirs.push([(dir[0] + nextDir[0]) / 2, (dir[1] + nextDir[1]) / 2]);\n    });\n  } else {\n    if (moveable.props.keepRatio) {\n      dirs.push([-1, -1], [-1, 1], [1, -1], [1, 1], snapDirection);\n    } else {\n      dirs.push.apply(dirs, __spreadArray([], __read(getPosesByDirection([[-1, -1], [1, -1], [-1, -1], [1, 1]], snapDirection)), false));\n      if (dirs.length > 1) {\n        dirs.push([(dirs[0][0] + dirs[1][0]) / 2, (dirs[0][1] + dirs[1][1]) / 2]);\n      }\n    }\n  }\n  var nextPoses = dirs.map(function (dir) {\n    return getPosByDirection(poses, dir);\n  });\n  var xs = nextPoses.map(function (pos) {\n    return pos[0];\n  });\n  var ys = nextPoses.map(function (pos) {\n    return pos[1];\n  });\n  var result = checkMoveableSnapPoses(moveable, xs, ys, dirs.map(function (dir) {\n    return getStringDirection(dir[0]);\n  }), dirs.map(function (dir) {\n    return getStringDirection(dir[1]);\n  }), customSnapVerticalThreshold, customSnapHorizontalThreshold);\n  var verticalDirection = getStringDirection(dirs.map(function (dir) {\n    return dir[0];\n  })[result.vertical.index]);\n  var horizontalDirection = getStringDirection(dirs.map(function (dir) {\n    return dir[1];\n  })[result.horizontal.index]);\n  return {\n    vertical: __assign(__assign({}, result.vertical), {\n      direction: verticalDirection\n    }),\n    horizontal: __assign(__assign({}, result.horizontal), {\n      direction: horizontalDirection\n    })\n  };\n}\nfunction checkSnapBoundPriority(a, b) {\n  var aDist = abs(a.offset);\n  var bDist = abs(b.offset);\n  if (a.isBound && b.isBound) {\n    return bDist - aDist;\n  } else if (a.isBound) {\n    return -1;\n  } else if (b.isBound) {\n    return 1;\n  } else if (a.isSnap && b.isSnap) {\n    return bDist - aDist;\n  } else if (a.isSnap) {\n    return -1;\n  } else if (b.isSnap) {\n    return 1;\n  } else if (aDist < TINY_NUM) {\n    return 1;\n  } else if (bDist < TINY_NUM) {\n    return -1;\n  }\n  return aDist - bDist;\n}\nfunction getNearOffsetInfo(offsets, index) {\n  return offsets.slice().sort(function (a, b) {\n    var aSign = a.sign[index];\n    var bSign = b.sign[index];\n    var aOffset = a.offset[index];\n    var bOffset = b.offset[index];\n    // -1 The positions of a and b do not change.\n    // 1 The positions of a and b are reversed.\n    if (!aSign) {\n      return 1;\n    } else if (!bSign) {\n      return -1;\n    }\n    return checkSnapBoundPriority({\n      isBound: a.isBound,\n      isSnap: a.isSnap,\n      offset: aOffset\n    }, {\n      isBound: b.isBound,\n      isSnap: b.isSnap,\n      offset: bOffset\n    });\n  })[0];\n}\nfunction getCheckSnapDirections(direction, fixedDirection, keepRatio) {\n  var directions = [];\n  // const fixedDirection = [-direction[0], -direction[1]];\n  if (keepRatio) {\n    if (abs(fixedDirection[0]) !== 1 || abs(fixedDirection[1]) !== 1) {\n      directions.push([fixedDirection, [-1, -1]], [fixedDirection, [-1, 1]], [fixedDirection, [1, -1]], [fixedDirection, [1, 1]]);\n    } else {\n      directions.push([fixedDirection, [direction[0], -direction[1]]], [fixedDirection, [-direction[0], direction[1]]]);\n    }\n    directions.push([fixedDirection, direction]);\n  } else {\n    if (direction[0] && direction[1] || !direction[0] && !direction[1]) {\n      var endDirection_1 = direction[0] ? direction : [1, 1];\n      [1, -1].forEach(function (signX) {\n        [1, -1].forEach(function (signY) {\n          var nextDirection = [signX * endDirection_1[0], signY * endDirection_1[1]];\n          if (fixedDirection[0] === nextDirection[0] && fixedDirection[1] === nextDirection[1]) {\n            return;\n          }\n          directions.push([fixedDirection, nextDirection]);\n        });\n      });\n    } else if (direction[0]) {\n      var signs = abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n      signs.forEach(function (sign) {\n        directions.push([[fixedDirection[0], -1], [sign * direction[0], -1]], [[fixedDirection[0], 0], [sign * direction[0], 0]], [[fixedDirection[0], 1], [sign * direction[0], 1]]);\n      });\n    } else if (direction[1]) {\n      var signs = abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n      signs.forEach(function (sign) {\n        directions.push([[-1, fixedDirection[1]], [-1, sign * direction[1]]], [[0, fixedDirection[1]], [0, sign * direction[1]]], [[1, fixedDirection[1]], [1, sign * direction[1]]]);\n      });\n    }\n  }\n  return directions;\n}\nfunction isStartLine(dot, line) {\n  // l    o     => true\n  // o    l    => false\n  var cx = average([line[0][0], line[1][0]]);\n  var cy = average([line[0][1], line[1][1]]);\n  return {\n    vertical: cx <= dot[0],\n    horizontal: cy <= dot[1]\n  };\n}\nfunction hitTestLine(dot, _a) {\n  var _b = __read(_a, 2),\n    pos1 = _b[0],\n    pos2 = _b[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (abs(dx) < TINY_NUM) {\n    dx = 0;\n  }\n  if (abs(dy) < TINY_NUM) {\n    dy = 0;\n  }\n  var test1;\n  var test2;\n  if (!dx) {\n    test1 = pos1[0];\n    test2 = dot[0];\n  } else if (!dy) {\n    test1 = pos1[1];\n    test2 = dot[1];\n  } else {\n    var a = dy / dx;\n    // y = a * (x - pos1) + pos1\n    test1 = a * (dot[0] - pos1[0]) + pos1[1];\n    test2 = dot[1];\n  }\n  return test1 - test2;\n}\nfunction isSameStartLine(dots, line, centerSign, error) {\n  if (error === void 0) {\n    error = TINY_NUM;\n  }\n  return dots.every(function (dot) {\n    var value = hitTestLine(dot, line);\n    var sign = value <= 0;\n    return sign === centerSign || abs(value) <= error;\n  });\n}\nfunction checkInnerBoundDot(pos, start, end, isStart, threshold) {\n  if (threshold === void 0) {\n    threshold = 0;\n  }\n  if (isStart && start - threshold <= pos || !isStart && pos <= end + threshold) {\n    // false 402 565 602 => 37 ([0, 37])\n    // true 400 524.9712603540036 600 => 124 ([124, 0])\n    // true 400 410 600 => 10 ([10, 0])\n    return {\n      isBound: true,\n      offset: isStart ? start - pos : end - pos\n    };\n  }\n  return {\n    isBound: false,\n    offset: 0\n  };\n}\nfunction checkInnerBound(moveable, _a) {\n  var line = _a.line,\n    centerSign = _a.centerSign,\n    verticalSign = _a.verticalSign,\n    horizontalSign = _a.horizontalSign,\n    lineConstants = _a.lineConstants;\n  var bounds = moveable.props.innerBounds;\n  if (!bounds) {\n    return {\n      isAllBound: false,\n      isBound: false,\n      isVerticalBound: false,\n      isHorizontalBound: false,\n      offset: [0, 0]\n    };\n  }\n  var left = bounds.left,\n    top = bounds.top,\n    width = bounds.width,\n    height = bounds.height;\n  var leftLine = [[left, top], [left, top + height]];\n  var topLine = [[left, top], [left + width, top]];\n  var rightLine = [[left + width, top], [left + width, top + height]];\n  var bottomLine = [[left, top + height], [left + width, top + height]];\n  if (isSameStartLine([[left, top], [left + width, top], [left, top + height], [left + width, top + height]], line, centerSign)) {\n    return {\n      isAllBound: false,\n      isBound: false,\n      isVerticalBound: false,\n      isHorizontalBound: false,\n      offset: [0, 0]\n    };\n  }\n  // test vertical\n  var topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n  var bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n  // test horizontal\n  var leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n  var rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n  var isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n  var isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n  var isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n  var isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n  var verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n  var horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n  var offset = [0, 0];\n  var isBound = false;\n  var isAllBound = false;\n  if (abs(horizontalOffset) < abs(verticalOffset)) {\n    offset = [verticalOffset, 0];\n    isBound = isVerticalBound;\n    isAllBound = isAllVerticalBound;\n  } else {\n    offset = [0, horizontalOffset];\n    isBound = isHorizontalBound;\n    isAllBound = isAllHorizontalBound;\n  }\n  return {\n    isAllBound: isAllBound,\n    isVerticalBound: isVerticalBound,\n    isHorizontalBound: isHorizontalBound,\n    isBound: isBound,\n    offset: offset\n  };\n}\nfunction checkLineBoundCollision(line, _a, boundLine, isStart, threshold, isRender) {\n  var _b = __read(_a, 2),\n    a = _b[0],\n    b = _b[1];\n  var dot1 = line[0];\n  // const dot2 = line[1];\n  var boundDot1 = boundLine[0];\n  var boundDot2 = boundLine[1];\n  // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n  // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n  var dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n  var dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n  var hasDx = b;\n  var hasDy = a;\n  var slope = -a / b;\n  // lineConstants\n  // ax + by + c = 0\n  // dx2 or dy2 is zero\n  if (!dx2) {\n    // vertical\n    // by + c = 0\n    if (isRender && !hasDy) {\n      // 90deg\n      return {\n        isBound: false,\n        offset: 0\n      };\n    } else if (hasDx) {\n      // ax + by + c = 0\n      // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n      var y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n      // boundDot1[1] <= y  <= boundDot2[1]\n      return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n    } else {\n      // ax + c = 0\n      var offset = boundDot1[0] - dot1[0];\n      var isBound = abs(offset) <= (threshold || 0);\n      return {\n        isBound: isBound,\n        offset: isBound ? offset : 0\n      };\n    }\n  } else if (!dy2) {\n    // horizontal\n    if (isRender && !hasDx) {\n      // 90deg\n      return {\n        isBound: false,\n        offset: 0\n      };\n    } else if (hasDy) {\n      // y = a * (x - x1) + y1\n      // x = (y - y1) / a + x1\n      // const a = dy1 / dx1;\n      // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n      var x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n      // boundDot1[0] <= x && x <= boundDot2[0]\n      return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n    } else {\n      var offset = boundDot1[1] - dot1[1];\n      var isBound = abs(offset) <= (threshold || 0);\n      return {\n        isBound: isBound,\n        offset: isBound ? offset : 0\n      };\n    }\n  }\n  return {\n    isBound: false,\n    offset: 0\n  };\n}\nfunction getInnerBoundInfo(moveable, lineInfos, datas) {\n  return lineInfos.map(function (info) {\n    var _a = checkInnerBound(moveable, info),\n      isBound = _a.isBound,\n      offset = _a.offset,\n      isVerticalBound = _a.isVerticalBound,\n      isHorizontalBound = _a.isHorizontalBound;\n    var multiple = info.multiple;\n    var sizeOffset = getDragDist({\n      datas: datas,\n      distX: offset[0],\n      distY: offset[1]\n    }).map(function (size, i) {\n      return size * (multiple[i] ? 2 / multiple[i] : 0);\n    });\n    return {\n      sign: multiple,\n      isBound: isBound,\n      isVerticalBound: isVerticalBound,\n      isHorizontalBound: isHorizontalBound,\n      isSnap: false,\n      offset: sizeOffset\n    };\n  });\n}\nfunction getInnerBoundDragInfo(moveable, poses, datas) {\n  var _a;\n  var lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(function (info) {\n    return __assign(__assign({}, info), {\n      multiple: info.multiple.map(function (dir) {\n        return abs(dir) * 2;\n      })\n    });\n  });\n  var innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n  var widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n  var heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n  var verticalOffset = 0;\n  var horizontalOffset = 0;\n  var isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n  var isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n  if (isVerticalBound || isHorizontalBound) {\n    _a = __read(getInverseDragDist({\n      datas: datas,\n      distX: -widthOffsetInfo.offset[0],\n      distY: -heightOffsetInfo.offset[1]\n    }), 2), verticalOffset = _a[0], horizontalOffset = _a[1];\n  }\n  return {\n    vertical: {\n      isBound: isVerticalBound,\n      offset: verticalOffset\n    },\n    horizontal: {\n      isBound: isHorizontalBound,\n      offset: horizontalOffset\n    }\n  };\n}\nfunction getCheckSnapLineDirections(direction, keepRatio) {\n  var lineDirections = [];\n  var x = direction[0];\n  var y = direction[1];\n  if (x && y) {\n    lineDirections.push([[0, y * 2], direction, [-x, y]], [[x * 2, 0], direction, [x, -y]]);\n  } else if (x) {\n    // vertcal\n    lineDirections.push([[x * 2, 0], [x, 1], [x, -1]]);\n    if (keepRatio) {\n      lineDirections.push([[0, -1], [x, -1], [-x, -1]], [[0, 1], [x, 1], [-x, 1]]);\n    }\n  } else if (y) {\n    // horizontal\n    lineDirections.push([[0, y * 2], [1, y], [-1, y]]);\n    if (keepRatio) {\n      lineDirections.push([[-1, 0], [-1, y], [-1, -y]], [[1, 0], [1, y], [1, -y]]);\n    }\n  } else {\n    // [0, 0] to all direction\n    lineDirections.push([[-1, 0], [-1, -1], [-1, 1]], [[1, 0], [1, -1], [1, 1]], [[0, -1], [-1, -1], [1, -1]], [[0, 1], [-1, 1], [1, 1]]);\n  }\n  return lineDirections;\n}\nfunction getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio) {\n  var _a = moveable.state,\n    allMatrix = _a.allMatrix,\n    is3d = _a.is3d;\n  var virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n  var center = getPosByDirection(virtualPoses, [0, 0]);\n  return getCheckSnapLineDirections(direction, keepRatio).map(function (_a) {\n    var _b = __read(_a, 3),\n      multiple = _b[0],\n      dir1 = _b[1],\n      dir2 = _b[2];\n    var virtualLine = [getPosByDirection(virtualPoses, dir1), getPosByDirection(virtualPoses, dir2)];\n    var lineConstants = solveLineConstants(virtualLine);\n    var _c = isStartLine(center, virtualLine),\n      verticalSign = _c.vertical,\n      horizontalSign = _c.horizontal;\n    var centerSign = hitTestLine(center, virtualLine) <= 0;\n    return {\n      multiple: multiple,\n      centerSign: centerSign,\n      verticalSign: verticalSign,\n      horizontalSign: horizontalSign,\n      lineConstants: lineConstants,\n      line: [getPosByDirection(poses, dir1), getPosByDirection(poses, dir2)]\n    };\n  });\n}\nfunction isBoundRotate(relativePoses, boundDots, center, rad) {\n  var nextPoses = rad ? relativePoses.map(function (pos) {\n    return rotate(pos, rad);\n  }) : relativePoses;\n  return [[nextPoses[0], nextPoses[1]], [nextPoses[1], nextPoses[3]], [nextPoses[3], nextPoses[2]], [nextPoses[2], nextPoses[0]]].some(function (line) {\n    var centerSign = hitTestLine(center, line) <= 0;\n    return !isSameStartLine(boundDots, line, centerSign);\n  });\n}\nfunction getDistPointLine(_a) {\n  // x = 0, y = 0\n  // d = (ax + by + c) / root(a2 + b2)\n  var _b = __read(_a, 2),\n    pos1 = _b[0],\n    pos2 = _b[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (!dx) {\n    return abs(pos1[0]);\n  }\n  if (!dy) {\n    return abs(pos1[1]);\n  }\n  // y - y1 = a(x - x1)\n  // 0 = ax -y + -a * x1 + y1\n  var a = dy / dx;\n  return abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine(_a) {\n  var _b = __read(_a, 2),\n    pos1 = _b[0],\n    pos2 = _b[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (!dx) {\n    return [pos1[0], 0];\n  }\n  if (!dy) {\n    return [0, pos1[1]];\n  }\n  var a = dy / dx;\n  // y - y1 = a (x  - x1)\n  // y = ax - a * x1 + y1\n  var b = -a * pos1[0] + pos1[1];\n  // y = ax + b = -1/a x\n  // x = -b / (a + 1 / a)\n  // y = b / (1 + 1 / a^2)\n  return [-b / (a + 1 / a), b / (a * a + 1)];\n}\nfunction checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin, rotation) {\n  var bounds = moveable.props.innerBounds;\n  var rad = rotation * Math.PI / 180;\n  if (!bounds) {\n    return [];\n  }\n  var left = bounds.left,\n    top = bounds.top,\n    width = bounds.width,\n    height = bounds.height;\n  var relativeLeft = left - origin[0];\n  var relativeRight = left + width - origin[0];\n  var relativeTop = top - origin[1];\n  var relativeBottom = top + height - origin[1];\n  var dots = [[relativeLeft, relativeTop], [relativeRight, relativeTop], [relativeLeft, relativeBottom], [relativeRight, relativeBottom]];\n  var center = getPosByDirection(nextPoses, [0, 0]);\n  if (!isBoundRotate(nextPoses, dots, center, 0)) {\n    return [];\n  }\n  var result = [];\n  var dotInfos = dots.map(function (dot) {\n    return [getDistSize(dot), getRad([0, 0], dot)];\n  });\n  [[nextPoses[0], nextPoses[1]], [nextPoses[1], nextPoses[3]], [nextPoses[3], nextPoses[2]], [nextPoses[2], nextPoses[0]]].forEach(function (line) {\n    var lineRad = getRad([0, 0], solveReverseLine(line));\n    var lineDist = getDistPointLine(line);\n    result.push.apply(result, __spreadArray([], __read(dotInfos.filter(function (_a) {\n      var _b = __read(_a, 1),\n        dotDist = _b[0];\n      return dotDist && lineDist <= dotDist;\n    }).map(function (_a) {\n      var _b = __read(_a, 2),\n        dotDist = _b[0],\n        dotRad = _b[1];\n      var distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n      var nextRad1 = dotRad + distRad;\n      var nextRad2 = dotRad - distRad;\n      return [rad + nextRad1 - lineRad, rad + nextRad2 - lineRad];\n    }).reduce(function (prev, cur) {\n      prev.push.apply(prev, __spreadArray([], __read(cur), false));\n      return prev;\n    }, []).filter(function (nextRad) {\n      return !isBoundRotate(prevPoses, dots, center, nextRad);\n    }).map(function (nextRad) {\n      return throttle(nextRad * 180 / Math.PI, TINY_NUM);\n    })), false));\n  });\n  return result;\n}\nfunction checkInnerBoundPoses(moveable) {\n  var innerBounds = moveable.props.innerBounds;\n  var boundMap = getInitialBounds();\n  if (!innerBounds) {\n    return {\n      boundMap: boundMap,\n      vertical: [],\n      horizontal: []\n    };\n  }\n  var _a = moveable.getRect(),\n    pos1 = _a.pos1,\n    pos2 = _a.pos2,\n    pos3 = _a.pos3,\n    pos4 = _a.pos4;\n  var poses = [pos1, pos2, pos3, pos4];\n  var center = getPosByDirection(poses, [0, 0]);\n  var left = innerBounds.left,\n    top = innerBounds.top,\n    width = innerBounds.width,\n    height = innerBounds.height;\n  var leftLine = [[left, top], [left, top + height]];\n  var topLine = [[left, top], [left + width, top]];\n  var rightLine = [[left + width, top], [left + width, top + height]];\n  var bottomLine = [[left, top + height], [left + width, top + height]];\n  var lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n  var horizontalPoses = [];\n  var verticalPoses = [];\n  lineInfos.forEach(function (lineInfo) {\n    var line = lineInfo.line,\n      lineConstants = lineInfo.lineConstants;\n    var _a = isStartLine(center, line),\n      isHorizontalStart = _a.horizontal,\n      isVerticalStart = _a.vertical;\n    // test vertical\n    var topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n    var bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n    // test horizontal\n    var leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n    var rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n    if (topBoundInfo.isBound && !boundMap.top) {\n      horizontalPoses.push(top);\n      boundMap.top = true;\n    }\n    if (bottomBoundInfo.isBound && !boundMap.bottom) {\n      horizontalPoses.push(top + height);\n      boundMap.bottom = true;\n    }\n    if (leftBoundInfo.isBound && !boundMap.left) {\n      verticalPoses.push(left);\n      boundMap.left = true;\n    }\n    if (rightBoundInfo.isBound && !boundMap.right) {\n      verticalPoses.push(left + width);\n      boundMap.right = true;\n    }\n  });\n  return {\n    boundMap: boundMap,\n    horizontal: horizontalPoses,\n    vertical: verticalPoses\n  };\n}\nfunction solveEquation(pos1, pos2, snapOffset, isVertical) {\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (abs(dx) < TINY_NUM$1) {\n    dx = 0;\n  }\n  if (abs(dy) < TINY_NUM$1) {\n    dy = 0;\n  }\n  if (!dx) {\n    // y = 0 * x + b\n    // only horizontal\n    if (!isVertical) {\n      return [0, snapOffset];\n    }\n    return [0, 0];\n  }\n  if (!dy) {\n    // only vertical\n    if (isVertical) {\n      return [snapOffset, 0];\n    }\n    return [0, 0];\n  }\n  // y = ax + b\n  var a = dy / dx;\n  var b = pos1[1] - a * pos1[0];\n  if (isVertical) {\n    // y = a * x + b\n    var y = a * (pos2[0] + snapOffset) + b;\n    return [snapOffset, y - pos2[1]];\n  } else {\n    // x = (y - b) / a\n    var x = (pos2[1] + snapOffset - b) / a;\n    return [x - pos2[0], snapOffset];\n  }\n}\nfunction solveNextOffset(pos1, pos2, offset, isVertical, datas) {\n  var sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n  if (!sizeOffset) {\n    return {\n      isOutside: false,\n      offset: [0, 0]\n    };\n  }\n  var size = getDist$1(pos1, pos2);\n  var dist1 = getDist$1(sizeOffset, pos1);\n  var dist2 = getDist$1(sizeOffset, pos2);\n  var isOutside = dist1 > size || dist2 > size;\n  var _a = __read(getDragDist({\n      datas: datas,\n      distX: sizeOffset[0],\n      distY: sizeOffset[1]\n    }), 2),\n    widthOffset = _a[0],\n    heightOffset = _a[1];\n  return {\n    offset: [widthOffset, heightOffset],\n    isOutside: isOutside\n  };\n}\nfunction getSnapBound(boundInfo, snapInfo) {\n  if (boundInfo.isBound) {\n    return boundInfo.offset;\n  } else if (snapInfo.isSnap) {\n    return getNearestSnapGuidelineInfo(snapInfo).offset;\n  }\n  return 0;\n}\nfunction checkThrottleDragRotate(throttleDragRotate, _a, _b, _c, _d) {\n  var _e = __read(_a, 2),\n    distX = _e[0],\n    distY = _e[1];\n  var _f = __read(_b, 2),\n    isVerticalBound = _f[0],\n    isHorizontalBound = _f[1];\n  var _g = __read(_c, 2),\n    isVerticalSnap = _g[0],\n    isHorizontalSnap = _g[1];\n  var _h = __read(_d, 2),\n    verticalOffset = _h[0],\n    horizontalOffset = _h[1];\n  var offsetX = -verticalOffset;\n  var offsetY = -horizontalOffset;\n  if (throttleDragRotate && distX && distY) {\n    offsetX = 0;\n    offsetY = 0;\n    var adjustPoses = [];\n    if (isVerticalBound && isHorizontalBound) {\n      adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n    } else if (isVerticalBound) {\n      adjustPoses.push([verticalOffset, 0]);\n    } else if (isHorizontalBound) {\n      adjustPoses.push([0, horizontalOffset]);\n    } else if (isVerticalSnap && isHorizontalSnap) {\n      adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n    } else if (isVerticalSnap) {\n      adjustPoses.push([verticalOffset, 0]);\n    } else if (isHorizontalSnap) {\n      adjustPoses.push([0, horizontalOffset]);\n    }\n    if (adjustPoses.length) {\n      adjustPoses.sort(function (a, b) {\n        return getDistSize(minus([distX, distY], a)) - getDistSize(minus([distX, distY], b));\n      });\n      var adjustPos = adjustPoses[0];\n      if (adjustPos[0] && abs(distX) > TINY_NUM$1) {\n        offsetX = -adjustPos[0];\n        offsetY = distY * abs(distX + offsetX) / abs(distX) - distY;\n      } else if (adjustPos[1] && abs(distY) > TINY_NUM$1) {\n        var prevDistY = distY;\n        offsetY = -adjustPos[1];\n        offsetX = distX * abs(distY + offsetY) / abs(prevDistY) - distX;\n      }\n      if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n        if (abs(offsetX) > TINY_NUM$1 && abs(offsetX) < abs(verticalOffset)) {\n          var scale = abs(verticalOffset) / abs(offsetX);\n          offsetX *= scale;\n          offsetY *= scale;\n        } else if (abs(offsetY) > TINY_NUM$1 && abs(offsetY) < abs(horizontalOffset)) {\n          var scale = abs(horizontalOffset) / abs(offsetY);\n          offsetX *= scale;\n          offsetY *= scale;\n        } else {\n          offsetX = maxOffset(-verticalOffset, offsetX);\n          offsetY = maxOffset(-horizontalOffset, offsetY);\n        }\n      }\n    }\n  } else {\n    offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n    offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n  }\n  return [offsetX, offsetY];\n}\nfunction checkSnapBoundsDrag(moveable, distX, distY, throttleDragRotate, ignoreSnap, datas) {\n  if (!hasGuidelines(moveable, \"draggable\")) {\n    return [{\n      isSnap: false,\n      isBound: false,\n      offset: 0\n    }, {\n      isSnap: false,\n      isBound: false,\n      offset: 0\n    }];\n  }\n  var poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n  var _a = getRect(poses),\n    left = _a.left,\n    right = _a.right,\n    top = _a.top,\n    bottom = _a.bottom;\n  var boundPoses = {\n    horizontal: poses.map(function (pos) {\n      return pos[1];\n    }),\n    vertical: poses.map(function (pos) {\n      return pos[0];\n    })\n  };\n  var snapDirections = getSnapDirections(moveable.props.snapDirections);\n  var snapPoses = splitSnapDirectionPoses(snapDirections, {\n    left: left,\n    right: right,\n    top: top,\n    bottom: bottom,\n    center: (left + right) / 2,\n    middle: (top + bottom) / 2\n  });\n  var _b = checkMoveableSnapBounds(moveable, ignoreSnap, snapPoses, boundPoses),\n    verticalSnapBoundInfo = _b.vertical,\n    horizontalSnapBoundInfo = _b.horizontal;\n  var _c = getInnerBoundDragInfo(moveable, poses, datas),\n    verticalInnerBoundInfo = _c.vertical,\n    horizontalInnerBoundInfo = _c.horizontal;\n  var isVerticalSnap = verticalSnapBoundInfo.isSnap;\n  var isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n  var isVerticalBound = verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n  var isHorizontalBound = horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n  var verticalOffset = maxOffset(verticalSnapBoundInfo.offset, verticalInnerBoundInfo.offset);\n  var horizontalOffset = maxOffset(horizontalSnapBoundInfo.offset, horizontalInnerBoundInfo.offset);\n  var _d = __read(checkThrottleDragRotate(throttleDragRotate, [distX, distY], [isVerticalBound, isHorizontalBound], [isVerticalSnap, isHorizontalSnap], [verticalOffset, horizontalOffset]), 2),\n    offsetX = _d[0],\n    offsetY = _d[1];\n  return [{\n    isBound: isVerticalBound,\n    isSnap: isVerticalSnap,\n    offset: offsetX\n  }, {\n    isBound: isHorizontalBound,\n    isSnap: isHorizontalSnap,\n    offset: offsetY\n  }];\n}\nfunction checkMoveableSnapBounds(moveable, ignoreSnap, poses, boundPoses) {\n  if (boundPoses === void 0) {\n    boundPoses = poses;\n  }\n  var _a = checkBoundPoses(getBounds(moveable), boundPoses.vertical, boundPoses.horizontal),\n    horizontalBoundInfos = _a.horizontal,\n    verticalBoundInfos = _a.vertical;\n  var _b = ignoreSnap ? {\n      horizontal: {\n        isSnap: false,\n        index: -1\n      },\n      vertical: {\n        isSnap: false,\n        index: -1\n      }\n    } : checkMoveableSnapPoses(moveable, poses.vertical, poses.horizontal, undefined, undefined, undefined, undefined),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n  var verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n  var horizontalDist = abs(horizontalOffset);\n  var verticalDist = abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfos[0].isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      snapIndex: horizontalSnapInfo.index,\n      offset: horizontalOffset,\n      dist: horizontalDist,\n      bounds: horizontalBoundInfos,\n      snap: horizontalSnapInfo\n    },\n    vertical: {\n      isBound: verticalBoundInfos[0].isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      snapIndex: verticalSnapInfo.index,\n      offset: verticalOffset,\n      dist: verticalDist,\n      bounds: verticalBoundInfos,\n      snap: verticalSnapInfo\n    }\n  };\n}\nfunction checkSnapBounds(guideines, bounds, posesX, posesY, snapHorizontalThreshold, snapVerticalThreshold, multiples) {\n  if (multiples === void 0) {\n    multiples = [1, 1];\n  }\n  var _a = checkBoundPoses(bounds, posesX, posesY),\n    horizontalBoundInfos = _a.horizontal,\n    verticalBoundInfos = _a.vertical;\n  // options.isRequest ? {\n  //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n  //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n  // } :\n  var _b = checkSnapPoses(guideines, posesX, posesY, [], [], snapHorizontalThreshold, snapVerticalThreshold, multiples),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n  var verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n  var horizontalDist = abs(horizontalOffset);\n  var verticalDist = abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfos[0].isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      snapIndex: horizontalSnapInfo.index,\n      offset: horizontalOffset,\n      dist: horizontalDist,\n      bounds: horizontalBoundInfos,\n      snap: horizontalSnapInfo\n    },\n    vertical: {\n      isBound: verticalBoundInfos[0].isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      snapIndex: verticalSnapInfo.index,\n      offset: verticalOffset,\n      dist: verticalDist,\n      bounds: verticalBoundInfos,\n      snap: verticalSnapInfo\n    }\n  };\n}\nfunction checkSnapRightLine(startPos, endPos, snapBoundInfo, keepRatio) {\n  var rad = getRad(startPos, endPos) / Math.PI * 180;\n  var _a = snapBoundInfo.vertical,\n    isVerticalBound = _a.isBound,\n    isVerticalSnap = _a.isSnap,\n    verticalDist = _a.dist,\n    _b = snapBoundInfo.horizontal,\n    isHorizontalBound = _b.isBound,\n    isHorizontalSnap = _b.isSnap,\n    horizontalDist = _b.dist;\n  var rad180 = rad % 180;\n  var isHorizontalLine = rad180 < 3 || rad180 > 177;\n  var isVerticalLine = rad180 > 87 && rad180 < 93;\n  if (horizontalDist < verticalDist) {\n    if (isVerticalBound || isVerticalSnap && !isVerticalLine && (!keepRatio || !isHorizontalLine)) {\n      return \"vertical\";\n    }\n  }\n  if (isHorizontalBound || isHorizontalSnap && !isHorizontalLine && (!keepRatio || !isVerticalLine)) {\n    return \"horizontal\";\n  }\n  return \"\";\n}\nfunction getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas) {\n  return directions.map(function (_a) {\n    var _b = __read(_a, 2),\n      startDirection = _b[0],\n      endDirection = _b[1];\n    var otherStartPos = getPosByDirection(poses, startDirection);\n    var otherEndPos = getPosByDirection(poses, endDirection);\n    var snapBoundInfo = keepRatio ? checkSnapBoundsKeepRatio(moveable, otherStartPos, otherEndPos, isRequest) : checkMoveableSnapBounds(moveable, isRequest, {\n      vertical: [otherEndPos[0]],\n      horizontal: [otherEndPos[1]]\n    });\n    var _c = snapBoundInfo.horizontal,\n      // dist: otherHorizontalDist,\n      otherHorizontalOffset = _c.offset,\n      isOtherHorizontalBound = _c.isBound,\n      isOtherHorizontalSnap = _c.isSnap,\n      _d = snapBoundInfo.vertical,\n      // dist: otherVerticalDist,\n      otherVerticalOffset = _d.offset,\n      isOtherVerticalBound = _d.isBound,\n      isOtherVerticalSnap = _d.isSnap;\n    var multiple = minus(endDirection, startDirection);\n    if (!otherVerticalOffset && !otherHorizontalOffset) {\n      return {\n        isBound: isOtherVerticalBound || isOtherHorizontalBound,\n        isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n        sign: multiple,\n        offset: [0, 0]\n      };\n    }\n    var snapLine = checkSnapRightLine(otherStartPos, otherEndPos, snapBoundInfo, keepRatio);\n    if (!snapLine) {\n      return {\n        sign: multiple,\n        isBound: false,\n        isSnap: false,\n        offset: [0, 0]\n      };\n    }\n    var isVertical = snapLine === \"vertical\";\n    var sizeOffset = [0, 0];\n    if (!keepRatio && abs(endDirection[0]) === 1 && abs(endDirection[1]) === 1 && startDirection[0] !== endDirection[0] && startDirection[1] !== endDirection[1]) {\n      sizeOffset = getDragDist({\n        datas: datas,\n        distX: -otherVerticalOffset,\n        distY: -otherHorizontalOffset\n      });\n    } else {\n      sizeOffset = solveNextOffset(otherStartPos, otherEndPos, -(isVertical ? otherVerticalOffset : otherHorizontalOffset), isVertical, datas).offset;\n    }\n    sizeOffset = sizeOffset.map(function (size, i) {\n      return size * (multiple[i] ? 2 / multiple[i] : 0);\n    });\n    return {\n      sign: multiple,\n      isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n      isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n      offset: sizeOffset\n    };\n  });\n}\nfunction getSnapBoundOffset(boundInfo, snapInfo) {\n  if (boundInfo.isBound) {\n    return boundInfo.offset;\n  } else if (snapInfo.isSnap) {\n    return snapInfo.offset;\n  }\n  return 0;\n}\nfunction checkSnapBoundsKeepRatio(moveable, startPos, endPos, isRequest) {\n  var _a = checkBoundKeepRatio(moveable, startPos, endPos),\n    horizontalBoundInfo = _a.horizontal,\n    verticalBoundInfo = _a.vertical;\n  var _b = isRequest ? {\n      horizontal: {\n        isSnap: false\n      },\n      vertical: {\n        isSnap: false\n      }\n    } : checkSnapKeepRatio(moveable, startPos, endPos),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBoundOffset(horizontalBoundInfo, horizontalSnapInfo);\n  var verticalOffset = getSnapBoundOffset(verticalBoundInfo, verticalSnapInfo);\n  var horizontalDist = abs(horizontalOffset);\n  var verticalDist = abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfo.isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      offset: horizontalOffset,\n      dist: horizontalDist\n    },\n    vertical: {\n      isBound: verticalBoundInfo.isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      offset: verticalOffset,\n      dist: verticalDist\n    }\n  };\n}\nfunction checkMaxBounds(moveable, poses, direction, fixedPosition, datas) {\n  var fixedDirection = [-direction[0], -direction[1]];\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  var bounds = moveable.props.bounds;\n  var maxWidth = Infinity;\n  var maxHeight = Infinity;\n  if (bounds) {\n    var directions = [[direction[0], -direction[1]], [-direction[0], direction[1]]];\n    var _b = bounds.left,\n      left_1 = _b === void 0 ? -Infinity : _b,\n      _c = bounds.top,\n      top_1 = _c === void 0 ? -Infinity : _c,\n      _d = bounds.right,\n      right_1 = _d === void 0 ? Infinity : _d,\n      _e = bounds.bottom,\n      bottom_1 = _e === void 0 ? Infinity : _e;\n    directions.forEach(function (otherDirection) {\n      var isCheckVertical = otherDirection[0] !== fixedDirection[0];\n      var isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n      var otherPos = getPosByDirection(poses, otherDirection);\n      var deg = getRad(fixedPosition, otherPos) * 360 / Math.PI;\n      if (isCheckHorizontal) {\n        var nextOtherPos = otherPos.slice();\n        if (abs(deg - 360) < 2 || abs(deg - 180) < 2) {\n          nextOtherPos[1] = fixedPosition[1];\n        }\n        var _a = solveNextOffset(fixedPosition, nextOtherPos, (fixedPosition[1] < otherPos[1] ? bottom_1 : top_1) - otherPos[1], false, datas),\n          _b = __read(_a.offset, 2),\n          heightOffset = _b[1],\n          isHeightOutside = _a.isOutside;\n        if (!isNaN(heightOffset)) {\n          maxHeight = height + (isHeightOutside ? 1 : -1) * abs(heightOffset);\n        }\n      }\n      if (isCheckVertical) {\n        var nextOtherPos = otherPos.slice();\n        if (abs(deg - 90) < 2 || abs(deg - 270) < 2) {\n          nextOtherPos[0] = fixedPosition[0];\n        }\n        var _c = solveNextOffset(fixedPosition, nextOtherPos, (fixedPosition[0] < otherPos[0] ? right_1 : left_1) - otherPos[0], true, datas),\n          _d = __read(_c.offset, 1),\n          widthOffset = _d[0],\n          isWidthOutside = _c.isOutside;\n        if (!isNaN(widthOffset)) {\n          maxWidth = width + (isWidthOutside ? 1 : -1) * abs(widthOffset);\n        }\n      }\n    });\n  }\n  return {\n    maxWidth: maxWidth,\n    maxHeight: maxHeight\n  };\n}\n\n/**\r\n * @namespace Draggable\r\n * @memberof Moveable\r\n * @description Draggable refers to the ability to drag and move targets.\r\n */\nvar Draggable = {\n  name: \"draggable\",\n  props: [\"draggable\", \"throttleDrag\", \"throttleDragRotate\", \"hideThrottleDragRotateLine\", \"startDragRotate\", \"edgeDraggable\"],\n  events: [\"dragStart\", \"drag\", \"dragEnd\", \"dragGroupStart\", \"dragGroup\", \"dragGroupEnd\"],\n  requestStyle: function () {\n    return [\"left\", \"top\", \"right\", \"bottom\"];\n  },\n  requestChildStyle: function () {\n    return [\"left\", \"top\", \"right\", \"bottom\"];\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      hideThrottleDragRotateLine = _a.hideThrottleDragRotateLine,\n      throttleDragRotate = _a.throttleDragRotate,\n      zoom = _a.zoom;\n    var _b = moveable.getState(),\n      dragInfo = _b.dragInfo,\n      beforeOrigin = _b.beforeOrigin;\n    if (hideThrottleDragRotateLine || !throttleDragRotate || !dragInfo) {\n      return [];\n    }\n    var dist = dragInfo.dist;\n    if (!dist[0] && !dist[1]) {\n      return [];\n    }\n    var width = getDistSize(dist);\n    var rad = getRad(dist, [0, 0]);\n    return [React.createElement(\"div\", {\n      className: prefix(\"line\", \"horizontal\", \"dragline\", \"dashed\"),\n      key: \"dragRotateGuideline\",\n      style: {\n        width: \"\".concat(width, \"px\"),\n        transform: \"translate(\".concat(beforeOrigin[0], \"px, \").concat(beforeOrigin[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\")\n      }\n    })];\n  },\n  dragStart: function (moveable, e) {\n    var datas = e.datas,\n      parentEvent = e.parentEvent,\n      parentGesto = e.parentGesto;\n    var state = moveable.state;\n    var gestos = state.gestos,\n      style = state.style;\n    if (gestos.draggable) {\n      return false;\n    }\n    gestos.draggable = parentGesto || moveable.targetGesto;\n    datas.datas = {};\n    datas.left = parseFloat(style.left || \"\") || 0;\n    datas.top = parseFloat(style.top || \"\") || 0;\n    datas.bottom = parseFloat(style.bottom || \"\") || 0;\n    datas.right = parseFloat(style.right || \"\") || 0;\n    datas.startValue = [0, 0];\n    setDragStart(moveable, e);\n    setDefaultTransformIndex(moveable, e, \"translate\");\n    startCheckSnapDrag(moveable, datas);\n    datas.prevDist = [0, 0];\n    datas.prevBeforeDist = [0, 0];\n    datas.isDrag = false;\n    datas.deltaOffset = [0, 0];\n    var params = fillParams(moveable, e, __assign({\n      set: function (translate) {\n        datas.startValue = translate;\n      }\n    }, fillTransformStartEvent(moveable, e)));\n    var result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n    if (result !== false) {\n      datas.isDrag = true;\n      moveable.state.dragInfo = {\n        startRect: moveable.getRect(),\n        dist: [0, 0]\n      };\n    } else {\n      gestos.draggable = null;\n      datas.isPinch = false;\n    }\n    return datas.isDrag ? params : false;\n  },\n  drag: function (moveable, e) {\n    if (!e) {\n      return;\n    }\n    resolveTransformEvent(moveable, e, \"translate\");\n    var datas = e.datas,\n      parentEvent = e.parentEvent,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      deltaOffset = e.deltaOffset,\n      useSnap = e.useSnap,\n      isRequest = e.isRequest,\n      isGroup = e.isGroup,\n      parentThrottleDrag = e.parentThrottleDrag;\n    var distX = e.distX,\n      distY = e.distY;\n    var isDrag = datas.isDrag,\n      prevDist = datas.prevDist,\n      prevBeforeDist = datas.prevBeforeDist,\n      startValue = datas.startValue;\n    if (!isDrag) {\n      return;\n    }\n    if (deltaOffset) {\n      distX += deltaOffset[0];\n      distY += deltaOffset[1];\n    }\n    var props = moveable.props;\n    var parentMoveable = props.parentMoveable;\n    var throttleDrag = isGroup ? 0 : props.throttleDrag || parentThrottleDrag || 0;\n    var throttleDragRotate = parentEvent ? 0 : props.throttleDragRotate || 0;\n    var dragRotateRad = 0;\n    var isVerticalSnap = false;\n    var isVerticalBound = false;\n    var isHorizontalSnap = false;\n    var isHorizontalBound = false;\n    if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n      var startDragRotate = props.startDragRotate || 0;\n      var deg = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate) - startDragRotate;\n      var ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n      var rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n      var r = getDistSize([rx, ry]);\n      dragRotateRad = deg * Math.PI / 180;\n      distX = r * Math.cos(dragRotateRad);\n      distY = r * Math.sin(dragRotateRad);\n    }\n    if (!isPinch && !parentEvent && !parentFlag) {\n      var _a = __read(checkSnapBoundsDrag(moveable, distX, distY, throttleDragRotate, !useSnap && isRequest || deltaOffset, datas), 2),\n        verticalInfo = _a[0],\n        horizontalInfo = _a[1];\n      isVerticalSnap = verticalInfo.isSnap;\n      isVerticalBound = verticalInfo.isBound;\n      isHorizontalSnap = horizontalInfo.isSnap;\n      isHorizontalBound = horizontalInfo.isBound;\n      var verticalOffset = verticalInfo.offset;\n      var horizontalOffset = horizontalInfo.offset;\n      distX += verticalOffset;\n      distY += horizontalOffset;\n    }\n    var beforeTranslate = plus(getBeforeDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), startValue);\n    var translate = plus(getTransformDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), startValue);\n    throttleArray(translate, TINY_NUM);\n    throttleArray(beforeTranslate, TINY_NUM);\n    if (!throttleDragRotate) {\n      if (!isVerticalSnap && !isVerticalBound) {\n        translate[0] = throttle(translate[0], throttleDrag);\n        beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\n      }\n      if (!isHorizontalSnap && !isHorizontalBound) {\n        translate[1] = throttle(translate[1], throttleDrag);\n        beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\n      }\n    }\n    var beforeDist = minus(beforeTranslate, startValue);\n    var dist = minus(translate, startValue);\n    var delta = minus(dist, prevDist);\n    var beforeDelta = minus(beforeDist, prevBeforeDist);\n    datas.prevDist = dist;\n    datas.prevBeforeDist = beforeDist;\n    datas.passDelta = delta; //distX - (datas.passDistX || 0);\n    // datas.passDeltaY = distY - (datas.passDistY || 0);\n    datas.passDist = dist; //distX;\n    // datas.passDistY = distY;\n    var left = datas.left + beforeDist[0];\n    var top = datas.top + beforeDist[1];\n    var right = datas.right - beforeDist[0];\n    var bottom = datas.bottom - beforeDist[1];\n    var nextTransform = convertTransformFormat(datas, \"translate(\".concat(translate[0], \"px, \").concat(translate[1], \"px)\"), \"translate(\".concat(dist[0], \"px, \").concat(dist[1], \"px)\"));\n    fillOriginalTransform(e, nextTransform);\n    moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n    if (!parentEvent && !parentMoveable && delta.every(function (num) {\n      return !num;\n    }) && beforeDelta.some(function (num) {\n      return !num;\n    })) {\n      return;\n    }\n    var _b = moveable.state,\n      width = _b.width,\n      height = _b.height;\n    var params = fillParams(moveable, e, __assign({\n      transform: nextTransform,\n      dist: dist,\n      delta: delta,\n      translate: translate,\n      beforeDist: beforeDist,\n      beforeDelta: beforeDelta,\n      beforeTranslate: beforeTranslate,\n      left: left,\n      top: top,\n      right: right,\n      bottom: bottom,\n      width: width,\n      height: height,\n      isPinch: isPinch\n    }, fillCSSObject({\n      transform: nextTransform\n    }, e)));\n    !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n    return params;\n  },\n  dragAfter: function (moveable, e) {\n    var datas = e.datas;\n    var deltaOffset = datas.deltaOffset;\n    if (deltaOffset[0] || deltaOffset[1]) {\n      datas.deltaOffset = [0, 0];\n      return this.drag(moveable, __assign(__assign({}, e), {\n        deltaOffset: deltaOffset\n      }));\n    }\n    return false;\n  },\n  dragEnd: function (moveable, e) {\n    var parentEvent = e.parentEvent,\n      datas = e.datas;\n    moveable.state.dragInfo = null;\n    if (!datas.isDrag) {\n      return;\n    }\n    datas.isDrag = false;\n    var param = fillEndParams(moveable, e, {});\n    !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n    return param;\n  },\n  dragGroupStart: function (moveable, e) {\n    var _a, _b;\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY;\n    var params = this.dragStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    var _c = triggerChildGesto(moveable, this, \"dragStart\", [clientX || 0, clientY || 0], e, false, \"draggable\"),\n      childEvents = _c.childEvents,\n      eventParams = _c.eventParams;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: eventParams\n    });\n    var result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n    datas.isDrag = result !== false;\n    // find data.startValue and based on first child moveable\n    var startValue = (_b = (_a = childEvents[0]) === null || _a === void 0 ? void 0 : _a.datas.startValue) !== null && _b !== void 0 ? _b : [0, 0];\n    datas.throttleOffset = [startValue[0] % 1, startValue[1] % 1];\n    return datas.isDrag ? params : false;\n  },\n  dragGroup: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isDrag) {\n      return;\n    }\n    var params = this.drag(moveable, __assign(__assign({}, e), {\n      parentThrottleDrag: moveable.props.throttleDrag\n    }));\n    var passDelta = e.datas.passDelta;\n    var eventParams = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\").eventParams;\n    if (!params) {\n      return;\n    }\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: eventParams\n    }, params);\n    triggerEvent(moveable, \"onDragGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isDrag) {\n      return;\n    }\n    this.dragEnd(moveable, e);\n    var eventParams = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\").eventParams;\n    triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: eventParams\n    }));\n    return isDrag;\n  },\n  /**\r\n   * @method Moveable.Draggable#request\r\n   * @param {object} [e] - the draggable's request parameter\r\n   * @param {number} [e.x] - x position\r\n   * @param {number} [e.y] - y position\r\n   * @param {number} [e.deltaX] - X number to move\r\n   * @param {number} [e.deltaY] - Y number to move\r\n   * @return {Moveable.Requester} Moveable Requester\r\n   * @example\r\n    * // Instantly Request (requestStart - request - requestEnd)\r\n   * // Use Relative Value\r\n   * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\r\n   * // Use Absolute Value\r\n   * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\r\n   *\r\n   * // requestStart\r\n   * const requester = moveable.request(\"draggable\");\r\n   *\r\n   * // request\r\n   * // Use Relative Value\r\n   * requester.request({ deltaX: 10, deltaY: 10 });\r\n   * requester.request({ deltaX: 10, deltaY: 10 });\r\n   * requester.request({ deltaX: 10, deltaY: 10 });\r\n   * // Use Absolute Value\r\n   * moveable.request(\"draggable\", { x: 200, y: 100 });\r\n   * moveable.request(\"draggable\", { x: 220, y: 100 });\r\n   * moveable.request(\"draggable\", { x: 240, y: 100 });\r\n   *\r\n   * // requestEnd\r\n   * requester.requestEnd();\r\n   */\n  request: function (moveable) {\n    var datas = {};\n    var rect = moveable.getRect();\n    var distX = 0;\n    var distY = 0;\n    var useSnap = false;\n    return {\n      isControl: false,\n      requestStart: function (e) {\n        useSnap = e.useSnap;\n        return {\n          datas: datas,\n          useSnap: useSnap\n        };\n      },\n      request: function (e) {\n        if (\"x\" in e) {\n          distX = e.x - rect.left;\n        } else if (\"deltaX\" in e) {\n          distX += e.deltaX;\n        }\n        if (\"y\" in e) {\n          distY = e.y - rect.top;\n        } else if (\"deltaY\" in e) {\n          distY += e.deltaY;\n        }\n        return {\n          datas: datas,\n          distX: distX,\n          distY: distY,\n          useSnap: useSnap\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true,\n          useSnap: useSnap\n        };\n      }\n    };\n  },\n  unset: function (moveable) {\n    moveable.state.gestos.draggable = null;\n    moveable.state.dragInfo = null;\n  }\n};\n/**\r\n * Whether or not target can be dragged. (default: false)\r\n * @name Moveable.Draggable#draggable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.draggable = true;\r\n */\n/**\r\n * throttle of x, y when drag.\r\n * @name Moveable.Draggable#throttleDrag\r\n * @default 0\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.throttleDrag = 1;\r\n */\n/**\r\n* throttle of angle of x, y when drag.\r\n* @name Moveable.Draggable#throttleDragRotate\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body);\r\n*\r\n* moveable.throttleDragRotate = 45;\r\n*/\n/**\r\n* start angle of throttleDragRotate of x, y when drag.\r\n* @name Moveable.Draggable#startDragRotate\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body);\r\n*\r\n* // 45, 135, 225, 315\r\n* moveable.throttleDragRotate = 90;\r\n* moveable.startDragRotate = 45;\r\n*/\n/**\r\n * When the drag starts, the dragStart event is called.\r\n * @memberof Moveable.Draggable\r\n * @event dragStart\r\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { draggable: true });\r\n * moveable.on(\"dragStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\n/**\r\n * When dragging, the drag event is called.\r\n * @memberof Moveable.Draggable\r\n * @event drag\r\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { draggable: true });\r\n * moveable.on(\"drag\", ({ target, transform }) => {\r\n *     target.style.transform = transform;\r\n * });\r\n */\n/**\r\n * When the drag finishes, the dragEnd event is called.\r\n * @memberof Moveable.Draggable\r\n * @event dragEnd\r\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { draggable: true });\r\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\n/**\r\n* When the group drag starts, the `dragGroupStart` event is called.\r\n* @memberof Moveable.Draggable\r\n* @event dragGroupStart\r\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     draggable: true\r\n* });\r\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\r\n*     console.log(\"onDragGroupStart\", targets);\r\n* });\r\n*/\n/**\r\n* When the group drag, the `dragGroup` event is called.\r\n* @memberof Moveable.Draggable\r\n* @event dragGroup\r\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     draggable: true\r\n* });\r\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\r\n*     console.log(\"onDragGroup\", targets);\r\n*     events.forEach(ev => {\r\n*          // drag event\r\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\r\n*          // ev.target!.style.left = `${ev.left}px`;\r\n*          // ev.target!.style.top = `${ev.top}px`;\r\n*          console.log(\"onDrag translate\", ev.dist);\r\n*          ev.target!.style.transform = ev.transform;)\r\n*     });\r\n* });\r\n*/\n/**\r\n * When the group drag finishes, the `dragGroupEnd` event is called.\r\n * @memberof Moveable.Draggable\r\n * @event dragGroupEnd\r\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     draggable: true\r\n * });\r\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\r\n * });\r\n */\n\nfunction getFixedDirectionInfo(startPositions, fixedDirection) {\n  var fixedPosition = getPosByDirection(startPositions, fixedDirection);\n  var fixedOffset = [0, 0];\n  return {\n    fixedPosition: fixedPosition,\n    fixedDirection: fixedDirection,\n    fixedOffset: fixedOffset\n  };\n}\nfunction getOffsetFixedDirectionInfo(state, fixedDirection) {\n  // for start\n  var allMatrix = state.allMatrix,\n    is3d = state.is3d,\n    width = state.width,\n    height = state.height;\n  var n = is3d ? 4 : 3;\n  var nextFixedOffset = [width / 2 * (1 + fixedDirection[0]), height / 2 * (1 + fixedDirection[1])];\n  var fixedPosition = calculatePosition(allMatrix, nextFixedOffset, n);\n  var fixedOffset = [0, 0];\n  return {\n    fixedPosition: fixedPosition,\n    fixedDirection: fixedDirection,\n    fixedOffset: fixedOffset\n  };\n}\nfunction getOffsetFixedPositionInfo(state, offsetFixedPosition) {\n  // for start\n  var allMatrix = state.allMatrix,\n    is3d = state.is3d,\n    width = state.width,\n    height = state.height;\n  var n = is3d ? 4 : 3;\n  var fixedDirection = getDirectionByPos(offsetFixedPosition, width, height);\n  var nextFixedPosition = calculatePosition(allMatrix, offsetFixedPosition, n);\n  var fixedOffset = [width ? 0 : offsetFixedPosition[0], height ? 0 : offsetFixedPosition[1]];\n  return {\n    fixedPosition: nextFixedPosition,\n    fixedDirection: fixedDirection,\n    fixedOffset: fixedOffset\n  };\n}\n\n/**\r\n * @namespace Resizable\r\n * @memberof Moveable\r\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\r\n */\nvar directionCondition$2 = getDirectionCondition(\"resizable\");\nvar Resizable = {\n  name: \"resizable\",\n  ableGroup: \"size\",\n  canPinch: true,\n  props: [\"resizable\", \"throttleResize\", \"renderDirections\", \"displayAroundControls\", \"keepRatio\", \"resizeFormat\", \"keepRatioFinally\", \"edge\", \"checkResizableError\"],\n  events: [\"resizeStart\", \"beforeResize\", \"resize\", \"resizeEnd\", \"resizeGroupStart\", \"beforeResizeGroup\", \"resizeGroup\", \"resizeGroupEnd\"],\n  render: getRenderDirections(\"resizable\"),\n  dragControlCondition: directionCondition$2,\n  viewClassName: getDirectionViewClassName(\"resizable\"),\n  dragControlStart: function (moveable, e) {\n    var _a;\n    var inputEvent = e.inputEvent,\n      isPinch = e.isPinch,\n      isGroup = e.isGroup,\n      parentDirection = e.parentDirection,\n      parentGesto = e.parentGesto,\n      datas = e.datas,\n      parentFixedDirection = e.parentFixedDirection,\n      parentEvent = e.parentEvent;\n    var direction = getTotalDirection(parentDirection, isPinch, inputEvent, datas);\n    var state = moveable.state;\n    var target = state.target,\n      width = state.width,\n      height = state.height,\n      gestos = state.gestos;\n    if (!direction || !target) {\n      return false;\n    }\n    if (gestos.resizable) {\n      return false;\n    }\n    gestos.resizable = parentGesto || moveable.controlGesto;\n    !isPinch && setDragStart(moveable, e);\n    datas.datas = {};\n    datas.direction = direction;\n    datas.startOffsetWidth = width;\n    datas.startOffsetHeight = height;\n    datas.prevWidth = 0;\n    datas.prevHeight = 0;\n    datas.minSize = [0, 0];\n    datas.startWidth = state.inlineCSSWidth || state.cssWidth;\n    datas.startHeight = state.inlineCSSHeight || state.cssHeight;\n    datas.maxSize = [Infinity, Infinity];\n    if (!isGroup) {\n      datas.minSize = [state.minOffsetWidth, state.minOffsetHeight];\n      datas.maxSize = [state.maxOffsetWidth, state.maxOffsetHeight];\n    }\n    var transformOrigin = moveable.props.transformOrigin || \"% %\";\n    datas.transformOrigin = transformOrigin && isString(transformOrigin) ? transformOrigin.split(\" \") : transformOrigin;\n    datas.startOffsetMatrix = state.offsetMatrix;\n    datas.startTransformOrigin = state.transformOrigin;\n    datas.isWidth = (_a = e === null || e === void 0 ? void 0 : e.parentIsWidth) !== null && _a !== void 0 ? _a : !direction[0] && !direction[1] || direction[0] || !direction[1];\n    function setRatio(ratio) {\n      datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n    }\n    datas.startPositions = getAbsolutePosesByState(moveable.state);\n    function setFixedDirection(fixedDirection) {\n      var result = getFixedDirectionInfo(datas.startPositions, fixedDirection);\n      datas.fixedDirection = result.fixedDirection;\n      datas.fixedPosition = result.fixedPosition;\n      datas.fixedOffset = result.fixedOffset;\n    }\n    function setFixedPosition(fixedPosition) {\n      var result = getOffsetFixedPositionInfo(moveable.state, fixedPosition);\n      datas.fixedDirection = result.fixedDirection;\n      datas.fixedPosition = result.fixedPosition;\n      datas.fixedOffset = result.fixedOffset;\n    }\n    function setMin(minSize) {\n      datas.minSize = [convertUnitSize(\"\".concat(minSize[0]), 0) || 0, convertUnitSize(\"\".concat(minSize[1]), 0) || 0];\n    }\n    function setMax(maxSize) {\n      var nextMaxSize = [maxSize[0] || Infinity, maxSize[1] || Infinity];\n      if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n        nextMaxSize[0] = convertUnitSize(\"\".concat(nextMaxSize[0]), 0) || Infinity;\n      }\n      if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n        nextMaxSize[1] = convertUnitSize(\"\".concat(nextMaxSize[1]), 0) || Infinity;\n      }\n      datas.maxSize = nextMaxSize;\n    }\n    setRatio(width / height);\n    setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n    datas.setFixedDirection = setFixedDirection;\n    datas.setFixedPosition = setFixedPosition;\n    datas.setMin = setMin;\n    datas.setMax = setMax;\n    var params = fillParams(moveable, e, {\n      direction: direction,\n      startRatio: datas.ratio,\n      set: function (_a) {\n        var _b = __read(_a, 2),\n          startWidth = _b[0],\n          startHeight = _b[1];\n        datas.startWidth = startWidth;\n        datas.startHeight = startHeight;\n      },\n      setMin: setMin,\n      setMax: setMax,\n      setRatio: setRatio,\n      setFixedDirection: setFixedDirection,\n      setFixedPosition: setFixedPosition,\n      setOrigin: function (origin) {\n        datas.transformOrigin = origin;\n      },\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    });\n    var result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n    datas.startFixedDirection = datas.fixedDirection;\n    datas.startFixedPosition = datas.fixedPosition;\n    if (result !== false) {\n      datas.isResize = true;\n      moveable.state.snapRenderInfo = {\n        request: e.isRequest,\n        direction: direction\n      };\n    }\n    return datas.isResize ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    var _a;\n    var datas = e.datas,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      parentKeepRatio = e.parentKeepRatio,\n      dragClient = e.dragClient,\n      parentDist = e.parentDist,\n      useSnap = e.useSnap,\n      isRequest = e.isRequest,\n      isGroup = e.isGroup,\n      parentEvent = e.parentEvent,\n      resolveMatrix = e.resolveMatrix;\n    var isResize = datas.isResize,\n      transformOrigin = datas.transformOrigin,\n      startWidth = datas.startWidth,\n      startHeight = datas.startHeight,\n      prevWidth = datas.prevWidth,\n      prevHeight = datas.prevHeight,\n      minSize = datas.minSize,\n      maxSize = datas.maxSize,\n      ratio = datas.ratio,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      isWidth = datas.isWidth;\n    if (!isResize) {\n      return;\n    }\n    if (resolveMatrix) {\n      var is3d = moveable.state.is3d;\n      var startOffsetMatrix = datas.startOffsetMatrix,\n        startTransformOrigin = datas.startTransformOrigin;\n      var n = is3d ? 4 : 3;\n      var targetMatrix = parseMat(getNextTransforms(e));\n      var targetN = Math.sqrt(targetMatrix.length);\n      if (n !== targetN) {\n        targetMatrix = convertDimension(targetMatrix, targetN, n);\n      }\n      var nextAllMatrix = getNextMatrix(startOffsetMatrix, targetMatrix, startTransformOrigin, n);\n      var poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n      datas.startPositions = poses;\n      datas.nextTargetMatrix = targetMatrix;\n      datas.nextAllMatrix = nextAllMatrix;\n    }\n    var props = getProps(moveable.props, \"resizable\");\n    var resizeFormat = props.resizeFormat,\n      _b = props.throttleResize,\n      throttleResize = _b === void 0 ? parentFlag ? 0 : 1 : _b,\n      parentMoveable = props.parentMoveable,\n      keepRatioFinally = props.keepRatioFinally;\n    var direction = datas.direction;\n    var sizeDirection = direction;\n    var distWidth = 0;\n    var distHeight = 0;\n    if (!direction[0] && !direction[1]) {\n      sizeDirection = [1, 1];\n    }\n    var keepRatio = ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio) || false;\n    function getNextBoundingSize() {\n      var fixedDirection = datas.fixedDirection;\n      var nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n      distWidth = nextSize.distWidth;\n      distHeight = nextSize.distHeight;\n      var nextWidth = sizeDirection[0] - fixedDirection[0] || keepRatio ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n      var nextHeight = sizeDirection[1] - fixedDirection[1] || keepRatio ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n      if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n        if (isWidth) {\n          nextHeight = nextWidth / ratio;\n        } else {\n          nextWidth = nextHeight * ratio;\n        }\n      }\n      return [nextWidth, nextHeight];\n    }\n    var _c = __read(getNextBoundingSize(), 2),\n      boundingWidth = _c[0],\n      boundingHeight = _c[1];\n    if (!parentEvent) {\n      datas.setFixedDirection(datas.fixedDirection);\n      triggerEvent(moveable, \"onBeforeResize\", fillParams(moveable, e, {\n        startFixedDirection: datas.startFixedDirection,\n        startFixedPosition: datas.startFixedPosition,\n        setFixedDirection: function (nextFixedDirection) {\n          var _a;\n          datas.setFixedDirection(nextFixedDirection);\n          _a = __read(getNextBoundingSize(), 2), boundingWidth = _a[0], boundingHeight = _a[1];\n          return [boundingWidth, boundingHeight];\n        },\n        setFixedPosition: function (nextFixedPosition) {\n          var _a;\n          datas.setFixedPosition(nextFixedPosition);\n          _a = __read(getNextBoundingSize(), 2), boundingWidth = _a[0], boundingHeight = _a[1];\n          return [boundingWidth, boundingHeight];\n        },\n        boundingWidth: boundingWidth,\n        boundingHeight: boundingHeight,\n        setSize: function (size) {\n          var _a;\n          _a = __read(size, 2), boundingWidth = _a[0], boundingHeight = _a[1];\n        }\n      }, true));\n    }\n    var fixedPosition = dragClient;\n    if (!dragClient) {\n      if (!parentFlag && isPinch) {\n        fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n      } else {\n        fixedPosition = datas.fixedPosition;\n      }\n    }\n    var snapDist = [0, 0];\n    if (!isPinch) {\n      snapDist = checkSnapResize(moveable, boundingWidth, boundingHeight, direction, fixedPosition, !useSnap && isRequest, datas);\n    }\n    if (parentDist) {\n      !parentDist[0] && (snapDist[0] = 0);\n      !parentDist[1] && (snapDist[1] = 0);\n    }\n    function computeSize() {\n      var _a;\n      if (resizeFormat) {\n        _a = __read(resizeFormat([boundingWidth, boundingHeight]), 2), boundingWidth = _a[0], boundingHeight = _a[1];\n      }\n      boundingWidth = throttle(boundingWidth, throttleResize);\n      boundingHeight = throttle(boundingHeight, throttleResize);\n    }\n    if (keepRatio) {\n      if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n        if (abs(snapDist[0]) > abs(snapDist[1])) {\n          snapDist[1] = 0;\n        } else {\n          snapDist[0] = 0;\n        }\n      }\n      var isNoSnap = !snapDist[0] && !snapDist[1];\n      if (isNoSnap) {\n        // pre-compute before maintaining the ratio\n        computeSize();\n      }\n      if (sizeDirection[0] && !sizeDirection[1] || snapDist[0] && !snapDist[1] || isNoSnap && isWidth) {\n        boundingWidth += snapDist[0];\n        boundingHeight = boundingWidth / ratio;\n      } else if (!sizeDirection[0] && sizeDirection[1] || !snapDist[0] && snapDist[1] || isNoSnap && !isWidth) {\n        boundingHeight += snapDist[1];\n        boundingWidth = boundingHeight * ratio;\n      }\n    } else {\n      boundingWidth += snapDist[0];\n      boundingHeight += snapDist[1];\n      boundingWidth = Math.max(0, boundingWidth);\n      boundingHeight = Math.max(0, boundingHeight);\n    }\n    _a = __read(calculateBoundSize([boundingWidth, boundingHeight], minSize, maxSize, keepRatio ? ratio : false), 2), boundingWidth = _a[0], boundingHeight = _a[1];\n    computeSize();\n    if (keepRatio && (isGroup || keepRatioFinally)) {\n      if (isWidth) {\n        boundingHeight = boundingWidth / ratio;\n      } else {\n        boundingWidth = boundingHeight * ratio;\n      }\n    }\n    distWidth = boundingWidth - startOffsetWidth;\n    distHeight = boundingHeight - startOffsetHeight;\n    var delta = [distWidth - prevWidth, distHeight - prevHeight];\n    datas.prevWidth = distWidth;\n    datas.prevHeight = distHeight;\n    var inverseDelta = getResizeDist(moveable, boundingWidth, boundingHeight, fixedPosition, transformOrigin, datas);\n    if (!parentMoveable && delta.every(function (num) {\n      return !num;\n    }) && inverseDelta.every(function (num) {\n      return !num;\n    })) {\n      return;\n    }\n    var drag = Draggable.drag(moveable, setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"));\n    var transform = drag.transform;\n    var nextWidth = startWidth + distWidth;\n    var nextHeight = startHeight + distHeight;\n    var params = fillParams(moveable, e, __assign({\n      width: nextWidth,\n      height: nextHeight,\n      offsetWidth: Math.round(boundingWidth),\n      offsetHeight: Math.round(boundingHeight),\n      startRatio: ratio,\n      boundingWidth: boundingWidth,\n      boundingHeight: boundingHeight,\n      direction: direction,\n      dist: [distWidth, distHeight],\n      delta: delta,\n      isPinch: !!isPinch,\n      drag: drag\n    }, fillAfterTransform({\n      style: {\n        width: \"\".concat(nextWidth, \"px\"),\n        height: \"\".concat(nextHeight, \"px\")\n      },\n      transform: transform\n    }, drag, e)));\n    !parentEvent && triggerEvent(moveable, \"onResize\", params);\n    return params;\n  },\n  dragControlAfter: function (moveable, e) {\n    var datas = e.datas;\n    var isResize = datas.isResize,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      prevWidth = datas.prevWidth,\n      prevHeight = datas.prevHeight;\n    if (!isResize || moveable.props.checkResizableError === false) {\n      return;\n    }\n    var _a = moveable.state,\n      width = _a.width,\n      height = _a.height;\n    var errorWidth = width - (startOffsetWidth + prevWidth);\n    var errorHeight = height - (startOffsetHeight + prevHeight);\n    var isErrorWidth = abs(errorWidth) > 3;\n    var isErrorHeight = abs(errorHeight) > 3;\n    if (isErrorWidth) {\n      datas.startWidth += errorWidth;\n      datas.startOffsetWidth += errorWidth;\n      datas.prevWidth += errorWidth;\n    }\n    if (isErrorHeight) {\n      datas.startHeight += errorHeight;\n      datas.startOffsetHeight += errorHeight;\n      datas.prevHeight += errorHeight;\n    }\n    if (isErrorWidth || isErrorHeight) {\n      return this.dragControl(moveable, e);\n    }\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas,\n      parentEvent = e.parentEvent;\n    if (!datas.isResize) {\n      return;\n    }\n    datas.isResize = false;\n    var params = fillEndParams(moveable, e, {});\n    !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n    return params;\n  },\n  dragGroupControlCondition: directionCondition$2,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var params = this.dragControlStart(moveable, __assign(__assign({}, e), {\n      isGroup: true\n    }));\n    if (!params) {\n      return false;\n    }\n    var originalEvents = fillChildEvents(moveable, \"resizable\", e);\n    var parentStartOffsetWidth = datas.startOffsetWidth,\n      parentStartOffsetHeight = datas.startOffsetHeight;\n    function updateGroupMin() {\n      var originalMinSize = datas.minSize;\n      originalEvents.forEach(function (ev) {\n        var _a = ev.datas,\n          childMinSize = _a.minSize,\n          childStartOffsetWidth = _a.startOffsetWidth,\n          childStartOffsetHeight = _a.startOffsetHeight;\n        var parentMinWidth = parentStartOffsetWidth * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n        var parentMinHeight = parentStartOffsetHeight * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n        originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n        originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n      });\n    }\n    function updateGroupMax() {\n      var originalMaxSize = datas.maxSize;\n      originalEvents.forEach(function (ev) {\n        var _a = ev.datas,\n          childMaxSize = _a.maxSize,\n          childStartOffsetWidth = _a.startOffsetWidth,\n          childStartOffsetHeight = _a.startOffsetHeight;\n        var parentMaxWidth = parentStartOffsetWidth * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n        var parentMaxHeight = parentStartOffsetHeight * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n        originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n        originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n      });\n    }\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      return startChildDist(moveable, child, datas, ev);\n    });\n    updateGroupMin();\n    updateGroupMax();\n    var setFixedDirection = function (fixedDirection) {\n      params.setFixedDirection(fixedDirection);\n      events.forEach(function (ev, i) {\n        ev.setFixedDirection(fixedDirection);\n        startChildDist(moveable, ev.moveable, datas, originalEvents[i]);\n      });\n    };\n    datas.setFixedDirection = setFixedDirection;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events.map(function (ev) {\n        return __assign(__assign({}, ev), {\n          setMin: function (minSize) {\n            ev.setMin(minSize);\n            updateGroupMin();\n          },\n          setMax: function (maxSize) {\n            ev.setMax(maxSize);\n            updateGroupMax();\n          }\n        });\n      }),\n      setFixedDirection: setFixedDirection,\n      setMin: function (minSize) {\n        params.setMin(minSize);\n        updateGroupMin();\n      },\n      setMax: function (maxSize) {\n        params.setMax(maxSize);\n        updateGroupMax();\n      }\n    });\n    var result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n    datas.isResize = result !== false;\n    return datas.isResize ? params : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    var props = getProps(moveable.props, \"resizable\");\n    catchEvent(moveable, \"onBeforeResize\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, __assign(__assign({}, e), {\n      isGroup: true\n    }));\n    if (!params) {\n      return;\n    }\n    var boundingWidth = params.boundingWidth,\n      boundingHeight = params.boundingHeight,\n      dist = params.dist;\n    var keepRatio = props.keepRatio;\n    var parentScale = [boundingWidth / (boundingWidth - dist[0]), boundingHeight / (boundingHeight - dist[1])];\n    var fixedPosition = datas.fixedPosition;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = __read(calculate(createRotateMatrix(moveable.rotation / 180 * Math.PI, 3), [ev.datas.originalX * parentScale[0], ev.datas.originalY * parentScale[1], 1], 3), 2),\n        clientX = _a[0],\n        clientY = _a[1];\n      return __assign(__assign({}, ev), {\n        parentDist: null,\n        parentScale: parentScale,\n        dragClient: plus(fixedPosition, [clientX, clientY]),\n        parentKeepRatio: keepRatio\n      });\n    });\n    var nextParams = __assign({\n      targets: props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onResizeGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\r\n   * @method Moveable.Resizable#request\r\n   * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\r\n   * @return {Moveable.Requester} Moveable Requester\r\n   * @example\r\n    * // Instantly Request (requestStart - request - requestEnd)\r\n   * // Use Relative Value\r\n   * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\r\n   *\r\n   * // Use Absolute Value\r\n   * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\r\n   *\r\n   * // requestStart\r\n   * const requester = moveable.request(\"resizable\");\r\n   *\r\n   * // request\r\n   * // Use Relative Value\r\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n   *\r\n   * // Use Absolute Value\r\n   * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\r\n   * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\r\n   * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\r\n   *\r\n   * // requestEnd\r\n   * requester.requestEnd();\r\n   */\n  request: function (moveable) {\n    var datas = {};\n    var distWidth = 0;\n    var distHeight = 0;\n    var useSnap = false;\n    var rect = moveable.getRect();\n    return {\n      isControl: true,\n      requestStart: function (e) {\n        var _a;\n        useSnap = e.useSnap;\n        return {\n          datas: datas,\n          parentDirection: e.direction || [1, 1],\n          parentIsWidth: (_a = e === null || e === void 0 ? void 0 : e.horizontal) !== null && _a !== void 0 ? _a : true,\n          useSnap: useSnap\n        };\n      },\n      request: function (e) {\n        if (\"offsetWidth\" in e) {\n          distWidth = e.offsetWidth - rect.offsetWidth;\n        } else if (\"deltaWidth\" in e) {\n          distWidth += e.deltaWidth;\n        }\n        if (\"offsetHeight\" in e) {\n          distHeight = e.offsetHeight - rect.offsetHeight;\n        } else if (\"deltaHeight\" in e) {\n          distHeight += e.deltaHeight;\n        }\n        return {\n          datas: datas,\n          parentDist: [distWidth, distHeight],\n          parentKeepRatio: e.keepRatio,\n          useSnap: useSnap\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true,\n          useSnap: useSnap\n        };\n      }\n    };\n  },\n  unset: function (moveable) {\n    moveable.state.gestos.resizable = null;\n  }\n};\n/**\r\n * Whether or not target can be resized.\r\n * @name Moveable.Resizable#resizable\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     resizable: false,\r\n * });\r\n *\r\n * moveable.resizable = true;\r\n */\n/**\r\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\r\n * @name Moveable.Resizable#throttleResize\r\n * @default 1\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   resizable: true,\r\n *   throttleResize: 1,\r\n * });\r\n *\r\n * moveable.throttleResize = 0;\r\n */\n/**\r\n * When resize or scale, keeps a ratio of the width, height.\r\n * @name Moveable.Resizable#keepRatio\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   resizable: true,\r\n * });\r\n *\r\n * moveable.keepRatio = true;\r\n */\n/**\r\n * Set directions to show the control box.\r\n * @name Moveable.Resizable#renderDirections\r\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   resizable: true,\r\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\r\n * });\r\n *\r\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\r\n */\n/**\r\n * Function to convert size for resize\r\n * @name Moveable.Resizable#resizeFormat\r\n * @default oneself\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   resizable: true,\r\n *   resizeFormat: v => v,\r\n * });\r\n *\r\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\r\n */\n/**\r\n * When the resize starts, the resizeStart event is called.\r\n * @memberof Moveable.Resizable\r\n * @event resizeStart\r\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { resizable: true });\r\n * moveable.on(\"resizeStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\n/**\r\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\r\n * @memberof Moveable.Resizable\r\n * @event beforeResize\r\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { resizable: true });\r\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\r\n *     if (shiftKey) {\r\n *        setFixedDirection([0, 0]);\r\n *     }\r\n * });\r\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\r\n *     target.style.width = `${width}px`;\r\n *     target.style.height = `${height}px`;\r\n *     target.style.transform = drag.transform;\r\n * });\r\n */\n/**\r\n * When resizing, the resize event is called.\r\n * @memberof Moveable.Resizable\r\n * @event resize\r\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { resizable: true });\r\n * moveable.on(\"resize\", ({ target, width, height }) => {\r\n *     target.style.width = `${e.width}px`;\r\n *     target.style.height = `${e.height}px`;\r\n * });\r\n */\n/**\r\n * When the resize finishes, the resizeEnd event is called.\r\n * @memberof Moveable.Resizable\r\n * @event resizeEnd\r\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { resizable: true });\r\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\n/**\r\n* When the group resize starts, the `resizeGroupStart` event is called.\r\n* @memberof Moveable.Resizable\r\n* @event resizeGroupStart\r\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     resizable: true\r\n* });\r\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\r\n*     console.log(\"onResizeGroupStart\", targets);\r\n* });\r\n*/\n/**\r\n* When the group resize, the `resizeGroup` event is called.\r\n* @memberof Moveable.Resizable\r\n* @event resizeGroup\r\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     resizable: true\r\n* });\r\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\r\n*     console.log(\"onResizeGroup\", targets);\r\n*     events.forEach(ev => {\r\n*         const offset = [\r\n*             direction[0] < 0 ? -ev.delta[0] : 0,\r\n*             direction[1] < 0 ? -ev.delta[1] : 0,\r\n*         ];\r\n*         // ev.drag is a drag event that occurs when the group resize.\r\n*         const left = offset[0] + ev.drag.beforeDist[0];\r\n*         const top = offset[1] + ev.drag.beforeDist[1];\r\n*         const width = ev.width;\r\n*         const top = ev.top;\r\n*     });\r\n* });\r\n*/\n/**\r\n * When the group resize finishes, the `resizeGroupEnd` event is called.\r\n * @memberof Moveable.Resizable\r\n * @event resizeGroupEnd\r\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     resizable: true\r\n * });\r\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\r\n * });\r\n */\n\n/**\r\n * @namespace Rotatable\r\n * @memberof Moveable\r\n * @description Rotatable indicates whether the target can be rotated.\r\n */\nfunction setRotateStartInfo(moveable, datas, clientX, clientY, rect) {\n  var groupable = moveable.props.groupable;\n  var state = moveable.state;\n  var n = state.is3d ? 4 : 3;\n  var origin = datas.origin;\n  var nextOrigin = calculatePosition(moveable.state.rootMatrix,\n  // TO-DO #710\n  minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]), n);\n  var startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n  datas.startAbsoluteOrigin = startAbsoluteOrigin;\n  datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n  datas.defaultDeg = datas.prevDeg;\n  datas.prevSnapDeg = 0;\n  datas.loop = 0;\n  datas.startDist = getDist$1(startAbsoluteOrigin, [clientX, clientY]);\n}\nfunction getAbsoluteDist(deg, direction, datas) {\n  var defaultDeg = datas.defaultDeg,\n    prevDeg = datas.prevDeg;\n  var normalizedPrevDeg = prevDeg % 360;\n  var loop = Math.floor(prevDeg / 360);\n  if (normalizedPrevDeg < 0) {\n    normalizedPrevDeg += 360;\n  }\n  if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n    // 360 => 0\n    ++loop;\n  } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n    // 0 => 360\n    --loop;\n  }\n  var dist = direction * (loop * 360 + deg - defaultDeg);\n  datas.prevDeg = defaultDeg + dist;\n  return dist;\n}\nfunction getAbsoluteDistByClient(clientX, clientY, direction, datas) {\n  return getAbsoluteDist(getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180, direction, datas);\n}\nfunction getRotateInfo(moveable, moveableRect, datas, dist, startValue, checkSnap) {\n  var _a = moveable.props.throttleRotate,\n    throttleRotate = _a === void 0 ? 0 : _a;\n  var prevSnapDeg = datas.prevSnapDeg;\n  var snapRotation = 0;\n  var isSnap = false;\n  if (checkSnap) {\n    var result = checkSnapRotate(moveable, moveableRect, dist, startValue + dist);\n    isSnap = result.isSnap;\n    snapRotation = startValue + result.dist;\n  }\n  if (!isSnap) {\n    snapRotation = throttle(startValue + dist, throttleRotate);\n  }\n  var snapDeg = snapRotation - startValue;\n  datas.prevSnapDeg = snapDeg;\n  return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n}\nfunction getRotationPositions(rotationPosition, _a, direction) {\n  var _b = __read(_a, 4),\n    pos1 = _b[0],\n    pos2 = _b[1],\n    pos3 = _b[2],\n    pos4 = _b[3];\n  if (rotationPosition === \"none\") {\n    return [];\n  }\n  if (isArray(rotationPosition)) {\n    return rotationPosition.map(function (child) {\n      return getRotationPositions(child, [pos1, pos2, pos3, pos4], direction)[0];\n    });\n  }\n  var _c = __read((rotationPosition || \"top\").split(\"-\"), 2),\n    dir1 = _c[0],\n    dir2 = _c[1];\n  var radPoses = [pos1, pos2];\n  if (dir1 === \"left\") {\n    radPoses = [pos3, pos1];\n  } else if (dir1 === \"right\") {\n    radPoses = [pos2, pos4];\n  } else if (dir1 === \"bottom\") {\n    radPoses = [pos4, pos3];\n  }\n  var pos = [(radPoses[0][0] + radPoses[1][0]) / 2, (radPoses[0][1] + radPoses[1][1]) / 2];\n  var rad = getRotationRad(radPoses, direction);\n  if (dir2) {\n    var isStart = dir2 === \"top\" || dir2 === \"left\";\n    var isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n    pos = radPoses[isStart && !isReverse || !isStart && isReverse ? 0 : 1];\n  }\n  return [[pos, rad]];\n}\nfunction dragControlCondition(moveable, e) {\n  if (e.isRequest) {\n    return e.requestAble === \"rotatable\";\n  }\n  var target = e.inputEvent.target;\n  if (hasClass(target, prefix(\"rotation-control\")) || moveable.props.rotateAroundControls && hasClass(target, prefix(\"around-control\")) || hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\"))) {\n    return true;\n  }\n  var rotationTarget = moveable.props.rotationTarget;\n  if (rotationTarget) {\n    return getRefTargets(rotationTarget, true).some(function (element) {\n      if (!element) {\n        return false;\n      }\n      return target === element || target.contains(element);\n    });\n  }\n  return false;\n}\nvar css = \".rotation {\\nposition: absolute;\\nheight: 40px;\\nwidth: 1px;\\ntransform-origin: 50% 100%;\\nheight: calc(40px * var(--zoom));\\ntop: auto;\\nleft: 0;\\nbottom: 100%;\\nwill-change: transform;\\n}\\n.rotation .rotation-line {\\ndisplay: block;\\nwidth: 100%;\\nheight: 100%;\\ntransform-origin: 50% 50%;\\n}\\n.rotation .rotation-control {\\nborder-color: #4af;\\nborder-color: var(--moveable-color);\\nbackground:#fff;\\ncursor: alias;\\n}\\n:global .view-rotation-dragging, .rotatable.direction.control {\\ncursor: alias;\\n}\\n.rotatable.direction.control.move {\\ncursor: move;\\n}\\n\";\nvar Rotatable = {\n  name: \"rotatable\",\n  canPinch: true,\n  props: [\"rotatable\", \"rotationPosition\", \"throttleRotate\", \"renderDirections\", \"rotationTarget\", \"rotateAroundControls\", \"edge\", \"resolveAblesWithRotatable\", \"displayAroundControls\"],\n  events: [\"rotateStart\", \"beforeRotate\", \"rotate\", \"rotateEnd\", \"rotateGroupStart\", \"beforeRotateGroup\", \"rotateGroup\", \"rotateGroupEnd\"],\n  css: [css],\n  viewClassName: function (moveable) {\n    if (!moveable.isDragging(\"rotatable\")) {\n      return \"\";\n    }\n    return prefix(\"view-rotation-dragging\");\n  },\n  render: function (moveable, React) {\n    var _a = getProps(moveable.props, \"rotatable\"),\n      rotatable = _a.rotatable,\n      rotationPosition = _a.rotationPosition,\n      zoom = _a.zoom,\n      renderDirections = _a.renderDirections,\n      rotateAroundControls = _a.rotateAroundControls,\n      resolveAblesWithRotatable = _a.resolveAblesWithRotatable;\n    var _b = moveable.getState(),\n      renderPoses = _b.renderPoses,\n      direction = _b.direction;\n    if (!rotatable) {\n      return null;\n    }\n    var positions = getRotationPositions(rotationPosition, renderPoses, direction);\n    var jsxs = [];\n    positions.forEach(function (_a, i) {\n      var _b = __read(_a, 2),\n        pos = _b[0],\n        rad = _b[1];\n      jsxs.push(React.createElement(\"div\", {\n        key: \"rotation\".concat(i),\n        className: prefix(\"rotation\"),\n        style: {\n          // tslint:disable-next-line: max-line-length\n          transform: \"translate(-50%) translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rad, \"rad)\")\n        }\n      }, React.createElement(\"div\", {\n        className: prefix(\"line rotation-line\"),\n        style: {\n          transform: \"scaleX(\".concat(zoom, \")\")\n        }\n      }), React.createElement(\"div\", {\n        className: prefix(\"control rotation-control\"),\n        style: {\n          transform: \"translate(0.5px) scale(\".concat(zoom, \")\")\n        }\n      })));\n    });\n    if (renderDirections) {\n      var ables = getKeys(resolveAblesWithRotatable || {});\n      var resolveMap_1 = {};\n      ables.forEach(function (name) {\n        resolveAblesWithRotatable[name].forEach(function (direction) {\n          resolveMap_1[direction] = name;\n        });\n      });\n      var directionControlInfos = [];\n      if (isArray(renderDirections)) {\n        directionControlInfos = renderDirections.map(function (dir) {\n          var able = resolveMap_1[dir];\n          return {\n            data: able ? {\n              resolve: able\n            } : {},\n            classNames: able ? [\"move\"] : [],\n            dir: dir\n          };\n        });\n      }\n      jsxs.push.apply(jsxs, __spreadArray([], __read(renderDirectionControlsByInfos(moveable, \"rotatable\", directionControlInfos, React)), false));\n    }\n    if (rotateAroundControls) {\n      jsxs.push.apply(jsxs, __spreadArray([], __read(renderAroundControls(moveable, React)), false));\n    }\n    return jsxs;\n  },\n  dragControlCondition: dragControlCondition,\n  dragControlStart: function (moveable, e) {\n    var _a;\n    var _b;\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY,\n      parentRotate = e.parentRotate,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest;\n    var state = moveable.state;\n    var target = state.target,\n      left = state.left,\n      top = state.top,\n      direction = state.direction,\n      beforeDirection = state.beforeDirection,\n      targetTransform = state.targetTransform,\n      moveableClientRect = state.moveableClientRect,\n      offsetMatrix = state.offsetMatrix,\n      targetMatrix = state.targetMatrix,\n      allMatrix = state.allMatrix,\n      width = state.width,\n      height = state.height;\n    if (!isRequest && !target) {\n      return false;\n    }\n    var rect = moveable.getRect();\n    datas.rect = rect;\n    datas.transform = targetTransform;\n    datas.left = left;\n    datas.top = top;\n    var setFixedPosition = function (fixedPosition) {\n      var result = getOffsetFixedPositionInfo(moveable.state, fixedPosition);\n      datas.fixedDirection = result.fixedDirection;\n      datas.fixedOffset = result.fixedOffset;\n      datas.fixedPosition = result.fixedPosition;\n      if (resizeStart) {\n        resizeStart.setFixedPosition(fixedPosition);\n      }\n    };\n    var setFixedDirection = function (fixedDirection) {\n      var result = getOffsetFixedDirectionInfo(moveable.state, fixedDirection);\n      datas.fixedDirection = result.fixedDirection;\n      datas.fixedOffset = result.fixedOffset;\n      datas.fixedPosition = result.fixedPosition;\n      if (resizeStart) {\n        resizeStart.setFixedDirection(fixedDirection);\n      }\n    };\n    var startClientX = clientX;\n    var startClientY = clientY;\n    if (isRequest || isPinch || parentFlag) {\n      var externalRotate = parentRotate || 0;\n      datas.beforeInfo = {\n        origin: rect.beforeOrigin,\n        prevDeg: externalRotate,\n        defaultDeg: externalRotate,\n        prevSnapDeg: 0,\n        startDist: 0\n      };\n      datas.afterInfo = __assign(__assign({}, datas.beforeInfo), {\n        origin: rect.origin\n      });\n      datas.absoluteInfo = __assign(__assign({}, datas.beforeInfo), {\n        origin: rect.origin,\n        startValue: externalRotate\n      });\n    } else {\n      var inputTarget = (_b = e.inputEvent) === null || _b === void 0 ? void 0 : _b.target;\n      if (inputTarget) {\n        var regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n        var controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n        if (controlDirection) {\n          datas.isControl = true;\n          datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n          datas.controlDirection = controlDirection;\n          var resolve = inputTarget.getAttribute(\"data-resolve\");\n          if (resolve) {\n            datas.resolveAble = resolve;\n          }\n          var clientPoses = calculateMoveableClientPositions(state.rootMatrix, state.renderPoses, moveableClientRect);\n          _a = __read(getPosByDirection(clientPoses, controlDirection), 2), startClientX = _a[0], startClientY = _a[1];\n        }\n      }\n      datas.beforeInfo = {\n        origin: rect.beforeOrigin\n      };\n      datas.afterInfo = {\n        origin: rect.origin\n      };\n      datas.absoluteInfo = {\n        origin: rect.origin,\n        startValue: rect.rotation\n      };\n      var originalFixedPosition_1 = setFixedPosition;\n      setFixedPosition = function (fixedPosition) {\n        var n = state.is3d ? 4 : 3;\n        var _a = __read(plus(getOrigin(targetMatrix, n), fixedPosition), 2),\n          originX = _a[0],\n          originY = _a[1];\n        var fixedBeforeOrigin = calculate(offsetMatrix, convertPositionMatrix([originX, originY], n));\n        var fixedAfterOrigin = calculate(allMatrix, convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n));\n        originalFixedPosition_1(fixedPosition);\n        var posDelta = state.posDelta;\n        datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\n        datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\n        datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\n        setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n        setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n        setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n      };\n      setFixedDirection = function (fixedDirection) {\n        var fixedPosition = getPosByDirection([[0, 0], [width, 0], [0, height], [width, height]], fixedDirection);\n        setFixedPosition(fixedPosition);\n      };\n    }\n    datas.startClientX = startClientX;\n    datas.startClientY = startClientY;\n    datas.direction = direction;\n    datas.beforeDirection = beforeDirection;\n    datas.startValue = 0;\n    datas.datas = {};\n    setDefaultTransformIndex(moveable, e, \"rotate\");\n    var dragStart = false;\n    var resizeStart = false;\n    if (datas.isControl && datas.resolveAble) {\n      var resolveAble = datas.resolveAble;\n      if (resolveAble === \"resizable\") {\n        resizeStart = Resizable.dragControlStart(moveable, __assign(__assign({}, new CustomGesto(\"resizable\").dragStart([0, 0], e)), {\n          parentPosition: datas.controlPosition,\n          parentFixedPosition: datas.fixedPosition\n        }));\n      }\n    }\n    if (!resizeStart) {\n      dragStart = Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e));\n    }\n    setFixedPosition(getTotalOrigin(moveable));\n    var params = fillParams(moveable, e, __assign(__assign({\n      set: function (rotatation) {\n        datas.startValue = rotatation * Math.PI / 180;\n      },\n      setFixedDirection: setFixedDirection,\n      setFixedPosition: setFixedPosition\n    }, fillTransformStartEvent(moveable, e)), {\n      dragStart: dragStart,\n      resizeStart: resizeStart\n    }));\n    var result = triggerEvent(moveable, \"onRotateStart\", params);\n    datas.isRotate = result !== false;\n    state.snapRenderInfo = {\n      request: e.isRequest\n    };\n    return datas.isRotate ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    var _a, _b, _c;\n    var datas = e.datas,\n      clientDistX = e.clientDistX,\n      clientDistY = e.clientDistY,\n      parentRotate = e.parentRotate,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      groupDelta = e.groupDelta,\n      resolveMatrix = e.resolveMatrix;\n    var beforeDirection = datas.beforeDirection,\n      beforeInfo = datas.beforeInfo,\n      afterInfo = datas.afterInfo,\n      absoluteInfo = datas.absoluteInfo,\n      isRotate = datas.isRotate,\n      startValue = datas.startValue,\n      rect = datas.rect,\n      startClientX = datas.startClientX,\n      startClientY = datas.startClientY;\n    if (!isRotate) {\n      return;\n    }\n    resolveTransformEvent(moveable, e, \"rotate\");\n    var targetDirection = getTransformDirection(e);\n    var direction = beforeDirection * targetDirection;\n    var parentMoveable = moveable.props.parentMoveable;\n    var beforeDelta = 0;\n    var beforeDist;\n    var beforeRotation;\n    var delta = 0;\n    var dist;\n    var rotation;\n    var absoluteDelta = 0;\n    var absoluteDist;\n    var absoluteRotation;\n    var startRotation = 180 / Math.PI * startValue;\n    var absoluteStartRotation = absoluteInfo.startValue;\n    var isSnap = false;\n    var nextClientX = startClientX + clientDistX;\n    var nextClientY = startClientY + clientDistY;\n    if (!parentFlag && \"parentDist\" in e) {\n      var parentDist = e.parentDist;\n      beforeDist = parentDist;\n      dist = parentDist;\n      absoluteDist = parentDist;\n    } else if (isPinch || parentFlag) {\n      beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n      dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n      absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n    } else {\n      beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n      dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n      absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n      isSnap = true;\n    }\n    beforeRotation = startRotation + beforeDist;\n    rotation = startRotation + dist;\n    absoluteRotation = absoluteStartRotation + absoluteDist;\n    triggerEvent(moveable, \"onBeforeRotate\", fillParams(moveable, e, {\n      beforeRotation: beforeRotation,\n      rotation: rotation,\n      absoluteRotation: absoluteRotation,\n      setRotation: function (nextRotation) {\n        dist = nextRotation - startRotation;\n        beforeDist = dist;\n        absoluteDist = dist;\n      }\n    }, true));\n    _a = __read(getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap), 3), beforeDelta = _a[0], beforeDist = _a[1], beforeRotation = _a[2];\n    _b = __read(getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap), 3), delta = _b[0], dist = _b[1], rotation = _b[2];\n    _c = __read(getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap), 3), absoluteDelta = _c[0], absoluteDist = _c[1], absoluteRotation = _c[2];\n    if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable && !resolveMatrix) {\n      return;\n    }\n    var nextTransform = convertTransformFormat(datas, \"rotate(\".concat(rotation, \"deg)\"), \"rotate(\".concat(dist, \"deg)\"));\n    if (resolveMatrix) {\n      datas.fixedPosition = getTranslateFixedPosition(moveable, datas.targetAllTransform, datas.fixedDirection, datas.fixedOffset, datas);\n    }\n    var inverseDist = getRotateDist(moveable, dist, datas);\n    var inverseDelta = minus(plus(groupDelta || [0, 0], inverseDist), datas.prevInverseDist || [0, 0]);\n    datas.prevInverseDist = inverseDist;\n    datas.requestValue = null;\n    var dragEvent = fillTransformEvent(moveable, nextTransform, inverseDelta, isPinch, e);\n    var transformEvent = dragEvent;\n    var parentDistance = getDist$1([nextClientX, nextClientY], absoluteInfo.startAbsoluteOrigin) - absoluteInfo.startDist;\n    var resize = undefined;\n    if (datas.resolveAble === \"resizable\") {\n      var resizeEvent = Resizable.dragControl(moveable, __assign(__assign({}, setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\")), {\n        resolveMatrix: true,\n        parentDistance: parentDistance\n      }));\n      if (resizeEvent) {\n        resize = resizeEvent;\n        transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n      }\n    }\n    var params = fillParams(moveable, e, __assign(__assign({\n      delta: delta,\n      dist: dist,\n      rotate: rotation,\n      rotation: rotation,\n      beforeDist: beforeDist,\n      beforeDelta: beforeDelta,\n      beforeRotate: beforeRotation,\n      beforeRotation: beforeRotation,\n      absoluteDist: absoluteDist,\n      absoluteDelta: absoluteDelta,\n      absoluteRotate: absoluteRotation,\n      absoluteRotation: absoluteRotation,\n      isPinch: !!isPinch,\n      resize: resize\n    }, dragEvent), transformEvent));\n    triggerEvent(moveable, \"onRotate\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    datas.isRotate = false;\n    var params = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onRotateEnd\", params);\n    return params;\n  },\n  dragGroupControlCondition: dragControlCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var _a = moveable.state,\n      parentLeft = _a.left,\n      parentTop = _a.top,\n      parentBeforeOrigin = _a.beforeOrigin;\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    params.set(datas.beforeDirection * moveable.rotation);\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      var _a = child.state,\n        left = _a.left,\n        top = _a.top,\n        beforeOrigin = _a.beforeOrigin;\n      var childClient = plus(minus([left, top], [parentLeft, parentTop]), minus(beforeOrigin, parentBeforeOrigin));\n      ev.datas.startGroupClient = childClient;\n      ev.datas.groupClient = childClient;\n      return __assign(__assign({}, ev), {\n        parentRotate: 0\n      });\n    });\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events\n    });\n    var result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n    datas.isRotate = result !== false;\n    return datas.isRotate ? params : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeRotate\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var direction = datas.beforeDirection;\n    var parentRotate = params.beforeDist;\n    var rad = parentRotate / 180 * Math.PI;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var startGroupClient = ev.datas.startGroupClient;\n      var _a = __read(ev.datas.groupClient, 2),\n        prevClientX = _a[0],\n        prevClientY = _a[1];\n      var _b = __read(rotate(startGroupClient, rad * direction), 2),\n        clientX = _b[0],\n        clientY = _b[1];\n      var delta = [clientX - prevClientX, clientY - prevClientY];\n      ev.datas.groupClient = [clientX, clientY];\n      return __assign(__assign({}, ev), {\n        parentRotate: parentRotate,\n        groupDelta: delta\n      });\n    });\n    moveable.rotation = direction * params.beforeRotation;\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events,\n      set: function (rotation) {\n        moveable.rotation = rotation;\n      },\n      setGroupRotation: function (rotation) {\n        moveable.rotation = rotation;\n      }\n    }, params);\n    triggerEvent(moveable, \"onRotateGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\r\n   * @method Moveable.Rotatable#request\r\n   * @param {object} [e] - the Resizable's request parameter\r\n   * @param {number} [e.deltaRotate=0] -  delta number of rotation\r\n   * @param {number} [e.rotate=0] - absolute number of moveable's rotation\r\n   * @return {Moveable.Requester} Moveable Requester\r\n   * @example\r\n    * // Instantly Request (requestStart - request - requestEnd)\r\n   * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\r\n   *\r\n   * * moveable.request(\"rotatable\", { rotate: 10 }, true);\r\n   *\r\n   * // requestStart\r\n   * const requester = moveable.request(\"rotatable\");\r\n   *\r\n   * // request\r\n   * requester.request({ deltaRotate: 10 });\r\n   * requester.request({ deltaRotate: 10 });\r\n   * requester.request({ deltaRotate: 10 });\r\n   *\r\n   * requester.request({ rotate: 10 });\r\n   * requester.request({ rotate: 20 });\r\n   * requester.request({ rotate: 30 });\r\n   *\r\n   * // requestEnd\r\n   * requester.requestEnd();\r\n   */\n  request: function (moveable) {\n    var datas = {};\n    var distRotate = 0;\n    var startRotation = moveable.getRotation();\n    return {\n      isControl: true,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"deltaRotate\" in e) {\n          distRotate += e.deltaRotate;\n        } else if (\"rotate\" in e) {\n          distRotate = e.rotate - startRotation;\n        }\n        return {\n          datas: datas,\n          parentDist: distRotate\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\r\n * Whether or not target can be rotated. (default: false)\r\n * @name Moveable.Rotatable#rotatable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.rotatable = true;\r\n */\n/**\r\n * You can specify the position of the rotation. (default: \"top\")\r\n * @name Moveable.Rotatable#rotationPosition\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   rotationPosition: \"top\",\r\n * });\r\n *\r\n * moveable.rotationPosition = \"bottom\"\r\n */\n/**\r\n * throttle of angle(degree) when rotate.\r\n * @name Moveable.Rotatable#throttleRotate\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.throttleRotate = 1;\r\n */\n/**\r\n * When the rotate starts, the rotateStart event is called.\r\n * @memberof Moveable.Rotatable\r\n * @event rotateStart\r\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { rotatable: true });\r\n * moveable.on(\"rotateStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\n/**\r\n* When rotating, the rotate event is called.\r\n* @memberof Moveable.Rotatable\r\n* @event rotate\r\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, { rotatable: true });\r\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\r\n*     target.style.transform = transform;\r\n* });\r\n*/\n/**\r\n * When the rotate finishes, the rotateEnd event is called.\r\n * @memberof Moveable.Rotatable\r\n * @event rotateEnd\r\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { rotatable: true });\r\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\n/**\r\n * When the group rotate starts, the `rotateGroupStart` event is called.\r\n * @memberof Moveable.Rotatable\r\n * @event rotateGroupStart\r\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     rotatable: true\r\n * });\r\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\r\n *     console.log(\"onRotateGroupStart\", targets);\r\n * });\r\n */\n/**\r\n* When the group rotate, the `rotateGroup` event is called.\r\n* @memberof Moveable.Rotatable\r\n* @event rotateGroup\r\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     rotatable: true\r\n* });\r\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\r\n*     console.log(\"onRotateGroup\", targets);\r\n*     events.forEach(ev => {\r\n*         const target = ev.target;\r\n*         // ev.drag is a drag event that occurs when the group rotate.\r\n*         const left = ev.drag.beforeDist[0];\r\n*         const top = ev.drag.beforeDist[1];\r\n*         const deg = ev.beforeDist;\r\n*     });\r\n* });\r\n*/\n/**\r\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\r\n * @memberof Moveable.Rotatable\r\n * @event rotateGroupEnd\r\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     rotatable: true\r\n * });\r\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\r\n * });\r\n */\n\nfunction renderGuideline(info, React) {\n  var _a;\n  var direction = info.direction,\n    classNames = info.classNames,\n    size = info.size,\n    pos = info.pos,\n    zoom = info.zoom,\n    key = info.key;\n  var isHorizontal = direction === \"horizontal\";\n  var scaleType = isHorizontal ? \"Y\" : \"X\";\n  // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n  return React.createElement(\"div\", {\n    key: key,\n    className: classNames.join(\" \"),\n    style: (_a = {}, _a[isHorizontal ? \"width\" : \"height\"] = \"\".concat(size), _a.transform = \"translate(\".concat(pos[0], \", \").concat(pos[1], \") translate\").concat(scaleType, \"(-50%) scale\").concat(scaleType, \"(\").concat(zoom, \")\"), _a)\n  });\n}\nfunction renderInnerGuideline(info, React) {\n  return renderGuideline(__assign(__assign({}, info), {\n    classNames: __spreadArray([prefix(\"line\", \"guideline\", info.direction)], __read(info.classNames), false).filter(function (className) {\n      return className;\n    }),\n    size: info.size || \"\".concat(info.sizeValue, \"px\"),\n    pos: info.pos || info.posValue.map(function (v) {\n      return \"\".concat(throttle(v, 0.1), \"px\");\n    })\n  }), React);\n}\nfunction renderSnapPoses(moveable, direction, snapPoses, minPos, targetPos, size, index, React) {\n  var zoom = moveable.props.zoom;\n  return snapPoses.map(function (_a, i) {\n    var type = _a.type,\n      pos = _a.pos;\n    var renderPos = [0, 0];\n    renderPos[index] = minPos;\n    renderPos[index ? 0 : 1] = -targetPos + pos;\n    return renderInnerGuideline({\n      key: \"\".concat(direction, \"TargetGuideline\").concat(i),\n      classNames: [prefix(\"target\", \"bold\", type)],\n      posValue: renderPos,\n      sizeValue: size,\n      zoom: zoom,\n      direction: direction\n    }, React);\n  });\n}\nfunction renderGuidelines(moveable, type, guidelines, targetPos, targetRect, React) {\n  var _a = moveable.props,\n    zoom = _a.zoom,\n    isDisplayInnerSnapDigit = _a.isDisplayInnerSnapDigit;\n  var mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n  var targetStart = targetRect[mainNames.start];\n  var targetEnd = targetRect[mainNames.end];\n  return guidelines.filter(function (_a) {\n    var hide = _a.hide,\n      elementRect = _a.elementRect;\n    if (hide) {\n      return false;\n    }\n    if (isDisplayInnerSnapDigit && elementRect) {\n      // inner\n      var rect = elementRect.rect;\n      if (rect[mainNames.start] <= targetStart && targetEnd <= rect[mainNames.end]) {\n        return false;\n      }\n    }\n    return true;\n  }).map(function (guideline, i) {\n    var pos = guideline.pos,\n      size = guideline.size,\n      element = guideline.element,\n      className = guideline.className;\n    var renderPos = [-targetPos[0] + pos[0], -targetPos[1] + pos[1]];\n    return renderInnerGuideline({\n      key: \"\".concat(type, \"-default-guideline-\").concat(i),\n      classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n      direction: type,\n      posValue: renderPos,\n      sizeValue: size,\n      zoom: zoom\n    }, React);\n  });\n}\nfunction renderDigitLine(moveable, type, lineType, index, gap, renderPos, className, React) {\n  var _a;\n  var _b = moveable.props,\n    _c = _b.snapDigit,\n    snapDigit = _c === void 0 ? 0 : _c,\n    _d = _b.isDisplaySnapDigit,\n    isDisplaySnapDigit = _d === void 0 ? true : _d,\n    _e = _b.snapDistFormat,\n    snapDistFormat = _e === void 0 ? function (v, type) {\n      // Type can be used render different values.\n      if (type === 'vertical') {\n        return v;\n      }\n      return v;\n    } : _e,\n    zoom = _b.zoom;\n  var scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n  var sizeName = type === \"vertical\" ? \"height\" : \"width\";\n  var absGap = Math.abs(gap);\n  var snapSize = isDisplaySnapDigit ? parseFloat(absGap.toFixed(snapDigit)) : 0;\n  return React.createElement(\"div\", {\n    key: \"\".concat(type, \"-\").concat(lineType, \"-guideline-\").concat(index),\n    className: prefix(\"guideline-group\", type),\n    style: (_a = {\n      left: \"\".concat(renderPos[0], \"px\"),\n      top: \"\".concat(renderPos[1], \"px\")\n    }, _a[sizeName] = \"\".concat(absGap, \"px\"), _a)\n  }, renderInnerGuideline({\n    direction: type,\n    classNames: [prefix(lineType), className],\n    size: \"100%\",\n    posValue: [0, 0],\n    sizeValue: absGap,\n    zoom: zoom\n  }, React), React.createElement(\"div\", {\n    className: prefix(\"size-value\", \"gap\"),\n    style: {\n      transform: \"translate\".concat(scaleType, \"(-50%) scale(\").concat(zoom, \")\")\n    }\n  }, snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"));\n}\nfunction groupByElementGuidelines(type, guidelines, targetRect, isDisplayInnerSnapDigit) {\n  var index = type === \"vertical\" ? 0 : 1;\n  var otherIndex = type === \"vertical\" ? 1 : 0;\n  var names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n  var targetStart = targetRect[names.start];\n  var targetEnd = targetRect[names.end];\n  return groupBy(guidelines, function (guideline) {\n    return guideline.pos[index];\n  }).map(function (nextGuidelines) {\n    var start = [];\n    var end = [];\n    var inner = [];\n    nextGuidelines.forEach(function (guideline) {\n      var _a, _b;\n      var element = guideline.element;\n      var rect = guideline.elementRect.rect;\n      if (rect[names.end] < targetStart) {\n        start.push(guideline);\n      } else if (targetEnd < rect[names.start]) {\n        end.push(guideline);\n      } else if (rect[names.start] <= targetStart && targetEnd <= rect[names.end] && isDisplayInnerSnapDigit) {\n        var pos = guideline.pos;\n        var elementRect1 = {\n          element: element,\n          rect: __assign(__assign({}, rect), (_a = {}, _a[names.end] = rect[names.start], _a))\n        };\n        var elementRect2 = {\n          element: element,\n          rect: __assign(__assign({}, rect), (_b = {}, _b[names.start] = rect[names.end], _b))\n        };\n        var nextPos1 = [0, 0];\n        var nextPos2 = [0, 0];\n        nextPos1[index] = pos[index];\n        nextPos1[otherIndex] = pos[otherIndex];\n        nextPos2[index] = pos[index];\n        nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n        start.push({\n          type: type,\n          pos: nextPos1,\n          size: 0,\n          elementRect: elementRect1,\n          direction: \"\",\n          elementDirection: \"end\"\n        });\n        end.push({\n          type: type,\n          pos: nextPos2,\n          size: 0,\n          elementRect: elementRect2,\n          direction: \"\",\n          elementDirection: \"start\"\n        });\n        // inner.push(guideline);\n      }\n    });\n    start.sort(function (a, b) {\n      return b.pos[otherIndex] - a.pos[otherIndex];\n    });\n    end.sort(function (a, b) {\n      return a.pos[otherIndex] - b.pos[otherIndex];\n    });\n    return {\n      total: nextGuidelines,\n      start: start,\n      end: end,\n      inner: inner\n    };\n  });\n}\nfunction renderDashedGuidelines(moveable, guidelines, targetPos, targetRect, React) {\n  var isDisplayInnerSnapDigit = moveable.props.isDisplayInnerSnapDigit;\n  var rendered = [];\n  [\"vertical\", \"horizontal\"].forEach(function (type) {\n    var nextGuidelines = guidelines.filter(function (guideline) {\n      return guideline.type === type;\n    });\n    var index = type === \"vertical\" ? 1 : 0;\n    var otherIndex = index ? 0 : 1;\n    var groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit);\n    var mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n    var sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    groups.forEach(function (_a) {\n      var total = _a.total,\n        start = _a.start,\n        end = _a.end,\n        inner = _a.inner;\n      var sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start];\n      var prevRect = targetRect;\n      start.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size = prevRect[mainNames.start] - nextRect[mainNames.end];\n        if (size > 0) {\n          var renderPos = [0, 0];\n          renderPos[index] = targetPos[index] + prevRect[mainNames.start] - targetStart - size;\n          renderPos[otherIndex] = sidePos;\n          rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size, renderPos, guideline.className, React));\n        }\n        prevRect = nextRect;\n      });\n      prevRect = targetRect;\n      end.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size = nextRect[mainNames.start] - prevRect[mainNames.end];\n        if (size > 0) {\n          var renderPos = [0, 0];\n          renderPos[index] = targetPos[index] + prevRect[mainNames.end] - targetStart;\n          renderPos[otherIndex] = sidePos;\n          rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size, renderPos, guideline.className, React));\n        }\n        prevRect = nextRect;\n      });\n      inner.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size1 = targetStart - nextRect[mainNames.start];\n        var size2 = nextRect[mainNames.end] - targetEnd;\n        var renderPos1 = [0, 0];\n        var renderPos2 = [0, 0];\n        renderPos1[index] = targetPos[index] - size1;\n        renderPos1[otherIndex] = sidePos;\n        renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n        renderPos2[otherIndex] = sidePos;\n        rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size1, renderPos1, guideline.className, React));\n        rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size2, renderPos2, guideline.className, React));\n      });\n    });\n  });\n  return rendered;\n}\nfunction renderGapGuidelines(moveable, guidelines, targetPos, targetRect, React) {\n  var rendered = [];\n  [\"horizontal\", \"vertical\"].forEach(function (type) {\n    var nextGuidelines = guidelines.filter(function (guideline) {\n      return guideline.type === type;\n    }).slice(0, 1);\n    var index = type === \"vertical\" ? 0 : 1;\n    var otherIndex = index ? 0 : 1;\n    var mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n    var sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    var targetSideStart = targetRect[sideNames.start];\n    var targetSideEnd = targetRect[sideNames.end];\n    nextGuidelines.forEach(function (_a) {\n      var gap = _a.gap,\n        gapRects = _a.gapRects;\n      var sideStartPos = Math.max.apply(Math, __spreadArray([targetSideStart], __read(gapRects.map(function (_a) {\n        var rect = _a.rect;\n        return rect[sideNames.start];\n      })), false));\n      var sideEndPos = Math.min.apply(Math, __spreadArray([targetSideEnd], __read(gapRects.map(function (_a) {\n        var rect = _a.rect;\n        return rect[sideNames.end];\n      })), false));\n      var sideCenterPos = (sideStartPos + sideEndPos) / 2;\n      if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd) / 2) {\n        return;\n      }\n      gapRects.forEach(function (_a) {\n        var rect = _a.rect,\n          className = _a.className;\n        var renderPos = [targetPos[0], targetPos[1]];\n        if (rect[mainNames.end] < targetStart) {\n          renderPos[index] += rect[mainNames.end] - targetStart;\n        } else if (targetEnd < rect[mainNames.start]) {\n          renderPos[index] += rect[mainNames.start] - targetStart - gap;\n        } else {\n          return;\n        }\n        renderPos[otherIndex] += sideCenterPos - targetSideStart;\n        rendered.push(renderDigitLine(moveable, index ? \"vertical\" : \"horizontal\", \"gap\", rendered.length, gap, renderPos, className, React));\n      });\n    });\n  });\n  return rendered;\n}\nfunction getTotalGuidelines(moveable) {\n  var _a, _b;\n  var state = moveable.state;\n  var containerClientRect = state.containerClientRect,\n    hasFixed = state.hasFixed;\n  var overflow = containerClientRect.overflow,\n    containerHeight = containerClientRect.scrollHeight,\n    containerWidth = containerClientRect.scrollWidth,\n    containerClientHeight = containerClientRect.clientHeight,\n    containerClientWidth = containerClientRect.clientWidth,\n    clientLeft = containerClientRect.clientLeft,\n    clientTop = containerClientRect.clientTop;\n  var _c = moveable.props,\n    _d = _c.snapGap,\n    snapGap = _d === void 0 ? true : _d,\n    verticalGuidelines = _c.verticalGuidelines,\n    horizontalGuidelines = _c.horizontalGuidelines,\n    _e = _c.snapThreshold,\n    snapThreshold = _e === void 0 ? 5 : _e,\n    _f = _c.maxSnapElementGuidelineDistance,\n    maxSnapElementGuidelineDistance = _f === void 0 ? Infinity : _f,\n    isDisplayGridGuidelines = _c.isDisplayGridGuidelines;\n  var _g = getRect(getAbsolutePosesByState(moveable.state)),\n    top = _g.top,\n    left = _g.left,\n    bottom = _g.bottom,\n    right = _g.right;\n  var targetRect = {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    center: (left + right) / 2,\n    middle: (top + bottom) / 2\n  };\n  var elementGuidelines = getElementGuidelines(moveable);\n  var totalGuidelines = __spreadArray([], __read(elementGuidelines), false);\n  var snapThresholdMultiples = ((_b = (_a = state.snapThresholdInfo) === null || _a === void 0 ? void 0 : _a.multiples) !== null && _b !== void 0 ? _b : [1, 1]).map(function (n) {\n    return n * snapThreshold;\n  });\n  if (snapGap) {\n    totalGuidelines.push.apply(totalGuidelines, __spreadArray([], __read(getGapGuidelines(moveable, targetRect, snapThresholdMultiples)), false));\n  }\n  var snapOffset = __assign({}, state.snapOffset || {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0\n  });\n  totalGuidelines.push.apply(totalGuidelines, __spreadArray([], __read(getGridGuidelines(moveable, overflow ? containerWidth : containerClientWidth, overflow ? containerHeight : containerClientHeight, clientLeft, clientTop, snapOffset, isDisplayGridGuidelines)), false));\n  if (hasFixed) {\n    var left_1 = containerClientRect.left,\n      top_1 = containerClientRect.top;\n    snapOffset.left += left_1;\n    snapOffset.top += top_1;\n    snapOffset.right += left_1;\n    snapOffset.bottom += top_1;\n  }\n  totalGuidelines.push.apply(totalGuidelines, __spreadArray([], __read(getDefaultGuidelines(horizontalGuidelines || false, verticalGuidelines || false, overflow ? containerWidth : containerClientWidth, overflow ? containerHeight : containerClientHeight, clientLeft, clientTop, snapOffset)), false));\n  totalGuidelines = totalGuidelines.filter(function (_a) {\n    var element = _a.element,\n      elementRect = _a.elementRect,\n      type = _a.type;\n    if (!element || !elementRect) {\n      return true;\n    }\n    var rect = elementRect.rect;\n    return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n  });\n  return totalGuidelines;\n}\nfunction getGapGuidelines(moveable, targetRect, snapThresholds) {\n  var _a = moveable.props,\n    _b = _a.maxSnapElementGuidelineDistance,\n    maxSnapElementGuidelineDistance = _b === void 0 ? Infinity : _b,\n    _c = _a.maxSnapElementGapDistance,\n    maxSnapElementGapDistance = _c === void 0 ? Infinity : _c;\n  var elementRects = moveable.state.elementRects;\n  var gapGuidelines = [];\n  [[\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP], [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP]].forEach(function (_a) {\n    var _b = __read(_a, 3),\n      type = _b[0],\n      mainNames = _b[1],\n      sideNames = _b[2];\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    var targetCenter = targetRect[mainNames.center];\n    var targetStart2 = targetRect[sideNames.start];\n    var targetEnd2 = targetRect[sideNames.end];\n    // element : moveable\n    var snapThresholdMap = {\n      left: snapThresholds[0],\n      top: snapThresholds[1]\n    };\n    function getDist(elementRect) {\n      var rect = elementRect.rect;\n      var snapThreshold = snapThresholdMap[mainNames.start];\n      if (rect[mainNames.end] < targetStart + snapThreshold) {\n        return targetStart - rect[mainNames.end];\n      } else if (targetEnd - snapThreshold < rect[mainNames.start]) {\n        return rect[mainNames.start] - targetEnd;\n      } else {\n        return -1;\n      }\n    }\n    var nextElementRects = elementRects.filter(function (elementRect) {\n      var rect = elementRect.rect;\n      if (rect[sideNames.start] > targetEnd2 || rect[sideNames.end] < targetStart2) {\n        return false;\n      }\n      return getDist(elementRect) > 0;\n    }).sort(function (a, b) {\n      return getDist(a) - getDist(b);\n    });\n    var groups = [];\n    nextElementRects.forEach(function (snapRect1) {\n      nextElementRects.forEach(function (snapRect2) {\n        if (snapRect1 === snapRect2) {\n          return;\n        }\n        var rect1 = snapRect1.rect;\n        var rect2 = snapRect2.rect;\n        var rect1Start = rect1[sideNames.start];\n        var rect1End = rect1[sideNames.end];\n        var rect2Start = rect2[sideNames.start];\n        var rect2End = rect2[sideNames.end];\n        if (rect1Start > rect2End || rect2Start > rect1End) {\n          return;\n        }\n        groups.push([snapRect1, snapRect2]);\n      });\n    });\n    groups.forEach(function (_a) {\n      var _b = __read(_a, 2),\n        snapRect1 = _b[0],\n        snapRect2 = _b[1];\n      var rect1 = snapRect1.rect;\n      var rect2 = snapRect2.rect;\n      var rect1Start = rect1[mainNames.start];\n      var rect1End = rect1[mainNames.end];\n      var rect2Start = rect2[mainNames.start];\n      var rect2End = rect2[mainNames.end];\n      var snapThreshold = snapThresholdMap[mainNames.start];\n      var gap = 0;\n      var pos = 0;\n      var isStart = false;\n      var isCenter = false;\n      var isEnd = false;\n      if (rect1End <= targetStart && targetEnd <= rect2Start) {\n        // (l)element1(r) : (l)target(r) : (l)element2(r)\n        isCenter = true;\n        gap = (rect2Start - rect1End - (targetEnd - targetStart)) / 2;\n        pos = rect1End + gap + (targetEnd - targetStart) / 2;\n        if (abs(pos - targetCenter) > snapThreshold) {\n          return;\n        }\n      } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n        // (l)element1(r) : (l)element2(r) : (l)target\n        isStart = true;\n        gap = rect2Start - rect1End;\n        pos = rect2End + gap;\n        if (abs(pos - targetStart) > snapThreshold) {\n          return;\n        }\n      } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n        // target(r) : (l)element1(r) : (l)element2(r)\n        isEnd = true;\n        gap = rect2Start - rect1End;\n        pos = rect1Start - gap;\n        if (abs(pos - targetEnd) > snapThreshold) {\n          return;\n        }\n      } else {\n        return;\n      }\n      if (!gap) {\n        return;\n      }\n      if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n        return;\n      }\n      if (gap > maxSnapElementGapDistance) {\n        return;\n      }\n      gapGuidelines.push({\n        type: type,\n        pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n        element: snapRect2.element,\n        size: 0,\n        className: snapRect2.className,\n        isStart: isStart,\n        isCenter: isCenter,\n        isEnd: isEnd,\n        gap: gap,\n        hide: true,\n        gapRects: [snapRect1, snapRect2],\n        direction: \"\",\n        elementDirection: \"\"\n      });\n    });\n  });\n  return gapGuidelines;\n}\nfunction startGridGroupGuidelines(moveable, clientLeft, clientTop, snapOffset) {\n  var _a, _b;\n  var props = moveable.props;\n  var state = moveable.state;\n  var snapGridAll = props.snapGridAll;\n  var _c = props.snapGridWidth,\n    snapGridWidth = _c === void 0 ? 0 : _c,\n    _d = props.snapGridHeight,\n    snapGridHeight = _d === void 0 ? 0 : _d;\n  var snapRenderInfo = state.snapRenderInfo;\n  var hasDirection = snapRenderInfo && (((_a = snapRenderInfo.direction) === null || _a === void 0 ? void 0 : _a[0]) || ((_b = snapRenderInfo.direction) === null || _b === void 0 ? void 0 : _b[1]));\n  var moveables = moveable.moveables;\n  // snap group's all child to grid.\n  if (snapGridAll && moveables && hasDirection && (snapGridWidth || snapGridHeight)) {\n    if (state.snapThresholdInfo) {\n      return;\n    }\n    state.snapThresholdInfo = {\n      multiples: [1, 1],\n      offset: [0, 0]\n    };\n    var rect_1 = moveable.getRect();\n    var children_1 = rect_1.children;\n    var direction = snapRenderInfo.direction;\n    if (children_1) {\n      var result = direction.map(function (dir, i) {\n        var _a = i === 0 ? {\n            snapSize: snapGridWidth,\n            posName: \"left\",\n            sizeName: \"width\",\n            clientOffset: snapOffset.left - clientLeft\n          } : {\n            snapSize: snapGridHeight,\n            posName: \"top\",\n            sizeName: \"height\",\n            clientOffset: snapOffset.top - clientTop\n          },\n          snapSize = _a.snapSize,\n          posName = _a.posName,\n          sizeName = _a.sizeName,\n          clientOffset = _a.clientOffset;\n        if (!snapSize) {\n          return {\n            dir: dir,\n            multiple: 1,\n            snapSize: snapSize,\n            snapOffset: 0\n          };\n        }\n        var rectSize = rect_1[sizeName];\n        var rectPos = rect_1[posName];\n        // 사이즈보다 만약 작다면 어떻게 해야되죠?\n        var childSizes = flat$1(children_1.map(function (child) {\n          return [child[posName] - rectPos, child[sizeName], rectSize - child[sizeName] - child[posName] + rectPos];\n        })).filter(function (v) {\n          return v;\n        }).sort(function (a, b) {\n          return a - b;\n        });\n        var firstChildSize = childSizes[0];\n        var childSnapSizes = childSizes.map(function (size) {\n          return throttle(size / firstChildSize, 0.1) * snapSize;\n        });\n        var n = 1;\n        var rectRatio = throttle(rectSize / firstChildSize, 0.1);\n        for (n = 1; n <= 10; ++n) {\n          if (childSnapSizes.every(function (childSize) {\n            return childSize * n % 1 === 0;\n          })) {\n            break;\n          }\n        }\n        // dir 1 (fixed -1)\n        // dir 0 (fixed 0)\n        // dir -1 (fixed 1)\n        var ratio = (-dir + 1) / 2;\n        var offsetPos = dot(rectPos - clientOffset, rectPos - clientOffset + rectSize, ratio, 1 - ratio);\n        return {\n          multiple: rectRatio * n,\n          dir: dir,\n          snapSize: snapSize,\n          snapOffset: Math.round(offsetPos / snapSize)\n        };\n      });\n      var multiples = result.map(function (r) {\n        return r.multiple || 1;\n      });\n      state.snapThresholdInfo.multiples = multiples;\n      state.snapThresholdInfo.offset = result.map(function (r) {\n        return r.snapOffset;\n      });\n      result.forEach(function (r, i) {\n        if (r.snapSize) ;\n      });\n    }\n  } else {\n    state.snapThresholdInfo = null;\n  }\n}\nfunction getGridGuidelines(moveable, containerWidth, containerHeight, clientLeft, clientTop, snapOffset, isDisplayGridGuidelines) {\n  if (clientLeft === void 0) {\n    clientLeft = 0;\n  }\n  if (clientTop === void 0) {\n    clientTop = 0;\n  }\n  var props = moveable.props;\n  var state = moveable.state;\n  var _a = props.snapGridWidth,\n    snapGridWidth = _a === void 0 ? 0 : _a,\n    _b = props.snapGridHeight,\n    snapGridHeight = _b === void 0 ? 0 : _b;\n  var guidelines = [];\n  var snapOffsetLeft = snapOffset.left,\n    snapOffsetTop = snapOffset.top;\n  var startOffset = [0, 0];\n  startGridGroupGuidelines(moveable, clientLeft, clientTop, snapOffset);\n  var snapThresholdInfo = state.snapThresholdInfo;\n  var defaultSnapGridWidth = snapGridWidth;\n  var defaultSnapGridHeight = snapGridHeight;\n  if (snapThresholdInfo) {\n    snapGridWidth *= snapThresholdInfo.multiples[0] || 1;\n    snapGridHeight *= snapThresholdInfo.multiples[1] || 1;\n    startOffset = snapThresholdInfo.offset;\n  }\n  if (snapGridHeight) {\n    var pushGuideline = function (pos) {\n      guidelines.push({\n        type: \"horizontal\",\n        pos: [snapOffsetLeft, throttle(startOffset[1] * defaultSnapGridHeight + pos - clientTop + snapOffsetTop, 0.1)],\n        className: prefix(\"grid-guideline\"),\n        size: containerWidth,\n        hide: !isDisplayGridGuidelines,\n        direction: \"\",\n        grid: true\n      });\n    };\n    for (var pos = 0; pos <= containerHeight * 2; pos += snapGridHeight) {\n      pushGuideline(pos);\n    }\n    for (var pos = -snapGridHeight; pos >= -containerHeight; pos -= snapGridHeight) {\n      pushGuideline(pos);\n    }\n  }\n  if (snapGridWidth) {\n    var pushGuideline = function (pos) {\n      guidelines.push({\n        type: \"vertical\",\n        pos: [throttle(startOffset[0] * defaultSnapGridWidth + pos - clientLeft + snapOffsetLeft, 0.1), snapOffsetTop],\n        className: prefix(\"grid-guideline\"),\n        size: containerHeight,\n        hide: !isDisplayGridGuidelines,\n        direction: \"\",\n        grid: true\n      });\n    };\n    for (var pos = 0; pos <= containerWidth * 2; pos += snapGridWidth) {\n      pushGuideline(pos);\n    }\n    for (var pos = -snapGridWidth; pos >= -containerWidth; pos -= snapGridWidth) {\n      pushGuideline(pos);\n    }\n  }\n  return guidelines;\n}\nfunction checkBetweenRects(rect1, rect2, type, distance) {\n  if (type === \"horizontal\") {\n    return abs(rect1.right - rect2.left) <= distance || abs(rect1.left - rect2.right) <= distance || rect1.left <= rect2.right && rect2.left <= rect1.right;\n  } else if (type === \"vertical\") {\n    return abs(rect1.bottom - rect2.top) <= distance || abs(rect1.top - rect2.bottom) <= distance || rect1.top <= rect2.bottom && rect2.top <= rect1.bottom;\n  }\n  return true;\n}\nfunction getElementGuidelines(moveable) {\n  var state = moveable.state;\n  var _a = moveable.props.elementGuidelines,\n    elementGuidelines = _a === void 0 ? [] : _a;\n  if (!elementGuidelines.length) {\n    state.elementRects = [];\n    return [];\n  }\n  var prevValues = (state.elementRects || []).filter(function (snapRect) {\n    return !snapRect.refresh;\n  });\n  var nextElementGuidelines = elementGuidelines.map(function (el) {\n    if (isObject(el) && \"element\" in el) {\n      return __assign(__assign({}, el), {\n        element: getRefTarget(el.element, true)\n      });\n    }\n    return {\n      element: getRefTarget(el, true)\n    };\n  }).filter(function (value) {\n    return value.element;\n  });\n  var _b = diff(prevValues.map(function (v) {\n      return v.element;\n    }), nextElementGuidelines.map(function (v) {\n      return v.element;\n    })),\n    maintained = _b.maintained,\n    added = _b.added;\n  var nextValues = [];\n  maintained.forEach(function (_a) {\n    var _b = __read(_a, 2),\n      prevIndex = _b[0],\n      nextIndex = _b[1];\n    nextValues[nextIndex] = prevValues[prevIndex];\n  });\n  getSnapElementRects(moveable, added.map(function (index) {\n    return nextElementGuidelines[index];\n  })).map(function (rect, i) {\n    nextValues[added[i]] = rect;\n  });\n  state.elementRects = nextValues;\n  var elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n  var nextGuidelines = [];\n  nextValues.forEach(function (snapRect) {\n    var element = snapRect.element,\n      _a = snapRect.top,\n      topValue = _a === void 0 ? elementSnapDirections.top : _a,\n      _b = snapRect.left,\n      leftValue = _b === void 0 ? elementSnapDirections.left : _b,\n      _c = snapRect.right,\n      rightValue = _c === void 0 ? elementSnapDirections.right : _c,\n      _d = snapRect.bottom,\n      bottomValue = _d === void 0 ? elementSnapDirections.bottom : _d,\n      _e = snapRect.center,\n      centerValue = _e === void 0 ? elementSnapDirections.center : _e,\n      _f = snapRect.middle,\n      middleValue = _f === void 0 ? elementSnapDirections.middle : _f,\n      className = snapRect.className,\n      rect = snapRect.rect;\n    var _g = splitSnapDirectionPoses({\n        top: topValue,\n        right: rightValue,\n        left: leftValue,\n        bottom: bottomValue,\n        center: centerValue,\n        middle: middleValue\n      }, rect),\n      horizontal = _g.horizontal,\n      vertical = _g.vertical,\n      horizontalNames = _g.horizontalNames,\n      verticalNames = _g.verticalNames;\n    var rectTop = rect.top;\n    var rectLeft = rect.left;\n    var width = rect.right - rectLeft;\n    var height = rect.bottom - rectTop;\n    var sizes = [width, height];\n    vertical.forEach(function (pos, i) {\n      nextGuidelines.push({\n        type: \"vertical\",\n        element: element,\n        pos: [throttle(pos, 0.1), rectTop],\n        size: height,\n        sizes: sizes,\n        className: className,\n        elementRect: snapRect,\n        elementDirection: SNAP_SKIP_NAMES_MAP[verticalNames[i]] || verticalNames[i],\n        direction: \"\"\n      });\n    });\n    horizontal.forEach(function (pos, i) {\n      nextGuidelines.push({\n        type: \"horizontal\",\n        element: element,\n        pos: [rectLeft, throttle(pos, 0.1)],\n        size: width,\n        sizes: sizes,\n        className: className,\n        elementRect: snapRect,\n        elementDirection: SNAP_SKIP_NAMES_MAP[horizontalNames[i]] || horizontalNames[i],\n        direction: \"\"\n      });\n    });\n  });\n  return nextGuidelines;\n}\nfunction getObjectGuidelines(guidelines, containerSize) {\n  return guidelines ? guidelines.map(function (info) {\n    var posGuideline = isObject(info) ? info : {\n      pos: info\n    };\n    var pos = posGuideline.pos;\n    if (isNumber(pos)) {\n      return posGuideline;\n    } else {\n      return __assign(__assign({}, posGuideline), {\n        pos: convertUnitSize(pos, containerSize)\n      });\n    }\n  }) : [];\n}\nfunction getDefaultGuidelines(horizontalGuidelines, verticalGuidelines, width, height, clientLeft, clientTop, snapOffset) {\n  if (clientLeft === void 0) {\n    clientLeft = 0;\n  }\n  if (clientTop === void 0) {\n    clientTop = 0;\n  }\n  if (snapOffset === void 0) {\n    snapOffset = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n  }\n  var guidelines = [];\n  var snapOffsetLeft = snapOffset.left,\n    snapOffsetTop = snapOffset.top,\n    snapOffsetBottom = snapOffset.bottom,\n    snapOffsetRight = snapOffset.right;\n  var snapWidth = width + snapOffsetRight - snapOffsetLeft;\n  var snapHeight = height + snapOffsetBottom - snapOffsetTop;\n  getObjectGuidelines(horizontalGuidelines, snapHeight).forEach(function (posInfo) {\n    guidelines.push({\n      type: \"horizontal\",\n      pos: [snapOffsetLeft, throttle(posInfo.pos - clientTop + snapOffsetTop, 0.1)],\n      size: snapWidth,\n      className: posInfo.className,\n      direction: \"\"\n    });\n  });\n  getObjectGuidelines(verticalGuidelines, snapWidth).forEach(function (posInfo) {\n    guidelines.push({\n      type: \"vertical\",\n      pos: [throttle(posInfo.pos - clientLeft + snapOffsetLeft, 0.1), snapOffsetTop],\n      size: snapHeight,\n      className: posInfo.className,\n      direction: \"\"\n    });\n  });\n  return guidelines;\n}\nfunction getSnapElementRects(moveable, values) {\n  if (!values.length) {\n    return [];\n  }\n  var groupable = moveable.props.groupable;\n  var state = moveable.state;\n  var containerClientRect = state.containerClientRect,\n    // targetClientRect: {\n    //     top: clientTop,\n    //     left: clientLeft,\n    // },\n    rootMatrix = state.rootMatrix,\n    is3d = state.is3d,\n    offsetDelta = state.offsetDelta;\n  var n = is3d ? 4 : 3;\n  var _a = __read(calculateContainerPos(rootMatrix, containerClientRect, n), 2),\n    containerLeft = _a[0],\n    containerTop = _a[1];\n  // const poses = getAbsolutePosesByState(state);\n  // const {\n  //     minX: targetLeft,\n  //     minY: targetTop,\n  // } = getMinMaxs(poses);\n  // const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n  //     clientLeft - containerLeft,\n  //     clientTop - containerTop,\n  // ], n)).map(pos => roundSign(pos));\n  var offsetLeft = groupable ? 0 : offsetDelta[0];\n  var offsetTop = groupable ? 0 : offsetDelta[1];\n  return values.map(function (value) {\n    var rect = value.element.getBoundingClientRect();\n    var left = rect.left - containerLeft - offsetLeft;\n    var top = rect.top - containerTop - offsetTop;\n    var bottom = top + rect.height;\n    var right = left + rect.width;\n    var _a = __read(calculateInversePosition(rootMatrix, [left, top], n), 2),\n      elementLeft = _a[0],\n      elementTop = _a[1];\n    var _b = __read(calculateInversePosition(rootMatrix, [right, bottom], n), 2),\n      elementRight = _b[0],\n      elementBottom = _b[1];\n    return __assign(__assign({}, value), {\n      rect: {\n        left: elementLeft,\n        right: elementRight,\n        top: elementTop,\n        bottom: elementBottom,\n        center: (elementLeft + elementRight) / 2,\n        middle: (elementTop + elementBottom) / 2\n      }\n    });\n  });\n}\nfunction checkSnapInfo(moveable) {\n  var state = moveable.state;\n  var container = state.container;\n  var snapContainer = moveable.props.snapContainer || container;\n  if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\n    return false;\n  }\n  var containerClientRect = state.containerClientRect;\n  var snapOffset = {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0\n  };\n  if (container !== snapContainer) {\n    var snapContainerTarget = getRefTarget(snapContainer, true);\n    if (snapContainerTarget) {\n      var snapContainerRect = getClientRect(snapContainerTarget);\n      var offset1 = getDragDistByState(state, [snapContainerRect.left - containerClientRect.left, snapContainerRect.top - containerClientRect.top]);\n      var offset2 = getDragDistByState(state, [snapContainerRect.right - containerClientRect.right, snapContainerRect.bottom - containerClientRect.bottom]);\n      snapOffset.left = throttle(offset1[0], 0.00001);\n      snapOffset.top = throttle(offset1[1], 0.00001);\n      snapOffset.right = throttle(offset2[0], 0.00001);\n      snapOffset.bottom = throttle(offset2[1], 0.00001);\n    }\n  }\n  state.snapContainer = snapContainer;\n  state.snapOffset = snapOffset;\n  state.guidelines = getTotalGuidelines(moveable);\n  state.enableSnap = true;\n  return true;\n}\nfunction getNextFixedPoses(matrix, width, height, fixedDirection, fixedPos, is3d) {\n  var nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n  var nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n  return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\nfunction normalized(value) {\n  return value ? value / abs(value) : 0;\n}\nfunction getSizeOffsetInfo(moveable, poses, direction, keepRatio, isRequest, datas) {\n  var fixedDirection = datas.fixedDirection;\n  var directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n  var innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n  var offsets = __spreadArray(__spreadArray([], __read(getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas)), false), __read(getInnerBoundInfo(moveable, innerBoundLineInfos, datas)), false);\n  var widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n  var heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n  return {\n    width: {\n      isBound: widthOffsetInfo.isBound,\n      offset: widthOffsetInfo.offset[0]\n    },\n    height: {\n      isBound: heightOffsetInfo.isBound,\n      offset: heightOffsetInfo.offset[1]\n    }\n  };\n}\nfunction recheckSizeByTwoDirection(moveable, poses, width, height, maxWidth, maxHeight, direction, isRequest, datas) {\n  var snapPos = getPosByDirection(poses, direction);\n  var _a = checkMoveableSnapBounds(moveable, isRequest, {\n      vertical: [snapPos[0]],\n      horizontal: [snapPos[1]]\n    }),\n    horizontalOffset = _a.horizontal.offset,\n    verticalOffset = _a.vertical.offset;\n  if (throttle(verticalOffset, FLOAT_POINT_NUM) || throttle(horizontalOffset, FLOAT_POINT_NUM)) {\n    var _b = __read(getDragDist({\n        datas: datas,\n        distX: -verticalOffset,\n        distY: -horizontalOffset\n      }), 2),\n      nextWidthOffset = _b[0],\n      nextHeightOffset = _b[1];\n    var nextWidth = Math.min(maxWidth || Infinity, width + direction[0] * nextWidthOffset);\n    var nextHeight = Math.min(maxHeight || Infinity, height + direction[1] * nextHeightOffset);\n    return [nextWidth - width, nextHeight - height];\n  }\n  return [0, 0];\n}\nfunction checkSizeDist(moveable, getNextPoses, width, height, direction, fixedPosition, isRequest, datas) {\n  var poses = getAbsolutePosesByState(moveable.state);\n  var keepRatio = moveable.props.keepRatio;\n  var widthOffset = 0;\n  var heightOffset = 0;\n  for (var i = 0; i < 2; ++i) {\n    var nextPoses = getNextPoses(widthOffset, heightOffset);\n    var _a = getSizeOffsetInfo(moveable, nextPoses, direction, keepRatio, isRequest, datas),\n      widthOffsetInfo = _a.width,\n      heightOffsetInfo = _a.height;\n    var isWidthBound = widthOffsetInfo.isBound;\n    var isHeightBound = heightOffsetInfo.isBound;\n    var nextWidthOffset = widthOffsetInfo.offset;\n    var nextHeightOffset = heightOffsetInfo.offset;\n    if (i === 1) {\n      if (!isWidthBound) {\n        nextWidthOffset = 0;\n      }\n      if (!isHeightBound) {\n        nextHeightOffset = 0;\n      }\n    }\n    if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n      return [0, 0];\n    }\n    if (keepRatio) {\n      var widthDist = abs(nextWidthOffset) * (width ? 1 / width : 1);\n      var heightDist = abs(nextHeightOffset) * (height ? 1 / height : 1);\n      var isGetWidthOffset = isWidthBound && isHeightBound ? widthDist < heightDist : isHeightBound || !isWidthBound && widthDist < heightDist;\n      if (isGetWidthOffset) {\n        // width : height = ? : heightOffset\n        nextWidthOffset = width * nextHeightOffset / height;\n      } else {\n        // width : height = widthOffset : ?\n        nextHeightOffset = height * nextWidthOffset / width;\n      }\n    }\n    widthOffset += nextWidthOffset;\n    heightOffset += nextHeightOffset;\n  }\n  if (!keepRatio && direction[0] && direction[1]) {\n    var _b = checkMaxBounds(moveable, poses, direction, fixedPosition, datas),\n      maxWidth = _b.maxWidth,\n      maxHeight = _b.maxHeight;\n    var _c = __read(recheckSizeByTwoDirection(moveable, getNextPoses(widthOffset, heightOffset).map(function (pos) {\n        return pos.map(function (p) {\n          return throttle(p, FLOAT_POINT_NUM);\n        });\n      }), width + widthOffset, height + heightOffset, maxWidth, maxHeight, direction, isRequest, datas), 2),\n      nextWidthOffset = _c[0],\n      nextHeightOffset = _c[1];\n    widthOffset += nextWidthOffset;\n    heightOffset += nextHeightOffset;\n  }\n  return [widthOffset, heightOffset];\n}\nfunction absDegree(deg) {\n  if (deg < 0) {\n    deg = deg % 360 + 360;\n  }\n  deg %= 360;\n  return deg;\n}\nfunction bumpDegree(baseDeg, snapDeg) {\n  // baseDeg -80\n  // snapDeg 270\n  // return -90\n  snapDeg = absDegree(snapDeg);\n  var count = Math.floor(baseDeg / 360);\n  var deg1 = count * 360 + 360 - snapDeg;\n  var deg2 = count * 360 + snapDeg;\n  return abs(baseDeg - deg1) < abs(baseDeg - deg2) ? deg1 : deg2;\n}\nfunction getMinDegreeDistance(deg1, deg2) {\n  deg1 = absDegree(deg1);\n  deg2 = absDegree(deg2);\n  var deg3 = absDegree(deg1 - deg2);\n  return Math.min(deg3, 360 - deg3);\n}\nfunction checkSnapRotate(moveable, rect, dist, rotation) {\n  var _a;\n  var props = moveable.props;\n  var snapRotationThreshold = (_a = props[NAME_snapRotationThreshold]) !== null && _a !== void 0 ? _a : 5;\n  var snapRotationDegrees = props[NAME_snapRotationDegrees];\n  if (hasGuidelines(moveable, \"rotatable\")) {\n    var pos1 = rect.pos1,\n      pos2 = rect.pos2,\n      pos3 = rect.pos3,\n      pos4 = rect.pos4,\n      origin2_1 = rect.origin;\n    var rad_1 = dist * Math.PI / 180;\n    var prevPoses = [pos1, pos2, pos3, pos4].map(function (pos) {\n      return minus(pos, origin2_1);\n    });\n    var nextPoses = prevPoses.map(function (pos) {\n      return rotate(pos, rad_1);\n    });\n    // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n    // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n    var result = __spreadArray(__spreadArray([], __read(checkRotateBounds(moveable, prevPoses, nextPoses, origin2_1, dist)), false), __read(checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin2_1, dist)), false);\n    result.sort(function (a, b) {\n      return abs(a - dist) - abs(b - dist);\n    });\n    var isSnap = result.length > 0;\n    if (isSnap) {\n      return {\n        isSnap: isSnap,\n        dist: isSnap ? result[0] : dist\n      };\n    }\n  }\n  if ((snapRotationDegrees === null || snapRotationDegrees === void 0 ? void 0 : snapRotationDegrees.length) && snapRotationThreshold) {\n    var sorted = snapRotationDegrees.slice().sort(function (a, b) {\n      return getMinDegreeDistance(a, rotation) - getMinDegreeDistance(b, rotation);\n    });\n    var firstDegree = sorted[0];\n    if (getMinDegreeDistance(firstDegree, rotation) <= snapRotationThreshold) {\n      return {\n        isSnap: true,\n        dist: dist + bumpDegree(rotation, firstDegree) - rotation\n      };\n    }\n  }\n  return {\n    isSnap: false,\n    dist: dist\n  };\n}\nfunction checkSnapResize(moveable, width, height, direction, fixedPosition, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"resizable\")) {\n    return [0, 0];\n  }\n  var fixedDirection = datas.fixedDirection,\n    nextAllMatrix = datas.nextAllMatrix;\n  var _a = moveable.state,\n    allMatrix = _a.allMatrix,\n    is3d = _a.is3d;\n  return checkSizeDist(moveable, function (widthOffset, heightOffset) {\n    return getNextFixedPoses(nextAllMatrix || allMatrix, width + widthOffset, height + heightOffset, fixedDirection, fixedPosition, is3d);\n  }, width, height, direction, fixedPosition, isRequest, datas);\n}\nfunction checkSnapScale(moveable, scale, direction, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"scalable\")) {\n    return [0, 0];\n  }\n  var startOffsetWidth = datas.startOffsetWidth,\n    startOffsetHeight = datas.startOffsetHeight,\n    fixedPosition = datas.fixedPosition,\n    fixedDirection = datas.fixedDirection,\n    is3d = datas.is3d;\n  var sizeDist = checkSizeDist(moveable, function (widthOffset, heightOffset) {\n    return getNextFixedPoses(scaleMatrix(datas, plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight])), startOffsetWidth, startOffsetHeight, fixedDirection, fixedPosition, is3d);\n  }, startOffsetWidth, startOffsetHeight, direction, fixedPosition, isRequest, datas);\n  return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\nfunction startCheckSnapDrag(moveable, datas) {\n  datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\nfunction getSnapGuidelines(posInfos) {\n  var guidelines = [];\n  posInfos.forEach(function (posInfo) {\n    posInfo.guidelineInfos.forEach(function (_a) {\n      var guideline = _a.guideline;\n      if (find(guidelines, function (info) {\n        return info.guideline === guideline;\n      })) {\n        return;\n      }\n      guideline.direction = \"\";\n      guidelines.push({\n        guideline: guideline,\n        posInfo: posInfo\n      });\n    });\n  });\n  return guidelines.map(function (_a) {\n    var guideline = _a.guideline,\n      posInfo = _a.posInfo;\n    return __assign(__assign({}, guideline), {\n      direction: posInfo.direction\n    });\n  });\n}\nfunction addBoundGuidelines(moveable, verticalPoses, horizontalPoses, verticalSnapPoses, horizontalSnapPoses, externalBounds) {\n  var _a = checkBoundPoses(getBounds(moveable, externalBounds), verticalPoses, horizontalPoses),\n    verticalBoundInfos = _a.vertical,\n    horizontalBoundInfos = _a.horizontal;\n  var boundMap = getInitialBounds();\n  verticalBoundInfos.forEach(function (info) {\n    if (info.isBound) {\n      if (info.direction === \"start\") {\n        boundMap.left = true;\n      }\n      if (info.direction === \"end\") {\n        boundMap.right = true;\n      }\n      verticalSnapPoses.push({\n        type: \"bounds\",\n        pos: info.pos\n      });\n    }\n  });\n  horizontalBoundInfos.forEach(function (info) {\n    if (info.isBound) {\n      if (info.direction === \"start\") {\n        boundMap.top = true;\n      }\n      if (info.direction === \"end\") {\n        boundMap.bottom = true;\n      }\n      horizontalSnapPoses.push({\n        type: \"bounds\",\n        pos: info.pos\n      });\n    }\n  });\n  var _b = checkInnerBoundPoses(moveable),\n    innerBoundMap = _b.boundMap,\n    verticalInnerBoundPoses = _b.vertical,\n    horizontalInnerBoundPoses = _b.horizontal;\n  verticalInnerBoundPoses.forEach(function (innerPos) {\n    if (findIndex(verticalSnapPoses, function (_a) {\n      var type = _a.type,\n        pos = _a.pos;\n      return type === \"bounds\" && pos === innerPos;\n    }) >= 0) {\n      return;\n    }\n    verticalSnapPoses.push({\n      type: \"bounds\",\n      pos: innerPos\n    });\n  });\n  horizontalInnerBoundPoses.forEach(function (innerPos) {\n    if (findIndex(horizontalSnapPoses, function (_a) {\n      var type = _a.type,\n        pos = _a.pos;\n      return type === \"bounds\" && pos === innerPos;\n    }) >= 0) {\n      return;\n    }\n    horizontalSnapPoses.push({\n      type: \"bounds\",\n      pos: innerPos\n    });\n  });\n  return {\n    boundMap: boundMap,\n    innerBoundMap: innerBoundMap\n  };\n}\nvar directionCondition$1 = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n/**\r\n * @namespace Moveable.Snappable\r\n * @description Whether or not target can be snapped to the guideline. (default: false)\r\n * @sort 2\r\n */\nvar Snappable = {\n  name: \"snappable\",\n  dragRelation: \"strong\",\n  props: [\"snappable\", \"snapContainer\", \"snapDirections\", \"elementSnapDirections\", \"snapGap\", \"snapGridWidth\", \"snapGridHeight\", \"isDisplaySnapDigit\", \"isDisplayInnerSnapDigit\", \"isDisplayGridGuidelines\", \"snapDigit\", \"snapThreshold\", \"snapRenderThreshold\", \"snapGridAll\", NAME_snapRotationThreshold, NAME_snapRotationDegrees, NAME_snapHorizontalThreshold, NAME_snapVerticalThreshold, \"horizontalGuidelines\", \"verticalGuidelines\", \"elementGuidelines\", \"bounds\", \"innerBounds\", \"snapDistFormat\", \"maxSnapElementGuidelineDistance\", \"maxSnapElementGapDistance\"],\n  events: [\"snap\", \"bound\"],\n  css: [\":host {\\n--bounds-color: #d66;\\n}\\n.guideline {\\npointer-events: none;\\nz-index: 2;\\n}\\n.guideline.bounds {\\nbackground: #d66;\\nbackground: var(--bounds-color);\\n}\\n.guideline-group {\\nposition: absolute;\\ntop: 0;\\nleft: 0;\\n}\\n.guideline-group .size-value {\\nposition: absolute;\\ncolor: #f55;\\nfont-size: 12px;\\nfont-size: calc(12px * var(--zoom));\\nfont-weight: bold;\\n}\\n.guideline-group.horizontal .size-value {\\ntransform-origin: 50% 100%;\\ntransform: translateX(-50%);\\nleft: 50%;\\nbottom: 5px;\\nbottom: calc(2px + 3px * var(--zoom));\\n}\\n.guideline-group.vertical .size-value {\\ntransform-origin: 0% 50%;\\ntop: 50%;\\ntransform: translateY(-50%);\\nleft: 5px;\\nleft: calc(2px + 3px * var(--zoom));\\n}\\n.guideline.gap {\\nbackground: #f55;\\n}\\n.size-value.gap {\\ncolor: #f55;\\n}\\n\"],\n  render: function (moveable, React) {\n    var state = moveable.state;\n    var targetTop = state.top,\n      targetLeft = state.left,\n      pos1 = state.pos1,\n      pos2 = state.pos2,\n      pos3 = state.pos3,\n      pos4 = state.pos4,\n      snapRenderInfo = state.snapRenderInfo;\n    var _a = moveable.props.snapRenderThreshold,\n      snapRenderThreshold = _a === void 0 ? 1 : _a;\n    if (!snapRenderInfo || !snapRenderInfo.render || !hasGuidelines(moveable, \"\")) {\n      // reset store\n      watchValue(moveable, \"boundMap\", getInitialBounds(), function (v) {\n        return JSON.stringify(v);\n      });\n      watchValue(moveable, \"innerBoundMap\", getInitialBounds(), function (v) {\n        return JSON.stringify(v);\n      });\n      return [];\n    }\n    state.guidelines = getTotalGuidelines(moveable);\n    var minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n    var minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n    var externalPoses = snapRenderInfo.externalPoses || [];\n    var poses = getAbsolutePosesByState(moveable.state);\n    var verticalSnapPoses = [];\n    var horizontalSnapPoses = [];\n    var verticalGuidelines = [];\n    var horizontalGuidelines = [];\n    var snapInfos = [];\n    var _b = getRect(poses),\n      width = _b.width,\n      height = _b.height,\n      top = _b.top,\n      left = _b.left,\n      bottom = _b.bottom,\n      right = _b.right;\n    var targetRect = {\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom,\n      center: (left + right) / 2,\n      middle: (top + bottom) / 2\n    };\n    var hasExternalPoses = externalPoses.length > 0;\n    var externalRect = hasExternalPoses ? getRect(externalPoses) : {};\n    if (!snapRenderInfo.request) {\n      if (snapRenderInfo.direction) {\n        snapInfos.push(getSnapInfosByDirection(moveable, poses, snapRenderInfo.direction, snapRenderThreshold, snapRenderThreshold));\n      }\n      if (snapRenderInfo.snap) {\n        var rect = getRect(poses);\n        if (snapRenderInfo.center) {\n          rect.middle = (rect.top + rect.bottom) / 2;\n          rect.center = (rect.left + rect.right) / 2;\n        }\n        snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold, snapRenderThreshold));\n      }\n      if (hasExternalPoses) {\n        if (snapRenderInfo.center) {\n          externalRect.middle = (externalRect.top + externalRect.bottom) / 2;\n          externalRect.center = (externalRect.left + externalRect.right) / 2;\n        }\n        snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold, snapRenderThreshold));\n      }\n      snapInfos.forEach(function (snapInfo) {\n        var verticalPosInfos = snapInfo.vertical.posInfos,\n          horizontalPosInfos = snapInfo.horizontal.posInfos;\n        verticalSnapPoses.push.apply(verticalSnapPoses, __spreadArray([], __read(verticalPosInfos.filter(function (_a) {\n          var guidelineInfos = _a.guidelineInfos;\n          return guidelineInfos.some(function (_a) {\n            var guideline = _a.guideline;\n            return !guideline.hide;\n          });\n        }).map(function (posInfo) {\n          return {\n            type: \"snap\",\n            pos: posInfo.pos\n          };\n        })), false));\n        horizontalSnapPoses.push.apply(horizontalSnapPoses, __spreadArray([], __read(horizontalPosInfos.filter(function (_a) {\n          var guidelineInfos = _a.guidelineInfos;\n          return guidelineInfos.some(function (_a) {\n            var guideline = _a.guideline;\n            return !guideline.hide;\n          });\n        }).map(function (posInfo) {\n          return {\n            type: \"snap\",\n            pos: posInfo.pos\n          };\n        })), false));\n        verticalGuidelines.push.apply(verticalGuidelines, __spreadArray([], __read(getSnapGuidelines(verticalPosInfos)), false));\n        horizontalGuidelines.push.apply(horizontalGuidelines, __spreadArray([], __read(getSnapGuidelines(horizontalPosInfos)), false));\n      });\n    }\n    var _c = addBoundGuidelines(moveable, [left, right], [top, bottom], verticalSnapPoses, horizontalSnapPoses),\n      boundMap = _c.boundMap,\n      innerBoundMap = _c.innerBoundMap;\n    if (hasExternalPoses) {\n      addBoundGuidelines(moveable, [externalRect.left, externalRect.right], [externalRect.top, externalRect.bottom], verticalSnapPoses, horizontalSnapPoses, snapRenderInfo.externalBounds);\n    }\n    var allGuidelines = __spreadArray(__spreadArray([], __read(verticalGuidelines), false), __read(horizontalGuidelines), false);\n    var elementGuidelines = allGuidelines.filter(function (guideline) {\n      return guideline.element && !guideline.gapRects;\n    });\n    var gapGuidelines = allGuidelines.filter(function (guideline) {\n      return guideline.gapRects;\n    }).sort(function (a, b) {\n      return a.gap - b.gap;\n    });\n    triggerEvent(moveable, \"onSnap\", {\n      guidelines: allGuidelines.filter(function (_a) {\n        var element = _a.element;\n        return !element;\n      }),\n      elements: elementGuidelines,\n      gaps: gapGuidelines\n    }, true);\n    var nextBoundMap = watchValue(moveable, \"boundMap\", boundMap, function (v) {\n      return JSON.stringify(v);\n    }, getInitialBounds());\n    var nextInnerBoundMap = watchValue(moveable, \"innerBoundMap\", innerBoundMap, function (v) {\n      return JSON.stringify(v);\n    }, getInitialBounds());\n    if (boundMap === nextBoundMap || innerBoundMap === nextInnerBoundMap) {\n      triggerEvent(moveable, \"onBound\", {\n        bounds: boundMap,\n        innerBounds: innerBoundMap\n      }, true);\n    }\n    // verticalSnapPoses.\n    return __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(renderDashedGuidelines(moveable, elementGuidelines, [minLeft, minTop], targetRect, React)), false), __read(renderGapGuidelines(moveable, gapGuidelines, [minLeft, minTop], targetRect, React)), false), __read(renderGuidelines(moveable, \"horizontal\", horizontalGuidelines, [targetLeft, targetTop], targetRect, React)), false), __read(renderGuidelines(moveable, \"vertical\", verticalGuidelines, [targetLeft, targetTop], targetRect, React)), false), __read(renderSnapPoses(moveable, \"horizontal\", horizontalSnapPoses, minLeft, targetTop, width, 0, React)), false), __read(renderSnapPoses(moveable, \"vertical\", verticalSnapPoses, minTop, targetLeft, height, 1, React)), false);\n  },\n  dragStart: function (moveable, e) {\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest,\n      snap: true,\n      center: true\n    };\n    checkSnapInfo(moveable);\n  },\n  drag: function (moveable) {\n    var state = moveable.state;\n    if (!checkSnapInfo(moveable)) {\n      state.guidelines = getTotalGuidelines(moveable);\n    }\n    if (state.snapRenderInfo) {\n      state.snapRenderInfo.render = true;\n    }\n  },\n  pinchStart: function (moveable) {\n    this.unset(moveable);\n  },\n  dragEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragControlCondition: function (moveable, e) {\n    if (directionCondition$1(moveable, e) || dragControlCondition(moveable, e)) {\n      return true;\n    }\n    if (!e.isRequest && e.inputEvent) {\n      return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n    }\n  },\n  dragControlStart: function (moveable) {\n    moveable.state.snapRenderInfo = null;\n    checkSnapInfo(moveable);\n  },\n  dragControl: function (moveable) {\n    this.drag(moveable);\n  },\n  dragControlEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragGroupStart: function (moveable, e) {\n    this.dragStart(moveable, e);\n  },\n  dragGroup: function (moveable) {\n    this.drag(moveable);\n  },\n  dragGroupEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragGroupControlStart: function (moveable) {\n    moveable.state.snapRenderInfo = null;\n    checkSnapInfo(moveable);\n  },\n  dragGroupControl: function (moveable) {\n    this.drag(moveable);\n  },\n  dragGroupControlEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  unset: function (moveable) {\n    var state = moveable.state;\n    state.enableSnap = false;\n    state.guidelines = [];\n    state.snapRenderInfo = null;\n    state.elementRects = [];\n  }\n};\n/**\r\n * Whether or not target can be snapped to the guideline. (default: false)\r\n * @name Moveable.Snappable#snappable\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snappable = true;\r\n */\n/**\r\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\r\n * @name Moveable.Snappable#snapContainer\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.querySelector(\".container\"));\r\n *\r\n * moveable.snapContainer = document.body;\r\n */\n/**\r\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\r\n * @name Moveable.Snappable#snapDirections\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   snappable: true,\r\n *   snapDirections: true,\r\n * });\r\n * // snap center\r\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\r\n */\n/**\r\n * You can specify the snap directions of elements. (default: { left: true, ftrue, right: true, bottom: true })\r\n * @name Moveable.Snappable#elementSnapDirections\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   snappable: true,\r\n *   elementSnapDirections: true,\r\n * });\r\n * // snap center\r\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\r\n */\n/**\r\n * When you drag, make the gap snap in the element guidelines. (default: true)\r\n * @name Moveable.Snappable#snapGap\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   snappable: true,\r\n *   snapElement: true,\r\n *   snapGap: true,\r\n * });\r\n *\r\n * moveable.snapGap = false;\r\n */\n/**\r\n * Distance value that can snap to guidelines. (default: 5)\r\n * @name Moveable.Snappable#snapThreshold\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snapThreshold = 5;\r\n */\n/**\r\n * Add guidelines in the horizontal direction. (default: [])\r\n * @name Moveable.Snappable#horizontalGuidelines\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.horizontalGuidelines = [100, 200, 500];\r\n */\n/**\r\n * Add guidelines in the vertical direction. (default: [])\r\n * @name Moveable.Snappable#verticalGuidelines\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.verticalGuidelines = [100, 200, 500];\r\n */\n/**\r\n * Add guidelines for the element. (default: [])\r\n * @name Moveable.Snappable#elementGuidelines\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.elementGuidelines = [\r\n *   document.querySelector(\".element\"),\r\n * ];\r\n */\n/**\r\n * You can set up boundaries.\r\n * @name Moveable.Snappable#bounds\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @default null\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\r\n */\n/**\r\n * You can set up inner boundaries.\r\n * @name Moveable.Snappable#innerBounds\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @default null\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\r\n */\n/**\r\n * snap distance digits (default: 0)\r\n * @name Moveable.Snappable#snapDigit\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snapDigit = 0\r\n */\n/**\r\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\r\n * @name Moveable.Snappable#snapGridWidth\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snapGridWidth = 5;\r\n */\n/**\r\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\r\n * @name Moveable.Snappable#snapGridHeight\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snapGridHeight = 5;\r\n */\n/**\r\n * Whether to show snap distance (default: true)\r\n * @name Moveable.Snappable#isDisplaySnapDigit\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.isDisplaySnapDigit = true;\r\n */\n/**\r\n * Whether to show element inner snap distance (default: false)\r\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.isDisplayInnerSnapDigit = true;\r\n */\n/**\r\n * You can set the text format of the distance shown in the guidelines. (default: self)\r\n * @name Moveable.Snappable#snapDistFormat\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  snappable: true,\r\n *  snapDistFormat: (v, type) => v,\r\n * });\r\n * moveable.snapDistFormat = (v, type) => `${v}px`;\r\n */\n/**\r\n * When you drag or dragControl, the `snap` event is called.\r\n * @memberof Moveable.Snappable\r\n * @event snap\r\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     snappable: true\r\n * });\r\n * moveable.on(\"snap\", e => {\r\n *     console.log(\"onSnap\", e);\r\n * });\r\n */\n\nfunction multiply2(pos1, pos2) {\n  return [pos1[0] * pos2[0], pos1[1] * pos2[1]];\n}\nfunction prefix() {\n  var classNames = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    classNames[_i] = arguments[_i];\n  }\n  return prefixNames.apply(void 0, __spreadArray([PREFIX], __read(classNames), false));\n}\nfunction defaultSync(fn) {\n  fn();\n}\nfunction getTransformMatrix(transform) {\n  if (!transform || transform === \"none\") {\n    return [1, 0, 0, 1, 0, 0];\n  }\n  if (isObject(transform)) {\n    return transform;\n  }\n  return parseMat(transform);\n}\nfunction getAbsoluteMatrix(matrix, n, origin) {\n  return multiplies(n, createOriginMatrix(origin, n), matrix, createOriginMatrix(origin.map(function (a) {\n    return -a;\n  }), n));\n}\nfunction measureSVGSize(el, unit, isHorizontal) {\n  if (unit === \"%\") {\n    var viewBox = getSVGViewBox(el.ownerSVGElement);\n    return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n  }\n  return 1;\n}\nfunction getBeforeTransformOrigin(el) {\n  var relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n  return relativeOrigin.map(function (o, i) {\n    var _a = splitUnit(o),\n      value = _a.value,\n      unit = _a.unit;\n    return value * measureSVGSize(el, unit, i === 0);\n  });\n}\nfunction getTransformOriginArray(transformOrigin) {\n  return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nfunction getTransformOrigin(style) {\n  return getTransformOriginArray(style.transformOrigin);\n}\nfunction getElementTransform(target) {\n  var getStyle = getCachedStyle(target);\n  var computedTransform = getStyle(\"transform\");\n  if (computedTransform && computedTransform !== \"none\") {\n    return computedTransform;\n  }\n  if (\"transform\" in target) {\n    var list = target.transform;\n    var baseVal = list.baseVal;\n    if (!baseVal) {\n      return \"\";\n    }\n    var length_1 = baseVal.length;\n    if (!length_1) {\n      return \"\";\n    }\n    var matrixes = [];\n    var _loop_1 = function (i) {\n      var matrix = baseVal[i].matrix;\n      matrixes.push(\"matrix(\".concat([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].map(function (chr) {\n        return matrix[chr];\n      }).join(\", \"), \")\"));\n    };\n    for (var i = 0; i < length_1; ++i) {\n      _loop_1(i);\n    }\n    return matrixes.join(\" \");\n  }\n  return \"\";\n}\nfunction getOffsetInfo(el, lastParent, isParent, checkZoom, getTargetStyle) {\n  var _a, _b;\n  var documentElement = getDocumentElement(el) || getDocumentBody(el);\n  var hasSlot = false;\n  var target;\n  var parentSlotElement;\n  if (!el || isParent) {\n    target = el;\n  } else {\n    var assignedSlotParentElement = (_a = el === null || el === void 0 ? void 0 : el.assignedSlot) === null || _a === void 0 ? void 0 : _a.parentElement;\n    var parentElement = el.parentElement;\n    if (assignedSlotParentElement) {\n      hasSlot = true;\n      parentSlotElement = parentElement;\n      target = assignedSlotParentElement;\n    } else {\n      target = parentElement;\n    }\n  }\n  var isCustomElement = false;\n  var isEnd = el === lastParent || target === lastParent;\n  var position = \"relative\";\n  var offsetZoom = 1;\n  var targetZoom = parseFloat(getTargetStyle === null || getTargetStyle === void 0 ? void 0 : getTargetStyle(\"zoom\")) || 1;\n  var targetPosition = getTargetStyle === null || getTargetStyle === void 0 ? void 0 : getTargetStyle(\"position\");\n  while (target && target !== documentElement) {\n    if (lastParent === target) {\n      isEnd = true;\n    }\n    var getStyle = getCachedStyle(target);\n    var tagName = target.tagName.toLowerCase();\n    var transform = getElementTransform(target);\n    var willChange = getStyle(\"willChange\");\n    var zoom = parseFloat(getStyle(\"zoom\")) || 1;\n    position = getStyle(\"position\");\n    if (checkZoom && zoom !== 1) {\n      offsetZoom = zoom;\n      break;\n    }\n    if (\n    // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\n    !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\" || tagName === \"svg\" || tagName === \"foreignobject\" || position !== \"static\" || transform && transform !== \"none\" || willChange === \"transform\") {\n      break;\n    }\n    var slotParentNode = (_b = el === null || el === void 0 ? void 0 : el.assignedSlot) === null || _b === void 0 ? void 0 : _b.parentNode;\n    var targetParentNode = target.parentNode;\n    if (slotParentNode) {\n      hasSlot = true;\n      parentSlotElement = targetParentNode;\n    }\n    var parentNode = targetParentNode;\n    if (parentNode && parentNode.nodeType === 11) {\n      // Shadow Root\n      target = parentNode.host;\n      isCustomElement = true;\n      position = getCachedStyle(target)(\"position\");\n      break;\n    }\n    target = parentNode;\n    position = \"relative\";\n  }\n  return {\n    offsetZoom: offsetZoom,\n    hasSlot: hasSlot,\n    parentSlotElement: parentSlotElement,\n    isCustomElement: isCustomElement,\n    isStatic: position === \"static\",\n    isEnd: isEnd || !target || target === documentElement,\n    offsetParent: target || documentElement\n  };\n}\nfunction getOffsetPosInfo(el, target) {\n  var _a;\n  var tagName = el.tagName.toLowerCase();\n  var offsetLeft = el.offsetLeft;\n  var offsetTop = el.offsetTop;\n  var getStyle = getCachedStyle(el);\n  // svg\n  var isSVG = isUndefined(offsetLeft);\n  var hasOffset = !isSVG;\n  var origin;\n  var targetOrigin;\n  // inner svg element\n  if (!hasOffset && (tagName !== \"svg\" || el.ownerSVGElement)) {\n    origin = IS_WEBKIT605 ? getBeforeTransformOrigin(el) : getTransformOriginArray(getStyle(\"transformOrigin\")).map(function (pos) {\n      return parseFloat(pos);\n    });\n    targetOrigin = origin.slice();\n    hasOffset = true;\n    if (tagName === \"svg\") {\n      offsetLeft = 0;\n      offsetTop = 0;\n    } else {\n      _a = __read(getSVGGraphicsOffset(el, origin, el === target && target.tagName.toLowerCase() === \"g\"), 4), offsetLeft = _a[0], offsetTop = _a[1], origin[0] = _a[2], origin[1] = _a[3];\n    }\n  } else {\n    origin = getTransformOriginArray(getStyle(\"transformOrigin\")).map(function (pos) {\n      return parseFloat(pos);\n    });\n    targetOrigin = origin.slice();\n    // console.log(getStyle(\"transformOrigin\"), targetOrigin);\n  }\n  return {\n    tagName: tagName,\n    isSVG: isSVG,\n    hasOffset: hasOffset,\n    offset: [offsetLeft || 0, offsetTop || 0],\n    origin: origin,\n    targetOrigin: targetOrigin\n  };\n}\nfunction getBodyOffset(el, isSVG) {\n  var getStyle = getCachedStyle(el);\n  var getBodyStyle = getCachedStyle(getDocumentBody(el));\n  var bodyPosition = getBodyStyle(\"position\");\n  if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n    return [0, 0];\n  }\n  var marginLeft = parseInt(getBodyStyle(\"marginLeft\"), 10);\n  var marginTop = parseInt(getBodyStyle(\"marginTop\"), 10);\n  if (getStyle(\"position\") === \"absolute\") {\n    if (getStyle(\"top\") !== \"auto\" || getStyle(\"bottom\") !== \"auto\") {\n      marginTop = 0;\n    }\n    if (getStyle(\"left\") !== \"auto\" || getStyle(\"right\") !== \"auto\") {\n      marginLeft = 0;\n    }\n  }\n  return [marginLeft, marginTop];\n}\nfunction convert3DMatrixes(matrixes) {\n  matrixes.forEach(function (info) {\n    var matrix = info.matrix;\n    if (matrix) {\n      info.matrix = convertDimension(matrix, 3, 4);\n    }\n  });\n}\nfunction getPositionFixedInfo(el) {\n  var fixedContainer = el.parentElement;\n  var hasTransform = false;\n  var body = getDocumentBody(el);\n  while (fixedContainer) {\n    var transform = getComputedStyle(fixedContainer).transform;\n    if (transform && transform !== \"none\") {\n      hasTransform = true;\n      break;\n    }\n    if (fixedContainer === body) {\n      break;\n    }\n    fixedContainer = fixedContainer.parentElement;\n  }\n  return {\n    fixedContainer: fixedContainer || body,\n    hasTransform: hasTransform\n  };\n}\nfunction makeMatrixCSS(matrix, is3d) {\n  if (is3d === void 0) {\n    is3d = matrix.length > 9;\n  }\n  return \"\".concat(is3d ? \"matrix3d\" : \"matrix\", \"(\").concat(convertMatrixtoCSS(matrix, !is3d).join(\",\"), \")\");\n}\nfunction getSVGViewBox(el) {\n  var clientWidth = el.clientWidth;\n  var clientHeight = el.clientHeight;\n  if (!el) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      clientWidth: clientWidth,\n      clientHeight: clientHeight\n    };\n  }\n  var viewBox = el.viewBox;\n  var baseVal = viewBox && viewBox.baseVal || {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  return {\n    x: baseVal.x,\n    y: baseVal.y,\n    width: baseVal.width || clientWidth,\n    height: baseVal.height || clientHeight,\n    clientWidth: clientWidth,\n    clientHeight: clientHeight\n  };\n}\nfunction getSVGMatrix(el, n) {\n  var _a;\n  var _b = getSVGViewBox(el),\n    viewBoxWidth = _b.width,\n    viewBoxHeight = _b.height,\n    clientWidth = _b.clientWidth,\n    clientHeight = _b.clientHeight;\n  var scaleX = clientWidth / viewBoxWidth;\n  var scaleY = clientHeight / viewBoxHeight;\n  var preserveAspectRatio = el.preserveAspectRatio.baseVal;\n  // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n  var align = preserveAspectRatio.align;\n  // 1 : meet 2: slice\n  var meetOrSlice = preserveAspectRatio.meetOrSlice;\n  var svgOrigin = [0, 0];\n  var scale = [scaleX, scaleY];\n  var translate = [0, 0];\n  if (align !== 1) {\n    var xAlign = (align - 2) % 3;\n    var yAlign = Math.floor((align - 2) / 3);\n    svgOrigin[0] = viewBoxWidth * xAlign / 2;\n    svgOrigin[1] = viewBoxHeight * yAlign / 2;\n    var scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n    scale[0] = scaleDimension;\n    scale[1] = scaleDimension;\n    translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n    translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n  }\n  var scaleMatrix = createScaleMatrix(scale, n);\n  _a = __read(translate, 2), scaleMatrix[n * (n - 1)] = _a[0], scaleMatrix[n * (n - 1) + 1] = _a[1];\n  return getAbsoluteMatrix(scaleMatrix, n, svgOrigin);\n}\nfunction getSVGGraphicsOffset(el, origin, isGTarget) {\n  var tagName = el.tagName.toLowerCase();\n  if (!el.getBBox || !isGTarget && tagName === \"g\") {\n    return [0, 0, 0, 0];\n  }\n  var getStyle = getCachedStyle(el);\n  var isFillBox = getStyle(\"transform-box\") === \"fill-box\";\n  var bbox = el.getBBox();\n  var viewBox = getSVGViewBox(el.ownerSVGElement);\n  var x = bbox.x;\n  var y = bbox.y;\n  // x, y가 0으로 나타나는 버그\n  if (tagName === \"foreignobject\" && !x && !y) {\n    x = parseFloat(el.getAttribute(\"x\")) || 0;\n    y = parseFloat(el.getAttribute(\"y\")) || 0;\n  }\n  var left = x - viewBox.x;\n  var top = y - viewBox.y;\n  var originX = isFillBox ? origin[0] : origin[0] - left;\n  var originY = isFillBox ? origin[1] : origin[1] - top;\n  // if (isFillBox) {\n  //     const bbox = (el as SVGGraphicsElement).getBBox();\n  //     const x = parseFloat(getStyle(\"x\")) || bbox.x;\n  //     const y = parseFloat(getStyle(\"y\")) || bbox.y;\n  //     const xScale = bbox.x / x;\n  //     const yScale = bbox.y / y;\n  //     console.log(x, y);\n  //     originX *= xScale;\n  //     originY *= yScale;\n  // }\n  return [left, top, originX, originY];\n}\nfunction calculatePosition(matrix, pos, n) {\n  return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nfunction calculatePoses(matrix, width, height, n) {\n  return [[0, 0], [width, 0], [0, height], [width, height]].map(function (pos) {\n    return calculatePosition(matrix, pos, n);\n  });\n}\nfunction getRect(poses) {\n  var posesX = poses.map(function (pos) {\n    return pos[0];\n  });\n  var posesY = poses.map(function (pos) {\n    return pos[1];\n  });\n  var left = Math.min.apply(Math, __spreadArray([], __read(posesX), false));\n  var top = Math.min.apply(Math, __spreadArray([], __read(posesY), false));\n  var right = Math.max.apply(Math, __spreadArray([], __read(posesX), false));\n  var bottom = Math.max.apply(Math, __spreadArray([], __read(posesY), false));\n  var rectWidth = right - left;\n  var rectHeight = bottom - top;\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    width: rectWidth,\n    height: rectHeight\n  };\n}\nfunction calculateRect(matrix, width, height, n) {\n  var poses = calculatePoses(matrix, width, height, n);\n  return getRect(poses);\n}\nfunction getSVGOffset(offsetInfo, targetInfo, container, n, beforeMatrix) {\n  var _a;\n  var target = offsetInfo.target;\n  var origin = offsetInfo.origin;\n  var targetMatrix = targetInfo.matrix;\n  var _b = getSize(target),\n    width = _b.offsetWidth,\n    height = _b.offsetHeight;\n  var containerClientRect = container.getBoundingClientRect();\n  var margin = [0, 0];\n  if (container === getDocumentBody(container)) {\n    margin = getBodyOffset(target, true);\n  }\n  var rect = target.getBoundingClientRect();\n  var rectLeft = rect.left - containerClientRect.left + container.scrollLeft - (container.clientLeft || 0) + margin[0];\n  var rectTop = rect.top - containerClientRect.top + container.scrollTop - (container.clientTop || 0) + margin[1];\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n  var mat = multiplies(n, beforeMatrix, targetMatrix);\n  var _c = calculateRect(mat, width, height, n),\n    prevLeft = _c.left,\n    prevTop = _c.top,\n    prevWidth = _c.width,\n    prevHeight = _c.height;\n  var posOrigin = calculatePosition(mat, origin, n);\n  var prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n  var rectOrigin = [rectLeft + prevOrigin[0] * rectWidth / prevWidth, rectTop + prevOrigin[1] * rectHeight / prevHeight];\n  var offset = [0, 0];\n  var count = 0;\n  while (++count < 10) {\n    var inverseBeforeMatrix = invert(beforeMatrix, n);\n    _a = __read(minus(calculatePosition(inverseBeforeMatrix, rectOrigin, n), calculatePosition(inverseBeforeMatrix, posOrigin, n)), 2), offset[0] = _a[0], offset[1] = _a[1];\n    var mat2 = multiplies(n, beforeMatrix, createOriginMatrix(offset, n), targetMatrix);\n    var _d = calculateRect(mat2, width, height, n),\n      nextLeft = _d.left,\n      nextTop = _d.top;\n    var distLeft = nextLeft - rectLeft;\n    var distTop = nextTop - rectTop;\n    if (abs(distLeft) < 2 && abs(distTop) < 2) {\n      break;\n    }\n    rectOrigin[0] -= distLeft;\n    rectOrigin[1] -= distTop;\n  }\n  return offset.map(function (p) {\n    return Math.round(p);\n  });\n}\nfunction calculateMoveableClientPositions(rootMatrix, poses, rootClientRect) {\n  var is3d = rootMatrix.length === 16;\n  var n = is3d ? 4 : 3;\n  var rootPoses = poses.map(function (pos) {\n    return calculatePosition(rootMatrix, pos, n);\n  });\n  var left = rootClientRect.left,\n    top = rootClientRect.top;\n  return rootPoses.map(function (pos) {\n    return [pos[0] + left, pos[1] + top];\n  });\n}\nfunction getDistSize(vec) {\n  return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nfunction getDiagonalSize(pos1, pos2) {\n  return getDistSize([pos2[0] - pos1[0], pos2[1] - pos1[1]]);\n}\nfunction getLineStyle(pos1, pos2, zoom, rad) {\n  if (zoom === void 0) {\n    zoom = 1;\n  }\n  if (rad === void 0) {\n    rad = getRad(pos1, pos2);\n  }\n  var width = getDiagonalSize(pos1, pos2);\n  return {\n    transform: \"translateY(-50%) translate(\".concat(pos1[0], \"px, \").concat(pos1[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\"),\n    width: \"\".concat(width, \"px\")\n  };\n}\nfunction getControlTransform(rotation, zoom) {\n  var poses = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    poses[_i - 2] = arguments[_i];\n  }\n  var length = poses.length;\n  var x = poses.reduce(function (prev, pos) {\n    return prev + pos[0];\n  }, 0) / length;\n  var y = poses.reduce(function (prev, pos) {\n    return prev + pos[1];\n  }, 0) / length;\n  return {\n    transform: \"translateZ(0px) translate(\".concat(x, \"px, \").concat(y, \"px) rotate(\").concat(rotation, \"rad) scale(\").concat(zoom, \")\")\n  };\n}\nfunction getProps(props, ableName) {\n  var self = props[ableName];\n  if (isObject(self)) {\n    return __assign(__assign({}, props), self);\n  }\n  return props;\n}\nfunction getSize(target) {\n  var hasOffset = target && !isUndefined(target.offsetWidth);\n  var offsetWidth = 0;\n  var offsetHeight = 0;\n  var clientWidth = 0;\n  var clientHeight = 0;\n  var cssWidth = 0;\n  var cssHeight = 0;\n  var contentWidth = 0;\n  var contentHeight = 0;\n  var minWidth = 0;\n  var minHeight = 0;\n  var minOffsetWidth = 0;\n  var minOffsetHeight = 0;\n  var maxWidth = Infinity;\n  var maxHeight = Infinity;\n  var maxOffsetWidth = Infinity;\n  var maxOffsetHeight = Infinity;\n  var inlineCSSWidth = 0;\n  var inlineCSSHeight = 0;\n  var svg = false;\n  if (target) {\n    if (!hasOffset && target.ownerSVGElement) {\n      // check svg elements\n      var bbox = target.getBBox();\n      svg = true;\n      offsetWidth = bbox.width;\n      offsetHeight = bbox.height;\n      cssWidth = offsetWidth;\n      cssHeight = offsetHeight;\n      contentWidth = offsetWidth;\n      contentHeight = offsetHeight;\n      clientWidth = offsetWidth;\n      clientHeight = offsetHeight;\n    } else {\n      // check html elements\n      var getStyle = getCachedStyle(target);\n      var targetStyle = target.style;\n      var boxSizing = getStyle(\"boxSizing\") === \"border-box\";\n      var borderLeft = parseFloat(getStyle(\"borderLeftWidth\")) || 0;\n      var borderRight = parseFloat(getStyle(\"borderRightWidth\")) || 0;\n      var borderTop = parseFloat(getStyle(\"borderTopWidth\")) || 0;\n      var borderBottom = parseFloat(getStyle(\"borderBottomWidth\")) || 0;\n      var paddingLeft = parseFloat(getStyle(\"paddingLeft\")) || 0;\n      var paddingRight = parseFloat(getStyle(\"paddingRight\")) || 0;\n      var paddingTop = parseFloat(getStyle(\"paddingTop\")) || 0;\n      var paddingBottom = parseFloat(getStyle(\"paddingBottom\")) || 0;\n      var horizontalPadding = paddingLeft + paddingRight;\n      var verticalPadding = paddingTop + paddingBottom;\n      var horizontalBorder = borderLeft + borderRight;\n      var verticalBorder = borderTop + borderBottom;\n      var horizontalOffset = horizontalPadding + horizontalBorder;\n      var verticalOffset = verticalPadding + verticalBorder;\n      var position = getStyle(\"position\");\n      var containerWidth = 0;\n      var containerHeight = 0;\n      // SVGSVGElement, HTMLElement\n      if (\"clientLeft\" in target) {\n        var parentElement = null;\n        if (position === \"absolute\") {\n          var offsetInfo = getOffsetInfo(target, getDocumentBody(target));\n          parentElement = offsetInfo.offsetParent;\n        } else {\n          parentElement = target.parentElement;\n        }\n        if (parentElement) {\n          var getParentStyle = getCachedStyle(parentElement);\n          containerWidth = parseFloat(getParentStyle(\"width\"));\n          containerHeight = parseFloat(getParentStyle(\"height\"));\n        }\n      }\n      minWidth = Math.max(horizontalPadding, convertUnitSize(getStyle(\"minWidth\"), containerWidth) || 0);\n      minHeight = Math.max(verticalPadding, convertUnitSize(getStyle(\"minHeight\"), containerHeight) || 0);\n      maxWidth = convertUnitSize(getStyle(\"maxWidth\"), containerWidth);\n      maxHeight = convertUnitSize(getStyle(\"maxHeight\"), containerHeight);\n      if (isNaN(maxWidth)) {\n        maxWidth = Infinity;\n      }\n      if (isNaN(maxHeight)) {\n        maxHeight = Infinity;\n      }\n      inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n      inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n      cssWidth = parseFloat(getStyle(\"width\")) || 0;\n      cssHeight = parseFloat(getStyle(\"height\")) || 0;\n      contentWidth = abs(cssWidth - inlineCSSWidth) < 1 ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth) : cssWidth;\n      contentHeight = abs(cssHeight - inlineCSSHeight) < 1 ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight) : cssHeight;\n      offsetWidth = contentWidth;\n      offsetHeight = contentHeight;\n      clientWidth = contentWidth;\n      clientHeight = contentHeight;\n      if (boxSizing) {\n        maxOffsetWidth = maxWidth;\n        maxOffsetHeight = maxHeight;\n        minOffsetWidth = minWidth;\n        minOffsetHeight = minHeight;\n        contentWidth = offsetWidth - horizontalOffset;\n        contentHeight = offsetHeight - verticalOffset;\n      } else {\n        maxOffsetWidth = maxWidth + horizontalOffset;\n        maxOffsetHeight = maxHeight + verticalOffset;\n        minOffsetWidth = minWidth + horizontalOffset;\n        minOffsetHeight = minHeight + verticalOffset;\n        offsetWidth = contentWidth + horizontalOffset;\n        offsetHeight = contentHeight + verticalOffset;\n      }\n      clientWidth = contentWidth + horizontalPadding;\n      clientHeight = contentHeight + verticalPadding;\n    }\n  }\n  return {\n    svg: svg,\n    offsetWidth: offsetWidth,\n    offsetHeight: offsetHeight,\n    clientWidth: clientWidth,\n    clientHeight: clientHeight,\n    contentWidth: contentWidth,\n    contentHeight: contentHeight,\n    inlineCSSWidth: inlineCSSWidth,\n    inlineCSSHeight: inlineCSSHeight,\n    cssWidth: cssWidth,\n    cssHeight: cssHeight,\n    minWidth: minWidth,\n    minHeight: minHeight,\n    maxWidth: maxWidth,\n    maxHeight: maxHeight,\n    minOffsetWidth: minOffsetWidth,\n    minOffsetHeight: minOffsetHeight,\n    maxOffsetWidth: maxOffsetWidth,\n    maxOffsetHeight: maxOffsetHeight\n  };\n}\nfunction getRotationRad(poses, direction) {\n  return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nfunction resetClientRect() {\n  return {\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    right: 0,\n    bottom: 0,\n    clientLeft: 0,\n    clientTop: 0,\n    clientWidth: 0,\n    clientHeight: 0,\n    scrollWidth: 0,\n    scrollHeight: 0\n  };\n}\nfunction getExtendsRect(el, rect) {\n  var isRoot = el === getDocumentBody(el) || el === getDocumentElement(el);\n  var extendsRect = {\n    clientLeft: el.clientLeft,\n    clientTop: el.clientTop,\n    clientWidth: el.clientWidth,\n    clientHeight: el.clientHeight,\n    scrollWidth: el.scrollWidth,\n    scrollHeight: el.scrollHeight,\n    overflow: false\n  };\n  if (isRoot) {\n    extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\n    extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\n  }\n  extendsRect.overflow = getCachedStyle(el)(\"overflow\") !== \"visible\";\n  return __assign(__assign({}, rect), extendsRect);\n}\nfunction getClientRectByPosition(position, base, el, isExtends) {\n  var left = position.left,\n    right = position.right,\n    top = position.top,\n    bottom = position.bottom;\n  var baseTop = base.top;\n  var baseLeft = base.left;\n  var rect = {\n    left: baseLeft + left,\n    top: baseTop + top,\n    right: baseLeft + right,\n    bottom: baseTop + bottom,\n    width: right - left,\n    height: bottom - top\n  };\n  if (el && isExtends) {\n    return getExtendsRect(el, rect);\n  }\n  return rect;\n}\nfunction getClientRect(el, isExtends) {\n  var left = 0;\n  var top = 0;\n  var width = 0;\n  var height = 0;\n  // let isRoot = false;\n  if (el) {\n    var clientRect = el.getBoundingClientRect();\n    left = clientRect.left;\n    top = clientRect.top;\n    width = clientRect.width;\n    height = clientRect.height;\n  }\n  var rect = {\n    left: left,\n    top: top,\n    width: width,\n    height: height,\n    right: left + width,\n    bottom: top + height\n  };\n  if (el && isExtends) {\n    return getExtendsRect(el, rect);\n  }\n  return rect;\n}\nfunction getTotalOrigin(moveable) {\n  var _a = moveable.props,\n    groupable = _a.groupable,\n    svgOrigin = _a.svgOrigin;\n  var _b = moveable.getState(),\n    offsetWidth = _b.offsetWidth,\n    offsetHeight = _b.offsetHeight,\n    svg = _b.svg,\n    transformOrigin = _b.transformOrigin;\n  if (!groupable && svg && svgOrigin) {\n    return convertTransformOriginArray(svgOrigin, offsetWidth, offsetHeight);\n  }\n  return transformOrigin;\n}\nfunction getTotalDirection(parentDirection, isPinch, inputEvent, datas) {\n  var direction;\n  if (parentDirection) {\n    direction = parentDirection;\n  } else if (isPinch) {\n    direction = [0, 0];\n  } else {\n    var target = inputEvent.target;\n    direction = getDirection(target, datas);\n  }\n  return direction;\n}\nfunction getDirection(target, datas) {\n  if (!target) {\n    return;\n  }\n  var deg = target.getAttribute(\"data-rotation\") || \"\";\n  var direciton = target.getAttribute(\"data-direction\");\n  datas.deg = deg;\n  if (!direciton) {\n    return;\n  }\n  var dir = [0, 0];\n  direciton.indexOf(\"w\") > -1 && (dir[0] = -1);\n  direciton.indexOf(\"e\") > -1 && (dir[0] = 1);\n  direciton.indexOf(\"n\") > -1 && (dir[1] = -1);\n  direciton.indexOf(\"s\") > -1 && (dir[1] = 1);\n  return dir;\n}\nfunction getAbsolutePoses(poses, dist) {\n  return [plus(dist, poses[0]), plus(dist, poses[1]), plus(dist, poses[2]), plus(dist, poses[3])];\n}\nfunction getAbsolutePosesByState(_a) {\n  var left = _a.left,\n    top = _a.top,\n    pos1 = _a.pos1,\n    pos2 = _a.pos2,\n    pos3 = _a.pos3,\n    pos4 = _a.pos4;\n  return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nfunction unsetAbles(self, isControl) {\n  self[isControl ? \"controlAbles\" : \"targetAbles\"].forEach(function (able) {\n    able.unset && able.unset(self);\n  });\n}\nfunction unsetGesto(self, isControl) {\n  var gestoName = isControl ? \"controlGesto\" : \"targetGesto\";\n  var gesto = self[gestoName];\n  if ((gesto === null || gesto === void 0 ? void 0 : gesto.isIdle()) === false) {\n    unsetAbles(self, isControl);\n  }\n  gesto === null || gesto === void 0 ? void 0 : gesto.unset();\n  self[gestoName] = null;\n}\nfunction fillCSSObject(style, resolvedEvent) {\n  if (resolvedEvent) {\n    var originalDatas = getBeforeRenderableDatas(resolvedEvent);\n    originalDatas.nextStyle = __assign(__assign({}, originalDatas.nextStyle), style);\n  }\n  return {\n    style: style,\n    cssText: getKeys(style).map(function (name) {\n      return \"\".concat(decamelize(name, \"-\"), \": \").concat(style[name], \";\");\n    }).join(\"\")\n  };\n}\nfunction fillAfterTransform(prevEvent, nextEvent, resolvedEvent) {\n  var afterTransform = nextEvent.afterTransform || nextEvent.transform;\n  return __assign(__assign({}, fillCSSObject(__assign(__assign(__assign({}, prevEvent.style), nextEvent.style), {\n    transform: afterTransform\n  }), resolvedEvent)), {\n    afterTransform: afterTransform,\n    transform: prevEvent.transform\n  });\n}\nfunction fillParams(moveable, e, params, isBeforeEvent) {\n  var datas = e.datas;\n  if (!datas.datas) {\n    datas.datas = {};\n  }\n  var nextParams = __assign(__assign({}, params), {\n    target: moveable.state.target,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    inputEvent: e.inputEvent,\n    currentTarget: moveable,\n    moveable: moveable,\n    datas: datas.datas,\n    isRequest: e.isRequest,\n    isRequestChild: e.isRequestChild,\n    isFirstDrag: !!e.isFirstDrag,\n    isTrusted: e.isTrusted !== false,\n    stopAble: function () {\n      datas.isEventStart = false;\n    },\n    stopDrag: function () {\n      var _a;\n      (_a = e.stop) === null || _a === void 0 ? void 0 : _a.call(e);\n    }\n  });\n  if (!datas.isStartEvent) {\n    datas.isStartEvent = true;\n  } else if (!isBeforeEvent) {\n    datas.lastEvent = nextParams;\n  }\n  return nextParams;\n}\nfunction fillEndParams(moveable, e, params) {\n  var datas = e.datas;\n  var isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n  if (!datas.datas) {\n    datas.datas = {};\n  }\n  return __assign(__assign({\n    isDrag: isDrag\n  }, params), {\n    moveable: moveable,\n    target: moveable.state.target,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    inputEvent: e.inputEvent,\n    currentTarget: moveable,\n    lastEvent: datas.lastEvent,\n    isDouble: e.isDouble,\n    datas: datas.datas,\n    isFirstDrag: !!e.isFirstDrag\n  });\n}\nfunction catchEvent(moveable, name, callback) {\n  moveable._emitter.on(name, callback);\n}\nfunction triggerEvent(moveable, name, params, isManager, isRequest) {\n  return moveable.triggerEvent(name, params, isManager, isRequest);\n}\nfunction getComputedStyle(el, pseudoElt) {\n  return getWindow(el).getComputedStyle(el, pseudoElt);\n}\nfunction filterAbles(ables, methods, triggerAblesSimultaneously) {\n  var enabledAbles = {};\n  var ableGroups = {};\n  return ables.filter(function (able) {\n    var name = able.name;\n    if (enabledAbles[name] || !methods.some(function (method) {\n      return able[method];\n    })) {\n      return false;\n    }\n    if (!triggerAblesSimultaneously && able.ableGroup) {\n      if (ableGroups[able.ableGroup]) {\n        return false;\n      }\n      ableGroups[able.ableGroup] = true;\n    }\n    enabledAbles[name] = true;\n    return true;\n  });\n}\nfunction equals(a1, a2) {\n  return a1 === a2 || a1 == null && a2 == null;\n}\nfunction selectValue() {\n  var values = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n  var length = values.length - 1;\n  for (var i = 0; i < length; ++i) {\n    var value = values[i];\n    if (!isUndefined(value)) {\n      return value;\n    }\n  }\n  return values[length];\n}\nfunction groupBy(arr, func) {\n  var groups = [];\n  var groupKeys = [];\n  arr.forEach(function (el, index) {\n    var groupKey = func(el, index, arr);\n    var keyIndex = groupKeys.indexOf(groupKey);\n    var group = groups[keyIndex] || [];\n    if (keyIndex === -1) {\n      groupKeys.push(groupKey);\n      groups.push(group);\n    }\n    group.push(el);\n  });\n  return groups;\n}\nfunction groupByMap(arr, func) {\n  var groups = [];\n  var groupKeys = {};\n  arr.forEach(function (el, index) {\n    var groupKey = func(el, index, arr);\n    var group = groupKeys[groupKey];\n    if (!group) {\n      group = [];\n      groupKeys[groupKey] = group;\n      groups.push(group);\n    }\n    group.push(el);\n  });\n  return groups;\n}\nfunction flat(arr) {\n  return arr.reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n}\nfunction maxOffset() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  args.sort(function (a, b) {\n    return abs(b) - abs(a);\n  });\n  return args[0];\n}\nfunction calculateInversePosition(matrix, pos, n) {\n  return calculate(invert(matrix, n), convertPositionMatrix(pos, n), n);\n}\nfunction convertDragDist(state, e) {\n  var _a;\n  var is3d = state.is3d,\n    rootMatrix = state.rootMatrix;\n  var n = is3d ? 4 : 3;\n  _a = __read(calculateInversePosition(rootMatrix, [e.distX, e.distY], n), 2), e.distX = _a[0], e.distY = _a[1];\n  return e;\n}\nfunction calculatePadding(matrix, pos, added, n) {\n  if (!added[0] && !added[1]) {\n    return pos;\n  }\n  var xAdded = calculatePosition(matrix, [normalized(added[0] || 1), 0], n);\n  var yAdded = calculatePosition(matrix, [0, normalized(added[1] || 1)], n);\n  var nextAdded = calculatePosition(matrix, [added[0] / getDistSize(xAdded), added[1] / getDistSize(yAdded)], n);\n  return plus(pos, nextAdded);\n}\nfunction convertCSSSize(value, size, isRelative) {\n  return isRelative ? \"\".concat(value / size * 100, \"%\") : \"\".concat(value, \"px\");\n}\nfunction getTinyDist(v) {\n  return abs(v) <= TINY_NUM ? 0 : v;\n}\nfunction getDirectionViewClassName(ableName) {\n  return function (moveable) {\n    if (!moveable.isDragging(ableName)) {\n      return \"\";\n    }\n    var data = getGestoData(moveable, ableName);\n    var deg = data.deg;\n    if (!deg) {\n      return \"\";\n    }\n    return prefix(\"view-control-rotation\".concat(deg));\n  };\n}\nfunction getDirectionCondition(ableName, checkAbles) {\n  if (checkAbles === void 0) {\n    checkAbles = [ableName];\n  }\n  return function (moveable, e) {\n    if (e.isRequest) {\n      if (checkAbles.some(function (name) {\n        return e.requestAble === name;\n      })) {\n        return e.parentDirection;\n      } else {\n        return false;\n      }\n    }\n    var target = e.inputEvent.target;\n    return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n  };\n}\nfunction convertTransformInfo(transforms, state, index) {\n  var _a;\n  var matrixInfos = parse(transforms, {\n    \"x%\": function (v) {\n      return v / 100 * state.offsetWidth;\n    },\n    \"y%\": function (v) {\n      return v / 100 * state.offsetHeight;\n    }\n  });\n  var beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n  var beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n  var targetFunctionText = transforms[index] || \"\";\n  var afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n  var afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n  var beforeFunctions = matrixInfos.slice(0, index < 0 ? undefined : index);\n  var beforeFunctions2 = matrixInfos.slice(0, index < 0 ? undefined : index + 1);\n  var targetFunction = (_a = matrixInfos[index]) !== null && _a !== void 0 ? _a : parse([\"\"])[0];\n  var afterFunctions = index < 0 ? [] : matrixInfos.slice(index);\n  var afterFunctions2 = index < 0 ? [] : matrixInfos.slice(index + 1);\n  var targetFunctions = targetFunction ? [targetFunction] : [];\n  var beforeFunctionMatrix = toMat(beforeFunctions);\n  var beforeFunctionMatrix2 = toMat(beforeFunctions2);\n  var afterFunctionMatrix = toMat(afterFunctions);\n  var afterFunctionMatrix2 = toMat(afterFunctions2);\n  var allFunctionMatrix = multiply(beforeFunctionMatrix, afterFunctionMatrix, 4);\n  return {\n    transforms: transforms,\n    beforeFunctionMatrix: beforeFunctionMatrix,\n    beforeFunctionMatrix2: beforeFunctionMatrix2,\n    targetFunctionMatrix: toMat(targetFunctions),\n    afterFunctionMatrix: afterFunctionMatrix,\n    afterFunctionMatrix2: afterFunctionMatrix2,\n    allFunctionMatrix: allFunctionMatrix,\n    beforeFunctions: beforeFunctions,\n    beforeFunctions2: beforeFunctions2,\n    targetFunction: targetFunctions[0],\n    afterFunctions: afterFunctions,\n    afterFunctions2: afterFunctions2,\n    beforeFunctionTexts: beforeFunctionTexts,\n    beforeFunctionTexts2: beforeFunctionTexts2,\n    targetFunctionText: targetFunctionText,\n    afterFunctionTexts: afterFunctionTexts,\n    afterFunctionTexts2: afterFunctionTexts2\n  };\n}\nfunction isArrayFormat(arr) {\n  if (!arr || !isObject(arr)) {\n    return false;\n  }\n  if (isNode(arr)) {\n    return false;\n  }\n  return isArray(arr) || \"length\" in arr;\n}\nfunction getRefTarget(target, isSelector) {\n  if (!target) {\n    return null;\n  }\n  if (isNode(target)) {\n    return target;\n  }\n  if (isString(target)) {\n    if (isSelector) {\n      return document.querySelector(target);\n    }\n    return target;\n  }\n  if (isFunction(target)) {\n    return target();\n  }\n  if (isWindow(target)) {\n    return target;\n  }\n  if (\"current\" in target) {\n    return target.current;\n  }\n  return target;\n}\nfunction getRefTargets(targets, isSelector) {\n  if (!targets) {\n    return [];\n  }\n  var userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n  return userTargets.reduce(function (prev, target) {\n    if (isString(target) && isSelector) {\n      return __spreadArray(__spreadArray([], __read(prev), false), __read([].slice.call(document.querySelectorAll(target))), false);\n    }\n    if (isArray(target)) {\n      prev.push(getRefTargets(target, isSelector));\n    } else {\n      prev.push(getRefTarget(target, isSelector));\n    }\n    return prev;\n  }, []);\n}\nfunction getAbsoluteRotation(pos1, pos2, direction) {\n  var deg = getRad(pos1, pos2) / Math.PI * 180;\n  deg = direction >= 0 ? deg : 180 - deg;\n  deg = deg >= 0 ? deg : 360 + deg;\n  return deg;\n}\nfunction getDragDistByState(state, dist) {\n  var rootMatrix = state.rootMatrix,\n    is3d = state.is3d;\n  var n = is3d ? 4 : 3;\n  var inverseMatrix = invert(rootMatrix, n);\n  if (!is3d) {\n    inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n  }\n  inverseMatrix[12] = 0;\n  inverseMatrix[13] = 0;\n  inverseMatrix[14] = 0;\n  return calculateMatrixDist(inverseMatrix, dist);\n}\nfunction getSizeDistByDist(startSize, dist, ratio, direction, keepRatio) {\n  var _a = __read(startSize, 2),\n    startOffsetWidth = _a[0],\n    startOffsetHeight = _a[1];\n  var distWidth = 0;\n  var distHeight = 0;\n  if (keepRatio && startOffsetWidth && startOffsetHeight) {\n    var rad = getRad([0, 0], dist);\n    var standardRad = getRad([0, 0], direction);\n    var size = getDistSize(dist);\n    var signSize = Math.cos(rad - standardRad) * size;\n    if (!direction[0]) {\n      // top, bottom\n      distHeight = signSize;\n      distWidth = distHeight * ratio;\n    } else if (!direction[1]) {\n      // left, right\n      distWidth = signSize;\n      distHeight = distWidth / ratio;\n    } else {\n      // two-way\n      var startWidthSize = direction[0] * startOffsetWidth;\n      var startHeightSize = direction[1] * startOffsetHeight;\n      var secondRad = Math.atan2(startWidthSize + dist[0], startHeightSize + dist[1]);\n      var firstRad = Math.atan2(startWidthSize, startHeightSize);\n      if (secondRad < 0) {\n        secondRad += Math.PI * 2;\n      }\n      if (firstRad < 0) {\n        firstRad += Math.PI * 2;\n      }\n      var rad_1 = 0;\n      if (abs(secondRad - firstRad) < Math.PI / 2 || abs(secondRad - firstRad) > Math.PI / 2 * 3) {\n        rad_1 = secondRad - firstRad;\n      } else {\n        firstRad += Math.PI;\n        rad_1 = secondRad - firstRad;\n      }\n      if (rad_1 > Math.PI * 2) {\n        rad_1 -= Math.PI * 2;\n      } else if (rad_1 > Math.PI) {\n        rad_1 = 2 * Math.PI - rad_1;\n      } else if (rad_1 < -Math.PI) {\n        rad_1 = -2 * Math.PI - rad_1;\n      }\n      //       180\n      // -1, -1,  // 1, -1\n      // 270            90\n      // -1, 1    // 1, 1\n      //       0\n      var distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]]) * Math.cos(rad_1);\n      distWidth = distSize * Math.sin(firstRad) - startWidthSize;\n      distHeight = distSize * Math.cos(firstRad) - startHeightSize;\n      if (direction[0] < 0) {\n        distWidth *= -1;\n      }\n      if (direction[1] < 0) {\n        distHeight *= -1;\n      }\n    }\n  } else {\n    distWidth = direction[0] * dist[0];\n    distHeight = direction[1] * dist[1];\n  }\n  return [distWidth, distHeight];\n}\nfunction getOffsetSizeDist(sizeDirection, keepRatio, datas, e) {\n  var _a;\n  var ratio = datas.ratio,\n    startOffsetWidth = datas.startOffsetWidth,\n    startOffsetHeight = datas.startOffsetHeight;\n  var distWidth = 0;\n  var distHeight = 0;\n  var distX = e.distX,\n    distY = e.distY,\n    pinchScale = e.pinchScale,\n    parentDistance = e.parentDistance,\n    parentDist = e.parentDist,\n    parentScale = e.parentScale;\n  var startFixedDirection = datas.fixedDirection;\n  var directionsDists = [0, 1].map(function (index) {\n    return abs(sizeDirection[index] - startFixedDirection[index]);\n  });\n  var directionRatios = [0, 1].map(function (index) {\n    var dist = directionsDists[index];\n    if (dist !== 0) {\n      dist = 2 / dist;\n    }\n    return dist;\n  });\n  if (parentDist) {\n    distWidth = parentDist[0];\n    distHeight = parentDist[1];\n    if (keepRatio) {\n      if (!distWidth) {\n        distWidth = distHeight * ratio;\n      } else if (!distHeight) {\n        distHeight = distWidth / ratio;\n      }\n    }\n  } else if (isNumber(pinchScale)) {\n    distWidth = (pinchScale - 1) * startOffsetWidth;\n    distHeight = (pinchScale - 1) * startOffsetHeight;\n  } else if (parentScale) {\n    distWidth = (parentScale[0] - 1) * startOffsetWidth;\n    distHeight = (parentScale[1] - 1) * startOffsetHeight;\n  } else if (parentDistance) {\n    var scaleX = startOffsetWidth * directionsDists[0];\n    var scaleY = startOffsetHeight * directionsDists[1];\n    var ratioDistance = getDistSize([scaleX, scaleY]);\n    distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n    distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n  } else {\n    var dist_1 = getDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    });\n    dist_1 = directionRatios.map(function (ratio, i) {\n      return dist_1[i] * ratio;\n    });\n    _a = __read(getSizeDistByDist([startOffsetWidth, startOffsetHeight], dist_1, ratio, sizeDirection, keepRatio), 2), distWidth = _a[0], distHeight = _a[1];\n  }\n  return {\n    // direction,\n    // sizeDirection,\n    distWidth: distWidth,\n    distHeight: distHeight\n  };\n}\nfunction convertTransformUnit(origin, xy) {\n  if (xy) {\n    if (origin === \"left\") {\n      return {\n        x: \"0%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"top\") {\n      return {\n        x: \"50%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"center\") {\n      return {\n        x: \"50%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"right\") {\n      return {\n        x: \"100%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"bottom\") {\n      return {\n        x: \"50%\",\n        y: \"100%\"\n      };\n    }\n    var _a = __read(origin.split(\" \"), 2),\n      left = _a[0],\n      right = _a[1];\n    var leftOrigin = convertTransformUnit(left || \"\");\n    var rightOrigin = convertTransformUnit(right || \"\");\n    var originObject = __assign(__assign({}, leftOrigin), rightOrigin);\n    var nextOriginObject = {\n      x: \"50%\",\n      y: \"50%\"\n    };\n    if (originObject.x) {\n      nextOriginObject.x = originObject.x;\n    }\n    if (originObject.y) {\n      nextOriginObject.y = originObject.y;\n    }\n    if (originObject.value) {\n      if (originObject.x && !originObject.y) {\n        nextOriginObject.y = originObject.value;\n      }\n      if (!originObject.x && originObject.y) {\n        nextOriginObject.x = originObject.value;\n      }\n    }\n    return nextOriginObject;\n  }\n  if (origin === \"left\") {\n    return {\n      x: \"0%\"\n    };\n  }\n  if (origin === \"right\") {\n    return {\n      x: \"100%\"\n    };\n  }\n  if (origin === \"top\") {\n    return {\n      y: \"0%\"\n    };\n  }\n  if (origin === \"bottom\") {\n    return {\n      y: \"100%\"\n    };\n  }\n  if (!origin) {\n    return {};\n  }\n  if (origin === \"center\") {\n    return {\n      value: \"50%\"\n    };\n  }\n  return {\n    value: origin\n  };\n}\nfunction convertTransformOriginArray(transformOrigin, width, height) {\n  var _a = convertTransformUnit(transformOrigin, true),\n    x = _a.x,\n    y = _a.y;\n  return [convertUnitSize(x, width) || 0, convertUnitSize(y, height) || 0];\n}\nfunction rotatePosesInfo(poses, origin, rad) {\n  var prevPoses = poses.map(function (pos) {\n    return minus(pos, origin);\n  });\n  var nextPoses = prevPoses.map(function (pos) {\n    return rotate(pos, rad);\n  });\n  return {\n    prev: prevPoses,\n    next: nextPoses,\n    result: nextPoses.map(function (pos) {\n      return plus(pos, origin);\n    })\n  };\n}\nfunction isDeepArrayEquals(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every(function (value1, i) {\n    var value2 = arr2[i];\n    var isArray1 = isArray(value1);\n    var isArray2 = isArray(value2);\n    if (isArray1 && isArray2) {\n      return isDeepArrayEquals(value1, value2);\n    } else if (!isArray1 && !isArray2) {\n      return value1 === value2;\n    }\n    return false;\n  });\n}\nfunction watchValue(moveable, property, nextValue, valueKey, defaultValue) {\n  var store = moveable._store;\n  var prevValue = store[property];\n  if (!(property in store)) {\n    if (defaultValue != null) {\n      store[property] = defaultValue;\n      prevValue = defaultValue;\n    } else {\n      store[property] = nextValue;\n      return nextValue;\n    }\n  }\n  if (prevValue === nextValue || valueKey(prevValue) === valueKey(nextValue)) {\n    return prevValue;\n  }\n  store[property] = nextValue;\n  return nextValue;\n}\nfunction sign(value) {\n  return value >= 0 ? 1 : -1;\n}\nfunction abs(value) {\n  return Math.abs(value);\n}\nfunction countEach(count, callback) {\n  return counter(count).map(function (index) {\n    return callback(index);\n  });\n}\nfunction getPaddingBox(padding) {\n  if (isNumber(padding)) {\n    return {\n      top: padding,\n      left: padding,\n      right: padding,\n      bottom: padding\n    };\n  }\n  return {\n    left: padding.left || 0,\n    top: padding.top || 0,\n    right: padding.right || 0,\n    bottom: padding.bottom || 0\n  };\n}\n\n/**\r\n * @namespace Moveable.Pinchable\r\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\r\n */\nvar Pinchable = makeAble(\"pinchable\", {\n  props: [\"pinchable\"],\n  events: [\"pinchStart\", \"pinch\", \"pinchEnd\", \"pinchGroupStart\", \"pinchGroup\", \"pinchGroupEnd\"],\n  dragStart: function () {\n    return true;\n  },\n  pinchStart: function (moveable, e) {\n    var datas = e.datas,\n      targets = e.targets,\n      angle = e.angle,\n      originalDatas = e.originalDatas;\n    var _a = moveable.props,\n      pinchable = _a.pinchable,\n      ables = _a.ables;\n    if (!pinchable) {\n      return false;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\", \"Start\");\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"ControlStart\");\n    var pinchAbles = (pinchable === true ? moveable.controlAbles : ables.filter(function (able) {\n      return pinchable.indexOf(able.name) > -1;\n    })).filter(function (able) {\n      return able.canPinch && able[controlEventName];\n    });\n    var params = fillParams(moveable, e, {});\n    if (targets) {\n      params.targets = targets;\n    }\n    var result = triggerEvent(moveable, eventName, params);\n    datas.isPinch = result !== false;\n    datas.ables = pinchAbles;\n    var isPinch = datas.isPinch;\n    if (!isPinch) {\n      return false;\n    }\n    pinchAbles.forEach(function (able) {\n      originalDatas[able.name] = originalDatas[able.name] || {};\n      if (!able[controlEventName]) {\n        return;\n      }\n      var ableEvent = __assign(__assign({}, e), {\n        datas: originalDatas[able.name],\n        parentRotate: angle,\n        isPinch: true\n      });\n      able[controlEventName](moveable, ableEvent);\n    });\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest,\n      direction: [0, 0]\n    };\n    return isPinch;\n  },\n  pinch: function (moveable, e) {\n    var datas = e.datas,\n      pinchScale = e.scale,\n      distance = e.distance,\n      originalDatas = e.originalDatas,\n      inputEvent = e.inputEvent,\n      targets = e.targets,\n      angle = e.angle;\n    if (!datas.isPinch) {\n      return;\n    }\n    var parentDistance = distance * (1 - 1 / pinchScale);\n    var params = fillParams(moveable, e, {});\n    if (targets) {\n      params.targets = targets;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\");\n    triggerEvent(moveable, eventName, params);\n    var ables = datas.ables;\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"Control\");\n    ables.forEach(function (able) {\n      if (!able[controlEventName]) {\n        return;\n      }\n      able[controlEventName](moveable, __assign(__assign({}, e), {\n        datas: originalDatas[able.name],\n        inputEvent: inputEvent,\n        resolveMatrix: true,\n        pinchScale: pinchScale,\n        parentDistance: parentDistance,\n        parentRotate: angle,\n        isPinch: true\n      }));\n    });\n    return params;\n  },\n  pinchEnd: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      inputEvent = e.inputEvent,\n      targets = e.targets,\n      originalDatas = e.originalDatas;\n    if (!datas.isPinch) {\n      return;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\", \"End\");\n    var params = fillEndParams(moveable, e, {\n      isDrag: isPinch\n    });\n    if (targets) {\n      params.targets = targets;\n    }\n    triggerEvent(moveable, eventName, params);\n    var ables = datas.ables;\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"ControlEnd\");\n    ables.forEach(function (able) {\n      if (!able[controlEventName]) {\n        return;\n      }\n      able[controlEventName](moveable, __assign(__assign({}, e), {\n        isDrag: isPinch,\n        datas: originalDatas[able.name],\n        inputEvent: inputEvent,\n        isPinch: true\n      }));\n    });\n    return isPinch;\n  },\n  pinchGroupStart: function (moveable, e) {\n    return this.pinchStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  pinchGroup: function (moveable, e) {\n    return this.pinch(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  pinchGroupEnd: function (moveable, e) {\n    return this.pinchEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  }\n});\n/**\r\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\r\n * @name Moveable.Pinchable#pinchable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.pinchable = true;\r\n */\n/**\r\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\r\n * @memberof Moveable.Pinchable\r\n * @event pinchStart\r\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     rotatable: true,\r\n *     scalable: true,\r\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\r\n * });\r\n * moveable.on(\"pinchStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"rotateStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"scaleStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\n/**\r\n * When pinching, the pinch event is called with part of scale, rotate, resize\r\n * @memberof Moveable.Pinchable\r\n * @event pinch\r\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     rotatable: true,\r\n *     scalable: true,\r\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\r\n * });\r\n * moveable.on(\"pinch\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"rotate\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"scale\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\n/**\r\n * When the pinch finishes, the pinchEnd event is called.\r\n * @memberof Moveable.Pinchable\r\n * @event pinchEnd\r\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     rotatable: true,\r\n *     scalable: true,\r\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\r\n * });\r\n * moveable.on(\"pinchEnd\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"rotateEnd\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"scaleEnd\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\n/**\r\n * When the group pinch starts, the `pinchGroupStart` event is called.\r\n * @memberof Moveable.Pinchable\r\n * @event pinchGroupStart\r\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     pinchable: true\r\n * });\r\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\r\n *     console.log(\"onPinchGroupStart\", targets);\r\n * });\r\n */\n/**\r\n * When the group pinch, the `pinchGroup` event is called.\r\n * @memberof Moveable.Pinchable\r\n * @event pinchGroup\r\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     pinchable: true\r\n * });\r\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\r\n *     console.log(\"onPinchGroup\", targets);\r\n * });\r\n */\n/**\r\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\r\n * @memberof Moveable.Pinchable\r\n * @event pinchGroupEnd\r\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     pinchable: true\r\n * });\r\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\r\n * });\r\n */\n\nvar directionCondition = getDirectionCondition(\"scalable\");\n/**\r\n * @namespace Scalable\r\n * @memberof Moveable\r\n * @description Scalable indicates whether the target's x and y can be scale of transform.\r\n */\nvar Scalable = {\n  name: \"scalable\",\n  ableGroup: \"size\",\n  canPinch: true,\n  props: [\"scalable\", \"throttleScale\", \"renderDirections\", \"keepRatio\", \"edge\", \"displayAroundControls\"],\n  events: [\"scaleStart\", \"beforeScale\", \"scale\", \"scaleEnd\", \"scaleGroupStart\", \"beforeScaleGroup\", \"scaleGroup\", \"scaleGroupEnd\"],\n  render: getRenderDirections(\"scalable\"),\n  dragControlCondition: directionCondition,\n  viewClassName: getDirectionViewClassName(\"scalable\"),\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      inputEvent = e.inputEvent,\n      parentDirection = e.parentDirection;\n    var direction = getTotalDirection(parentDirection, isPinch, inputEvent, datas);\n    var _a = moveable.state,\n      width = _a.width,\n      height = _a.height,\n      targetTransform = _a.targetTransform,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos4 = _a.pos4;\n    if (!direction || !target) {\n      return false;\n    }\n    if (!isPinch) {\n      setDragStart(moveable, e);\n    }\n    datas.datas = {};\n    datas.transform = targetTransform;\n    datas.prevDist = [1, 1];\n    datas.direction = direction;\n    datas.startOffsetWidth = width;\n    datas.startOffsetHeight = height;\n    datas.startValue = [1, 1];\n    // const scaleWidth = getDist(pos1, pos2);\n    // const scaleHeight = getDist(pos2, pos4);\n    var isWidth = !direction[0] && !direction[1] || direction[0] || !direction[1];\n    // datas.scaleWidth = scaleWidth;\n    // datas.scaleHeight = scaleHeight;\n    // datas.scaleXRatio = scaleWidth / width;\n    // datas.scaleYRatio = scaleHeight / height;\n    setDefaultTransformIndex(moveable, e, \"scale\");\n    datas.isWidth = isWidth;\n    function setRatio(ratio) {\n      datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n    }\n    datas.startPositions = getAbsolutePosesByState(moveable.state);\n    function setFixedDirection(fixedDirection) {\n      var result = getFixedDirectionInfo(datas.startPositions, fixedDirection);\n      datas.fixedDirection = result.fixedDirection;\n      datas.fixedPosition = result.fixedPosition;\n      datas.fixedOffset = result.fixedOffset;\n    }\n    datas.setFixedDirection = setFixedDirection;\n    setRatio(getDist$1(pos1, pos2) / getDist$1(pos2, pos4));\n    setFixedDirection([-direction[0], -direction[1]]);\n    var setMinScaleSize = function (min) {\n      datas.minScaleSize = min;\n    };\n    var setMaxScaleSize = function (max) {\n      datas.maxScaleSize = max;\n    };\n    // const setMinScale = (min: number[]) => {\n    // };\n    // const setMaxScale = (max: number[]) => {\n    // };\n    setMinScaleSize([-Infinity, -Infinity]);\n    setMaxScaleSize([Infinity, Infinity]);\n    var params = fillParams(moveable, e, __assign(__assign({\n      direction: direction,\n      set: function (scale) {\n        datas.startValue = scale;\n      },\n      setRatio: setRatio,\n      setFixedDirection: setFixedDirection,\n      setMinScaleSize: setMinScaleSize,\n      setMaxScaleSize: setMaxScaleSize\n    }, fillTransformStartEvent(moveable, e)), {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    }));\n    var result = triggerEvent(moveable, \"onScaleStart\", params);\n    datas.startFixedDirection = datas.fixedDirection;\n    if (result !== false) {\n      datas.isScale = true;\n      moveable.state.snapRenderInfo = {\n        request: e.isRequest,\n        direction: direction\n      };\n    }\n    return datas.isScale ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    resolveTransformEvent(moveable, e, \"scale\");\n    var datas = e.datas,\n      parentKeepRatio = e.parentKeepRatio,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      dragClient = e.dragClient,\n      isRequest = e.isRequest,\n      useSnap = e.useSnap,\n      resolveMatrix = e.resolveMatrix;\n    var prevDist = datas.prevDist,\n      direction = datas.direction,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      isScale = datas.isScale,\n      startValue = datas.startValue,\n      isWidth = datas.isWidth,\n      ratio = datas.ratio;\n    if (!isScale) {\n      return false;\n    }\n    var props = moveable.props;\n    var throttleScale = props.throttleScale,\n      parentMoveable = props.parentMoveable;\n    var sizeDirection = direction;\n    if (!direction[0] && !direction[1]) {\n      sizeDirection = [1, 1];\n    }\n    var keepRatio = ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio) || false;\n    var state = moveable.state;\n    var tempScaleValue = [startValue[0], startValue[1]];\n    function getNextScale() {\n      var _a = getOffsetSizeDist(sizeDirection, keepRatio, datas, e),\n        distWidth = _a.distWidth,\n        distHeight = _a.distHeight;\n      var distX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\n      var distY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\n      if (!startValue[0]) {\n        tempScaleValue[0] = distWidth / startOffsetWidth;\n      }\n      if (!startValue[1]) {\n        tempScaleValue[1] = distHeight / startOffsetHeight;\n      }\n      var scaleX = (sizeDirection[0] || keepRatio ? distX : 1) * tempScaleValue[0];\n      var scaleY = (sizeDirection[1] || keepRatio ? distY : 1) * tempScaleValue[1];\n      if (scaleX === 0) {\n        scaleX = sign(prevDist[0]) * MIN_SCALE;\n      }\n      if (scaleY === 0) {\n        scaleY = sign(prevDist[1]) * MIN_SCALE;\n      }\n      return [scaleX, scaleY];\n    }\n    var scale = getNextScale();\n    if (!isPinch && moveable.props.groupable) {\n      var snapRenderInfo = state.snapRenderInfo || {};\n      var stateDirection = snapRenderInfo.direction;\n      if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n        state.snapRenderInfo = {\n          direction: direction,\n          request: e.isRequest\n        };\n      }\n    }\n    triggerEvent(moveable, \"onBeforeScale\", fillParams(moveable, e, {\n      scale: scale,\n      setFixedDirection: function (nextFixedDirection) {\n        datas.setFixedDirection(nextFixedDirection);\n        scale = getNextScale();\n        return scale;\n      },\n      startFixedDirection: datas.startFixedDirection,\n      setScale: function (nextScale) {\n        scale = nextScale;\n      }\n    }, true));\n    var dist = [scale[0] / tempScaleValue[0], scale[1] / tempScaleValue[1]];\n    var fixedPosition = dragClient;\n    var snapDist = [0, 0];\n    var distSign = sign(dist[0] * dist[1]);\n    var isSelfPinch = !dragClient && !parentFlag && isPinch;\n    if (isSelfPinch || resolveMatrix) {\n      fixedPosition = getTranslateFixedPosition(moveable, datas.targetAllTransform, [0, 0], [0, 0], datas);\n    } else if (!dragClient) {\n      fixedPosition = datas.fixedPosition;\n    }\n    if (!isPinch) {\n      snapDist = checkSnapScale(moveable, dist, direction, !useSnap && isRequest, datas);\n    }\n    if (keepRatio) {\n      if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n        if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n          snapDist[1] = 0;\n        } else {\n          snapDist[0] = 0;\n        }\n      }\n      var isNoSnap = !snapDist[0] && !snapDist[1];\n      if (isNoSnap) {\n        // throttle scale value (not absolute scale size)\n        if (isWidth) {\n          dist[0] = throttle(dist[0] * tempScaleValue[0], throttleScale) / tempScaleValue[0];\n        } else {\n          dist[1] = throttle(dist[1] * tempScaleValue[1], throttleScale) / tempScaleValue[1];\n        }\n      }\n      if (sizeDirection[0] && !sizeDirection[1] || snapDist[0] && !snapDist[1] || isNoSnap && isWidth) {\n        dist[0] += snapDist[0];\n        var snapHeight = startOffsetWidth * dist[0] * tempScaleValue[0] / ratio;\n        dist[1] = sign(distSign * dist[0]) * abs(snapHeight / startOffsetHeight / tempScaleValue[1]);\n      } else if (!sizeDirection[0] && sizeDirection[1] || !snapDist[0] && snapDist[1] || isNoSnap && !isWidth) {\n        dist[1] += snapDist[1];\n        var snapWidth = startOffsetHeight * dist[1] * tempScaleValue[1] * ratio;\n        dist[0] = sign(distSign * dist[1]) * abs(snapWidth / startOffsetWidth / tempScaleValue[0]);\n      }\n    } else {\n      dist[0] += snapDist[0];\n      dist[1] += snapDist[1];\n      if (!snapDist[0]) {\n        dist[0] = throttle(dist[0] * tempScaleValue[0], throttleScale) / tempScaleValue[0];\n      }\n      if (!snapDist[1]) {\n        dist[1] = throttle(dist[1] * tempScaleValue[1], throttleScale) / tempScaleValue[1];\n      }\n    }\n    if (dist[0] === 0) {\n      dist[0] = sign(prevDist[0]) * MIN_SCALE;\n    }\n    if (dist[1] === 0) {\n      dist[1] = sign(prevDist[1]) * MIN_SCALE;\n    }\n    scale = multiply2(dist, [tempScaleValue[0], tempScaleValue[1]]);\n    var startOffsetSize = [startOffsetWidth, startOffsetHeight];\n    var scaleSize = [startOffsetWidth * scale[0], startOffsetHeight * scale[1]];\n    scaleSize = calculateBoundSize(scaleSize, datas.minScaleSize, datas.maxScaleSize, keepRatio ? ratio : false);\n    // if (keepRatio && (isGroup || keepRatioFinally)) {\n    //     if (isWidth) {\n    //         boundingHeight = boundingWidth / ratio;\n    //     } else {\n    //         boundingWidth = boundingHeight * ratio;\n    //     }\n    // }\n    scale = countEach(2, function (i) {\n      return startOffsetSize[i] ? scaleSize[i] / startOffsetSize[i] : scaleSize[i];\n    });\n    dist = countEach(2, function (i) {\n      return scale[i] / tempScaleValue[i];\n    });\n    var delta = countEach(2, function (i) {\n      return prevDist[i] ? dist[i] / prevDist[i] : dist[i];\n    });\n    var distText = \"scale(\".concat(dist.join(\", \"), \")\");\n    var scaleText = \"scale(\".concat(scale.join(\", \"), \")\");\n    var nextTransform = convertTransformFormat(datas, scaleText, distText);\n    var isZeroScale = !startValue[0] || !startValue[1];\n    var inverseDist = getScaleDist(moveable, isZeroScale ? scaleText : distText, datas.fixedDirection, fixedPosition, datas.fixedOffset, datas, isZeroScale);\n    var inverseDelta = isSelfPinch ? inverseDist : minus(inverseDist, datas.prevInverseDist || [0, 0]);\n    datas.prevDist = dist;\n    datas.prevInverseDist = inverseDist;\n    if (scale[0] === prevDist[0] && scale[1] === prevDist[1] && inverseDelta.every(function (num) {\n      return !num;\n    }) && !parentMoveable && !isSelfPinch) {\n      return false;\n    }\n    var params = fillParams(moveable, e, __assign({\n      offsetWidth: startOffsetWidth,\n      offsetHeight: startOffsetHeight,\n      direction: direction,\n      scale: scale,\n      dist: dist,\n      delta: delta,\n      isPinch: !!isPinch\n    }, fillTransformEvent(moveable, nextTransform, inverseDelta, isPinch, e)));\n    triggerEvent(moveable, \"onScale\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isScale) {\n      return false;\n    }\n    datas.isScale = false;\n    var scaleEndParam = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n    return scaleEndParam;\n  },\n  dragGroupControlCondition: directionCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    var originalEvents = fillChildEvents(moveable, \"resizable\", e);\n    datas.moveableScale = moveable.scale;\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      return startChildDist(moveable, child, datas, ev);\n    });\n    var setFixedDirection = function (fixedDirection) {\n      params.setFixedDirection(fixedDirection);\n      events.forEach(function (ev, i) {\n        ev.setFixedDirection(fixedDirection);\n        startChildDist(moveable, ev.moveable, datas, originalEvents[i]);\n      });\n    };\n    datas.setFixedDirection = setFixedDirection;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events,\n      setFixedDirection: setFixedDirection\n    });\n    var result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n    datas.isScale = result !== false;\n    return datas.isScale ? nextParams : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isScale) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeScale\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var dist = params.dist;\n    var moveableScale = datas.moveableScale;\n    moveable.scale = [dist[0] * moveableScale[0], dist[1] * moveableScale[1]];\n    var keepRatio = moveable.props.keepRatio;\n    var fixedPosition = datas.fixedPosition;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = __read(calculate(createRotateMatrix(moveable.rotation / 180 * Math.PI, 3), [ev.datas.originalX * dist[0], ev.datas.originalY * dist[1], 1], 3), 2),\n        clientX = _a[0],\n        clientY = _a[1];\n      return __assign(__assign({}, ev), {\n        parentDist: null,\n        parentScale: dist,\n        parentKeepRatio: keepRatio,\n        // recalculate child fixed position for parent group's dragging.\n        dragClient: plus(fixedPosition, [clientX, clientY])\n      });\n    });\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onScaleGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isScale) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\r\n   * @method Moveable.Scalable#request\r\n   * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\r\n   * @return {Moveable.Requester} Moveable Requester\r\n   * @example\r\n    * // Instantly Request (requestStart - request - requestEnd)\r\n   * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\r\n   *\r\n   * // requestStart\r\n   * const requester = moveable.request(\"scalable\");\r\n   *\r\n   * // request\r\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n   *\r\n   * // requestEnd\r\n   * requester.requestEnd();\r\n   */\n  request: function () {\n    var datas = {};\n    var distWidth = 0;\n    var distHeight = 0;\n    var useSnap = false;\n    return {\n      isControl: true,\n      requestStart: function (e) {\n        useSnap = e.useSnap;\n        return {\n          datas: datas,\n          parentDirection: e.direction || [1, 1],\n          useSnap: useSnap\n        };\n      },\n      request: function (e) {\n        distWidth += e.deltaWidth;\n        distHeight += e.deltaHeight;\n        return {\n          datas: datas,\n          parentDist: [distWidth, distHeight],\n          parentKeepRatio: e.keepRatio,\n          useSnap: useSnap\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true,\n          useSnap: useSnap\n        };\n      }\n    };\n  }\n};\n/**\r\n * Whether or not target can scaled.\r\n *\r\n * @name Moveable.Scalable#scalable\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.scalable = true;\r\n */\n/**\r\n * throttle of scaleX, scaleY when scale.\r\n * @name Moveable.Scalable#throttleScale\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.throttleScale = 0.1;\r\n */\n/**\r\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\r\n * @name Moveable.Scalable#renderDirections\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     scalable: true,\r\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\r\n * });\r\n *\r\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\r\n */\n/**\r\n * When resize or scale, keeps a ratio of the width, height. (default: false)\r\n * @name Moveable.Scalable#keepRatio\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     scalable: true,\r\n * });\r\n *\r\n * moveable.keepRatio = true;\r\n */\n/**\r\n * When the scale starts, the scaleStart event is called.\r\n * @memberof Moveable.Scalable\r\n * @event scaleStart\r\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { scalable: true });\r\n * moveable.on(\"scaleStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\n/**\r\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\r\n * @memberof Moveable.Scalable\r\n * @event beforeScale\r\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { scalable: true });\r\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\r\n *     if (shiftKey) {\r\n *        setFixedDirection([0, 0]);\r\n *     }\r\n * });\r\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\r\n *     target.style.transform = transform;\r\n * });\r\n */\n/**\r\n * When scaling, the `scale` event is called.\r\n * @memberof Moveable.Scalable\r\n * @event scale\r\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { scalable: true });\r\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\r\n *     target.style.transform = transform;\r\n * });\r\n */\n/**\r\n * When the scale finishes, the `scaleEnd` event is called.\r\n * @memberof Moveable.Scalable\r\n * @event scaleEnd\r\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { scalable: true });\r\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\n/**\r\n* When the group scale starts, the `scaleGroupStart` event is called.\r\n* @memberof Moveable.Scalable\r\n* @event scaleGroupStart\r\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     scalable: true\r\n* });\r\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\r\n*     console.log(\"onScaleGroupStart\", targets);\r\n* });\r\n*/\n/**\r\n* When the group scale, the `scaleGroup` event is called.\r\n* @memberof Moveable.Scalable\r\n* @event scaleGroup\r\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     scalable: true\r\n* });\r\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\r\n*     console.log(\"onScaleGroup\", targets);\r\n*     events.forEach(ev => {\r\n*         const target = ev.target;\r\n*         // ev.drag is a drag event that occurs when the group scale.\r\n*         const left = ev.drag.beforeDist[0];\r\n*         const top = ev.drag.beforeDist[1];\r\n*         const scaleX = ev.scale[0];\r\n*         const scaleY = ev.scale[1];\r\n*     });\r\n* });\r\n*/\n/**\r\n * When the group scale finishes, the `scaleGroupEnd` event is called.\r\n * @memberof Moveable.Scalable\r\n * @event scaleGroupEnd\r\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     scalable: true\r\n * });\r\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\r\n * });\r\n */\n\nfunction getMiddleLinePos(pos1, pos2) {\n  return pos1.map(function (pos, i) {\n    return dot(pos, pos2[i], 1, 2);\n  });\n}\nfunction getTriangleRad(pos1, pos2, pos3) {\n  // pos1 Rad\n  var rad1 = getRad(pos1, pos2);\n  var rad2 = getRad(pos1, pos3);\n  var rad = rad2 - rad1;\n  return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\nfunction isValidPos(poses1, poses2) {\n  var rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n  var rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n  var pi = Math.PI;\n  if (rad1 >= pi && rad2 <= pi || rad1 <= pi && rad2 >= pi) {\n    return false;\n  }\n  return true;\n}\n/**\r\n * @namespace Moveable.Warpable\r\n * @description Warpable indicates whether the target can be warped(distorted, bented).\r\n */\nvar Warpable = {\n  name: \"warpable\",\n  ableGroup: \"size\",\n  props: [\"warpable\", \"renderDirections\", \"edge\", \"displayAroundControls\"],\n  events: [\"warpStart\", \"warp\", \"warpEnd\"],\n  viewClassName: getDirectionViewClassName(\"warpable\"),\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      resizable = _a.resizable,\n      scalable = _a.scalable,\n      warpable = _a.warpable,\n      zoom = _a.zoom;\n    if (resizable || scalable || !warpable) {\n      return [];\n    }\n    var _b = moveable.state,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4;\n    var linePosFrom1 = getMiddleLinePos(pos1, pos2);\n    var linePosFrom2 = getMiddleLinePos(pos2, pos1);\n    var linePosFrom3 = getMiddleLinePos(pos1, pos3);\n    var linePosFrom4 = getMiddleLinePos(pos3, pos1);\n    var linePosTo1 = getMiddleLinePos(pos3, pos4);\n    var linePosTo2 = getMiddleLinePos(pos4, pos3);\n    var linePosTo3 = getMiddleLinePos(pos2, pos4);\n    var linePosTo4 = getMiddleLinePos(pos4, pos2);\n    return __spreadArray([React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine1\",\n      style: getLineStyle(linePosFrom1, linePosTo1, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine2\",\n      style: getLineStyle(linePosFrom2, linePosTo2, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine3\",\n      style: getLineStyle(linePosFrom3, linePosTo3, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine4\",\n      style: getLineStyle(linePosFrom4, linePosTo4, zoom)\n    })], __read(renderAllDirections(moveable, \"warpable\", React)), false);\n  },\n  dragControlCondition: function (moveable, e) {\n    if (e.isRequest) {\n      return false;\n    }\n    var target = e.inputEvent.target;\n    return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n  },\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      inputEvent = e.inputEvent;\n    var target = moveable.props.target;\n    var inputTarget = inputEvent.target;\n    var direction = getDirection(inputTarget, datas);\n    if (!direction || !target) {\n      return false;\n    }\n    var state = moveable.state;\n    var transformOrigin = state.transformOrigin,\n      is3d = state.is3d,\n      targetTransform = state.targetTransform,\n      targetMatrix = state.targetMatrix,\n      width = state.width,\n      height = state.height,\n      left = state.left,\n      top = state.top;\n    datas.datas = {};\n    datas.targetTransform = targetTransform;\n    datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n    datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n    datas.direction = direction;\n    datas.left = left;\n    datas.top = top;\n    datas.poses = [[0, 0], [width, 0], [0, height], [width, height]].map(function (p) {\n      return minus(p, transformOrigin);\n    });\n    datas.nextPoses = datas.poses.map(function (_a) {\n      var _b = __read(_a, 2),\n        x = _b[0],\n        y = _b[1];\n      return calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4);\n    });\n    datas.startValue = createIdentityMatrix(4);\n    datas.prevMatrix = createIdentityMatrix(4);\n    datas.absolutePoses = getAbsolutePosesByState(state);\n    datas.posIndexes = getPosIndexesByDirection(direction);\n    setDragStart(moveable, e);\n    setDefaultTransformIndex(moveable, e, \"matrix3d\");\n    state.snapRenderInfo = {\n      request: e.isRequest,\n      direction: direction\n    };\n    var params = fillParams(moveable, e, __assign({\n      set: function (matrix) {\n        datas.startValue = matrix;\n      }\n    }, fillTransformStartEvent(moveable, e)));\n    var result = triggerEvent(moveable, \"onWarpStart\", params);\n    if (result !== false) {\n      datas.isWarp = true;\n    }\n    return datas.isWarp;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas,\n      isRequest = e.isRequest;\n    var distX = e.distX,\n      distY = e.distY;\n    var targetInverseMatrix = datas.targetInverseMatrix,\n      prevMatrix = datas.prevMatrix,\n      isWarp = datas.isWarp,\n      startValue = datas.startValue,\n      poses = datas.poses,\n      posIndexes = datas.posIndexes,\n      absolutePoses = datas.absolutePoses;\n    if (!isWarp) {\n      return false;\n    }\n    resolveTransformEvent(moveable, e, \"matrix3d\");\n    if (hasGuidelines(moveable, \"warpable\")) {\n      var selectedPoses = posIndexes.map(function (index) {\n        return absolutePoses[index];\n      });\n      if (selectedPoses.length > 1) {\n        selectedPoses.push([(selectedPoses[0][0] + selectedPoses[1][0]) / 2, (selectedPoses[0][1] + selectedPoses[1][1]) / 2]);\n      }\n      var _a = checkMoveableSnapBounds(moveable, isRequest, {\n          horizontal: selectedPoses.map(function (pos) {\n            return pos[1] + distY;\n          }),\n          vertical: selectedPoses.map(function (pos) {\n            return pos[0] + distX;\n          })\n        }),\n        horizontalSnapInfo = _a.horizontal,\n        verticalSnapInfo = _a.vertical;\n      distY -= horizontalSnapInfo.offset;\n      distX -= verticalSnapInfo.offset;\n    }\n    var dist = getDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }, true);\n    var nextPoses = datas.nextPoses.slice();\n    posIndexes.forEach(function (index) {\n      nextPoses[index] = plus(nextPoses[index], dist);\n    });\n    if (!NEARBY_POS.every(function (nearByPoses) {\n      return isValidPos(nearByPoses.map(function (i) {\n        return poses[i];\n      }), nearByPoses.map(function (i) {\n        return nextPoses[i];\n      }));\n    })) {\n      return false;\n    }\n    var h = createWarpMatrix(poses[0], poses[2], poses[1], poses[3], nextPoses[0], nextPoses[2], nextPoses[1], nextPoses[3]);\n    if (!h.length) {\n      return false;\n    }\n    // B * A * M\n    var afterMatrix = multiply(targetInverseMatrix, h, 4);\n    // B * M * A\n    var matrix = getTransfromMatrix(datas, afterMatrix, true);\n    var delta = multiply(invert(prevMatrix, 4), matrix, 4);\n    datas.prevMatrix = matrix;\n    var totalMatrix = multiply(startValue, matrix, 4);\n    var nextTransform = convertTransformFormat(datas, \"matrix3d(\".concat(totalMatrix.join(\", \"), \")\"), \"matrix3d(\".concat(matrix.join(\", \"), \")\"));\n    fillOriginalTransform(e, nextTransform);\n    triggerEvent(moveable, \"onWarp\", fillParams(moveable, e, __assign({\n      delta: delta,\n      matrix: totalMatrix,\n      dist: matrix,\n      multiply: multiply,\n      transform: nextTransform\n    }, fillCSSObject({\n      transform: nextTransform\n    }, e))));\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas,\n      isDrag = e.isDrag;\n    if (!datas.isWarp) {\n      return false;\n    }\n    datas.isWarp = false;\n    triggerEvent(moveable, \"onWarpEnd\", fillEndParams(moveable, e, {}));\n    return isDrag;\n  }\n};\n/**\r\n * Whether or not target can be warped. (default: false)\r\n * @name Moveable.Warpable#warpable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.warpable = true;\r\n */\n/**\r\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\r\n* @name Moveable.Warpable#renderDirections\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     warpable: true,\r\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\r\n* });\r\n*\r\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\r\n*/\n/**\r\n* When the warp starts, the warpStart event is called.\r\n* @memberof Moveable.Warpable\r\n* @event warpStart\r\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, { warpable: true });\r\n* moveable.on(\"warpStart\", ({ target }) => {\r\n*     console.log(target);\r\n* });\r\n*/\n/**\r\n * When warping, the warp event is called.\r\n * @memberof Moveable.Warpable\r\n * @event warp\r\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n * let matrix = [\r\n *  1, 0, 0, 0,\r\n *  0, 1, 0, 0,\r\n *  0, 0, 1, 0,\r\n *  0, 0, 0, 1,\r\n * ];\r\n * const moveable = new Moveable(document.body, { warpable: true });\r\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\r\n *    // target.style.transform = transform;\r\n *    matrix = multiply(matrix, delta);\r\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\r\n * });\r\n */\n/**\r\n * When the warp finishes, the warpEnd event is called.\r\n * @memberof Moveable.Warpable\r\n * @event warpEnd\r\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { warpable: true });\r\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\n\nvar AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nvar AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nvar AVOID = /*#__PURE__*/prefix(\"avoid\");\nvar VIEW_DRAGGING = prefix(\"view-dragging\");\nfunction restoreStyle(moveable) {\n  var el = moveable.areaElement;\n  if (!el) {\n    return;\n  }\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  removeClass(el, AVOID);\n  el.style.cssText += \"left: 0px; top: 0px; width: \".concat(width, \"px; height: \").concat(height, \"px\");\n}\nfunction renderPieces(React) {\n  return React.createElement(\"div\", {\n    key: \"area_pieces\",\n    className: AREA_PIECES\n  }, React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }));\n}\nvar DragArea = {\n  name: \"dragArea\",\n  props: [\"dragArea\", \"passDragArea\"],\n  events: [\"click\", \"clickGroup\"],\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      target = _a.target,\n      dragArea = _a.dragArea,\n      groupable = _a.groupable,\n      passDragArea = _a.passDragArea;\n    var _b = moveable.getState(),\n      width = _b.width,\n      height = _b.height,\n      renderPoses = _b.renderPoses;\n    var className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n    if (groupable) {\n      return [React.createElement(\"div\", {\n        key: \"area\",\n        ref: ref(moveable, \"areaElement\"),\n        className: className\n      }), renderPieces(React)];\n    }\n    if (!target || !dragArea) {\n      return [];\n    }\n    var h = createWarpMatrix([0, 0], [width, 0], [0, height], [width, height], renderPoses[0], renderPoses[1], renderPoses[2], renderPoses[3]);\n    var transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n    return [React.createElement(\"div\", {\n      key: \"area\",\n      ref: ref(moveable, \"areaElement\"),\n      className: className,\n      style: {\n        top: \"0px\",\n        left: \"0px\",\n        width: \"\".concat(width, \"px\"),\n        height: \"\".concat(height, \"px\"),\n        transformOrigin: \"0 0\",\n        transform: transform\n      }\n    }), renderPieces(React)];\n  },\n  dragStart: function (moveable, _a) {\n    var datas = _a.datas,\n      clientX = _a.clientX,\n      clientY = _a.clientY,\n      inputEvent = _a.inputEvent;\n    if (!inputEvent) {\n      return false;\n    }\n    datas.isDragArea = false;\n    var areaElement = moveable.areaElement;\n    var state = moveable.state;\n    var moveableClientRect = state.moveableClientRect,\n      renderPoses = state.renderPoses,\n      rootMatrix = state.rootMatrix,\n      is3d = state.is3d;\n    var left = moveableClientRect.left,\n      top = moveableClientRect.top;\n    var _b = getRect(renderPoses),\n      relativeLeft = _b.left,\n      relativeTop = _b.top,\n      width = _b.width,\n      height = _b.height;\n    var n = is3d ? 4 : 3;\n    var _c = __read(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), 2),\n      posX = _c[0],\n      posY = _c[1];\n    posX -= relativeLeft;\n    posY -= relativeTop;\n    var rects = [{\n      left: relativeLeft,\n      top: relativeTop,\n      width: width,\n      height: posY - 10\n    }, {\n      left: relativeLeft,\n      top: relativeTop,\n      width: posX - 10,\n      height: height\n    }, {\n      left: relativeLeft,\n      top: relativeTop + posY + 10,\n      width: width,\n      height: height - posY - 10\n    }, {\n      left: relativeLeft + posX + 10,\n      top: relativeTop,\n      width: width - posX - 10,\n      height: height\n    }];\n    var children = [].slice.call(areaElement.nextElementSibling.children);\n    rects.forEach(function (rect, i) {\n      children[i].style.cssText = \"left: \".concat(rect.left, \"px;top: \").concat(rect.top, \"px; width: \").concat(rect.width, \"px; height: \").concat(rect.height, \"px;\");\n    });\n    addClass(areaElement, AVOID);\n    state.disableNativeEvent = true;\n    return;\n  },\n  drag: function (moveable, _a) {\n    var datas = _a.datas,\n      inputEvent = _a.inputEvent;\n    this.enableNativeEvent(moveable);\n    if (!inputEvent) {\n      return false;\n    }\n    if (!datas.isDragArea) {\n      datas.isDragArea = true;\n      restoreStyle(moveable);\n    }\n  },\n  dragEnd: function (moveable, e) {\n    this.enableNativeEvent(moveable);\n    var inputEvent = e.inputEvent,\n      datas = e.datas;\n    if (!inputEvent) {\n      return false;\n    }\n    if (!datas.isDragArea) {\n      restoreStyle(moveable);\n    }\n  },\n  dragGroupStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragGroup: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragGroupEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  unset: function (moveable) {\n    restoreStyle(moveable);\n    moveable.state.disableNativeEvent = false;\n  },\n  enableNativeEvent: function (moveable) {\n    var state = moveable.state;\n    if (state.disableNativeEvent) {\n      requestAnimationFrame(function () {\n        state.disableNativeEvent = false;\n      });\n    }\n  }\n};\n/**\r\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\r\n * @name Moveable#dragArea\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  dragArea: false,\r\n * });\r\n */\n/**\r\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\r\n * @name Moveable#passDragArea\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  dragArea: false,\r\n * });\r\n */\n\nvar Origin = makeAble(\"origin\", {\n  props: [\"origin\", \"svgOrigin\"],\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      zoom = _a.zoom,\n      svgOrigin = _a.svgOrigin,\n      groupable = _a.groupable;\n    var _b = moveable.getState(),\n      beforeOrigin = _b.beforeOrigin,\n      rotation = _b.rotation,\n      svg = _b.svg,\n      allMatrix = _b.allMatrix,\n      is3d = _b.is3d,\n      left = _b.left,\n      top = _b.top,\n      offsetWidth = _b.offsetWidth,\n      offsetHeight = _b.offsetHeight;\n    var originStyle;\n    if (!groupable && svg && svgOrigin) {\n      var _c = __read(convertTransformOriginArray(svgOrigin, offsetWidth, offsetHeight), 2),\n        originX = _c[0],\n        originY = _c[1];\n      var n = is3d ? 4 : 3;\n      var result = calculatePosition(allMatrix, [originX, originY], n);\n      originStyle = getControlTransform(rotation, zoom, minus(result, [left, top]));\n    } else {\n      originStyle = getControlTransform(rotation, zoom, beforeOrigin);\n    }\n    return [React.createElement(\"div\", {\n      className: prefix(\"control\", \"origin\"),\n      style: originStyle,\n      key: \"beforeOrigin\"\n    })];\n  }\n});\n/**\r\n * Whether or not the origin controlbox will be visible or not (default: true)\r\n * @name Moveable#origin\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.origin = true;\r\n */\n\nfunction getDefaultScrollPosition(e) {\n  var scrollContainer = e.scrollContainer;\n  return [scrollContainer.scrollLeft, scrollContainer.scrollTop];\n}\n/**\r\n * @namespace Moveable.Scrollable\r\n * @description Whether or not target can be scrolled to the scroll container (default: false)\r\n */\nvar Scrollable = {\n  name: \"scrollable\",\n  canPinch: true,\n  props: [\"scrollable\", \"scrollContainer\", \"scrollThreshold\", \"scrollThrottleTime\", \"getScrollPosition\", \"scrollOptions\"],\n  events: [\"scroll\", \"scrollGroup\"],\n  dragRelation: \"strong\",\n  dragStart: function (moveable, e) {\n    var props = moveable.props;\n    var _a = props.scrollContainer,\n      scrollContainer = _a === void 0 ? moveable.getContainer() : _a,\n      scrollOptions = props.scrollOptions;\n    var dragScroll = new DragScroll();\n    var scrollContainerElement = getRefTarget(scrollContainer, true);\n    e.datas.dragScroll = dragScroll;\n    moveable.state.dragScroll = dragScroll;\n    var gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n    var targets = e.targets;\n    dragScroll.on(\"scroll\", function (_a) {\n      var container = _a.container,\n        direction = _a.direction;\n      var params = fillParams(moveable, e, {\n        scrollContainer: container,\n        direction: direction\n      });\n      var eventName = targets ? \"onScrollGroup\" : \"onScroll\";\n      if (targets) {\n        params.targets = targets;\n      }\n      triggerEvent(moveable, eventName, params);\n    }).on(\"move\", function (_a) {\n      var offsetX = _a.offsetX,\n        offsetY = _a.offsetY,\n        inputEvent = _a.inputEvent;\n      moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\n    }).on(\"scrollDrag\", function (_a) {\n      var next = _a.next;\n      next(moveable[gestoName].getCurrentEvent());\n    });\n    dragScroll.dragStart(e, __assign({\n      container: scrollContainerElement\n    }, scrollOptions));\n  },\n  checkScroll: function (moveable, e) {\n    var dragScroll = e.datas.dragScroll;\n    if (!dragScroll) {\n      return;\n    }\n    var _a = moveable.props,\n      _b = _a.scrollContainer,\n      scrollContainer = _b === void 0 ? moveable.getContainer() : _b,\n      _c = _a.scrollThreshold,\n      scrollThreshold = _c === void 0 ? 0 : _c,\n      _d = _a.scrollThrottleTime,\n      scrollThrottleTime = _d === void 0 ? 0 : _d,\n      _e = _a.getScrollPosition,\n      getScrollPosition = _e === void 0 ? getDefaultScrollPosition : _e,\n      scrollOptions = _a.scrollOptions;\n    dragScroll.drag(e, __assign({\n      container: scrollContainer,\n      threshold: scrollThreshold,\n      throttleTime: scrollThrottleTime,\n      getScrollPosition: function (ev) {\n        return getScrollPosition({\n          scrollContainer: ev.container,\n          direction: ev.direction\n        });\n      }\n    }, scrollOptions));\n    return true;\n  },\n  drag: function (moveable, e) {\n    return this.checkScroll(moveable, e);\n  },\n  dragEnd: function (moveable, e) {\n    e.datas.dragScroll.dragEnd();\n    e.datas.dragScroll = null;\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      isControl: true\n    }));\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    return this.drag(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    return this.dragEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets,\n      isControl: true\n    }));\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.drag(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupControEnd: function (moveable, e) {\n    return this.dragEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  unset: function (moveable) {\n    var _a;\n    var state = moveable.state;\n    (_a = state.dragScroll) === null || _a === void 0 ? void 0 : _a.dragEnd();\n    state.dragScroll = null;\n  }\n};\n/**\r\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\r\n * @memberof Moveable.Scrollable\r\n * @event scroll\r\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\r\n *   scrollContainer.scrollLeft += direction[0] * 10;\r\n *   scrollContainer.scrollTop += direction[1] * 10;\r\n * });\r\n */\n/**\r\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\r\n * @memberof Moveable.Scrollable\r\n * @event scrollGroup\r\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\r\n *   scrollContainer.scrollLeft += direction[0] * 10;\r\n *   scrollContainer.scrollTop += direction[1] * 10;\r\n * });\r\n */\n\nvar Default = {\n  name: \"\",\n  props: [\"target\", \"dragTargetSelf\", \"dragTarget\", \"dragContainer\", \"container\", \"warpSelf\", \"rootContainer\", \"useResizeObserver\", \"useMutationObserver\", \"zoom\", \"dragFocusedInput\", \"transformOrigin\", \"ables\", \"className\", \"pinchThreshold\", \"pinchOutside\", \"triggerAblesSimultaneously\", \"checkInput\", \"cspNonce\", \"translateZ\", \"hideDefaultLines\", \"props\", \"flushSync\", \"stopPropagation\", \"preventClickEventOnDrag\", \"preventClickDefault\", \"viewContainer\", \"persistData\", \"useAccuratePosition\", \"firstRenderState\", \"linePadding\", \"controlPadding\", \"preventDefault\", \"preventRightClick\", \"preventWheelClick\", \"requestStyles\"],\n  events: [\"changeTargets\"]\n};\nvar Padding = makeAble(\"padding\", {\n  props: [\"padding\"],\n  render: function (moveable, React) {\n    var props = moveable.props;\n    if (props.dragArea) {\n      return [];\n    }\n    var _a = getPaddingBox(props.padding || {}),\n      left = _a.left,\n      top = _a.top,\n      right = _a.right,\n      bottom = _a.bottom;\n    var _b = moveable.getState(),\n      renderPoses = _b.renderPoses,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4;\n    var poses = [pos1, pos2, pos3, pos4];\n    var paddingDirections = [];\n    if (left > 0) {\n      paddingDirections.push([0, 2]);\n    }\n    if (top > 0) {\n      paddingDirections.push([0, 1]);\n    }\n    if (right > 0) {\n      paddingDirections.push([1, 3]);\n    }\n    if (bottom > 0) {\n      paddingDirections.push([2, 3]);\n    }\n    return paddingDirections.map(function (_a, i) {\n      var _b = __read(_a, 2),\n        dir1 = _b[0],\n        dir2 = _b[1];\n      var paddingPos1 = poses[dir1];\n      var paddingPos2 = poses[dir2];\n      var paddingPos3 = renderPoses[dir1];\n      var paddingPos4 = renderPoses[dir2];\n      var h = createWarpMatrix([0, 0], [100, 0], [0, 100], [100, 100], paddingPos1, paddingPos2, paddingPos3, paddingPos4);\n      if (!h.length) {\n        return undefined;\n      }\n      return React.createElement(\"div\", {\n        key: \"padding\".concat(i),\n        className: prefix(\"padding\"),\n        style: {\n          transform: makeMatrixCSS(h, true)\n        }\n      });\n    });\n  }\n});\n/**\r\n * Add padding around the target to increase the drag area.\r\n * @name Moveable#padding\r\n * @default null\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  target: document.querySelector(\".target\"),\r\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\r\n * });\r\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\r\n * moveable.updateRect();\r\n */\n\nvar RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"];\nfunction calculateRatio(values, size) {\n  var sumSize = values[0] + values[1];\n  var sumRatio = sumSize > size ? size / sumSize : 1;\n  values[0] *= sumRatio;\n  values[1] = size - values[1] * sumRatio;\n  return values;\n}\nvar HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nvar VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nvar HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1];\nvar VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1];\nfunction getRadiusStyles(nextPoses, isRelative, width, height, left, top, right, bottom) {\n  if (left === void 0) {\n    left = 0;\n  }\n  if (top === void 0) {\n    top = 0;\n  }\n  if (right === void 0) {\n    right = width;\n  }\n  if (bottom === void 0) {\n    bottom = height;\n  }\n  var clipStyles = [];\n  var isVertical = false;\n  var radiusPoses = nextPoses.filter(function (pos) {\n    return !pos.virtual;\n  });\n  var raws = radiusPoses.map(function (posInfo) {\n    var horizontal = posInfo.horizontal,\n      vertical = posInfo.vertical,\n      pos = posInfo.pos;\n    if (vertical && !isVertical) {\n      isVertical = true;\n      clipStyles.push(\"/\");\n    }\n    if (isVertical) {\n      var rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n      clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n      return rawPos;\n    } else {\n      var rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n      clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n      return rawPos;\n    }\n  });\n  return {\n    radiusPoses: radiusPoses,\n    styles: clipStyles,\n    raws: raws\n  };\n}\nfunction getRadiusRange(controlPoses) {\n  // [start, length]\n  var horizontalRange = [0, 0];\n  var verticalRange = [0, 0];\n  var length = controlPoses.length;\n  for (var i = 0; i < length; ++i) {\n    var clipPose = controlPoses[i];\n    if (!clipPose.sub) {\n      continue;\n    }\n    if (clipPose.horizontal) {\n      if (horizontalRange[1] === 0) {\n        horizontalRange[0] = i;\n      }\n      horizontalRange[1] = i - horizontalRange[0] + 1;\n      verticalRange[0] = i + 1;\n    }\n    if (clipPose.vertical) {\n      if (verticalRange[1] === 0) {\n        verticalRange[0] = i;\n      }\n      verticalRange[1] = i - verticalRange[0] + 1;\n    }\n  }\n  return {\n    horizontalRange: horizontalRange,\n    verticalRange: verticalRange\n  };\n}\nfunction getRadiusValues(values, width, height, left, top, minCounts, full) {\n  var _a, _b, _c, _d;\n  if (minCounts === void 0) {\n    minCounts = [0, 0];\n  }\n  if (full === void 0) {\n    full = false;\n  }\n  var splitIndex = values.indexOf(\"/\");\n  var splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n  var horizontalValues = values.slice(0, splitLength);\n  var verticalValues = values.slice(splitLength + 1);\n  var horizontalValuesLength = horizontalValues.length;\n  var verticalValuesLength = verticalValues.length;\n  var hasVerticalValues = verticalValuesLength > 0;\n  var _e = __read(horizontalValues, 4),\n    _f = _e[0],\n    nwValue = _f === void 0 ? \"0px\" : _f,\n    _g = _e[1],\n    neValue = _g === void 0 ? nwValue : _g,\n    _h = _e[2],\n    seValue = _h === void 0 ? nwValue : _h,\n    _j = _e[3],\n    swValue = _j === void 0 ? neValue : _j;\n  var _k = __read(verticalValues, 4),\n    _l = _k[0],\n    wnValue = _l === void 0 ? nwValue : _l,\n    _m = _k[1],\n    enValue = _m === void 0 ? hasVerticalValues ? wnValue : neValue : _m,\n    _o = _k[2],\n    esValue = _o === void 0 ? hasVerticalValues ? wnValue : seValue : _o,\n    _p = _k[3],\n    wsValue = _p === void 0 ? hasVerticalValues ? enValue : swValue : _p;\n  var horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(function (pos) {\n    return convertUnitSize(pos, width);\n  });\n  var verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(function (pos) {\n    return convertUnitSize(pos, height);\n  });\n  var horizontalPoses = horizontalRawPoses.slice();\n  var verticalPoses = verticalRawPoses.slice();\n  _a = __read(calculateRatio([horizontalPoses[0], horizontalPoses[1]], width), 2), horizontalPoses[0] = _a[0], horizontalPoses[1] = _a[1];\n  _b = __read(calculateRatio([horizontalPoses[3], horizontalPoses[2]], width), 2), horizontalPoses[3] = _b[0], horizontalPoses[2] = _b[1];\n  _c = __read(calculateRatio([verticalPoses[0], verticalPoses[3]], height), 2), verticalPoses[0] = _c[0], verticalPoses[3] = _c[1];\n  _d = __read(calculateRatio([verticalPoses[1], verticalPoses[2]], height), 2), verticalPoses[1] = _d[0], verticalPoses[2] = _d[1];\n  var nextHorizontalPoses = full ? horizontalPoses : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n  var nextVerticalPoses = full ? verticalPoses : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n  return __spreadArray(__spreadArray([], __read(nextHorizontalPoses.map(function (pos, i) {\n    var direction = RADIUS_DIRECTIONS[i];\n    return {\n      virtual: i >= horizontalValuesLength,\n      horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n      vertical: 0,\n      pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n      sub: true,\n      raw: horizontalRawPoses[i],\n      direction: direction\n    };\n  })), false), __read(nextVerticalPoses.map(function (pos, i) {\n    var direction = RADIUS_DIRECTIONS[i];\n    return {\n      virtual: i >= verticalValuesLength,\n      horizontal: 0,\n      vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n      pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n      sub: true,\n      raw: verticalRawPoses[i],\n      direction: direction\n    };\n  })), false);\n}\nfunction removeRadiusPos(controlPoses, poses, index, startIndex, length) {\n  if (length === void 0) {\n    length = poses.length;\n  }\n  var _a = getRadiusRange(controlPoses.slice(startIndex)),\n    horizontalRange = _a.horizontalRange,\n    verticalRange = _a.verticalRange;\n  var radiuslIndex = index - startIndex;\n  var deleteCount = 0;\n  if (radiuslIndex === 0) {\n    deleteCount = length;\n  } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n    deleteCount = horizontalRange[1] - radiuslIndex;\n  } else if (radiuslIndex >= verticalRange[0]) {\n    deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n  } else {\n    return;\n  }\n  controlPoses.splice(index, deleteCount);\n  poses.splice(index, deleteCount);\n}\nfunction addRadiusPos(controlPoses, poses, startIndex, horizontalIndex, verticalIndex, distX, distY, right, bottom, left, top) {\n  if (left === void 0) {\n    left = 0;\n  }\n  if (top === void 0) {\n    top = 0;\n  }\n  var _a = getRadiusRange(controlPoses.slice(startIndex)),\n    horizontalRange = _a.horizontalRange,\n    verticalRange = _a.verticalRange;\n  if (horizontalIndex > -1) {\n    var radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1 ? distX - left : right - distX;\n    for (var i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n      var y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n      var x = 0;\n      if (horizontalIndex === i) {\n        x = distX;\n      } else if (i === 0) {\n        x = left + radiusX;\n      } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n        x = right - (poses[startIndex][0] - left);\n      }\n      controlPoses.splice(startIndex + i, 0, {\n        horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n        vertical: 0,\n        pos: [x, y]\n      });\n      poses.splice(startIndex + i, 0, [x, y]);\n      if (i === 0) {\n        break;\n      }\n    }\n  } else if (verticalIndex > -1) {\n    var radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1 ? distY - top : bottom - distY;\n    if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n      var pos = [left + radiusY, top];\n      controlPoses.push({\n        horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n        vertical: 0,\n        pos: pos\n      });\n      poses.push(pos);\n    }\n    var startVerticalIndex = verticalRange[0];\n    for (var i = verticalRange[1]; i <= verticalIndex; ++i) {\n      var x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n      var y = 0;\n      if (verticalIndex === i) {\n        y = distY;\n      } else if (i === 0) {\n        y = top + radiusY;\n      } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n        y = poses[startIndex + startVerticalIndex][1];\n      } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n        y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n      }\n      controlPoses.push({\n        horizontal: 0,\n        vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n        pos: [x, y]\n      });\n      poses.push([x, y]);\n      if (i === 0) {\n        break;\n      }\n    }\n  }\n}\nfunction splitRadiusPoses(controlPoses, raws) {\n  if (raws === void 0) {\n    raws = controlPoses.map(function (pos) {\n      return pos.raw;\n    });\n  }\n  var horizontals = controlPoses.map(function (pos, i) {\n    return pos.horizontal ? raws[i] : null;\n  }).filter(function (pos) {\n    return pos != null;\n  });\n  var verticals = controlPoses.map(function (pos, i) {\n    return pos.vertical ? raws[i] : null;\n  }).filter(function (pos) {\n    return pos != null;\n  });\n  return {\n    horizontals: horizontals,\n    verticals: verticals\n  };\n}\nvar CLIP_DIRECTIONS = [[0, -1, \"n\"], [1, 0, \"e\"]];\nvar CLIP_RECT_DIRECTIONS = [[-1, -1, \"nw\"], [0, -1, \"n\"], [1, -1, \"ne\"], [1, 0, \"e\"], [1, 1, \"se\"], [0, 1, \"s\"], [-1, 1, \"sw\"], [-1, 0, \"w\"]];\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\nfunction getClipStyles(moveable, clipPath, poses) {\n  var clipRelative = moveable.props.clipRelative;\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  var _b = clipPath,\n    clipType = _b.type,\n    clipPoses = _b.poses;\n  var isRect = clipType === \"rect\";\n  var isCircle = clipType === \"circle\";\n  if (clipType === \"polygon\") {\n    return poses.map(function (pos) {\n      return \"\".concat(convertCSSSize(pos[0], width, clipRelative), \" \").concat(convertCSSSize(pos[1], height, clipRelative));\n    });\n  } else if (isRect || clipType === \"inset\") {\n    var top_1 = poses[1][1];\n    var right = poses[3][0];\n    var left = poses[7][0];\n    var bottom = poses[5][1];\n    if (isRect) {\n      return [top_1, right, bottom, left].map(function (pos) {\n        return \"\".concat(pos, \"px\");\n      });\n    }\n    var clipStyles = [top_1, width - right, height - bottom, left].map(function (pos, i) {\n      return convertCSSSize(pos, i % 2 ? width : height, clipRelative);\n    });\n    if (poses.length > 8) {\n      var _c = __read(minus(poses[4], poses[0]), 2),\n        subWidth = _c[0],\n        subHeight = _c[1];\n      clipStyles.push.apply(clipStyles, __spreadArray([\"round\"], __read(getRadiusStyles(clipPoses.slice(8).map(function (info, i) {\n        return __assign(__assign({}, info), {\n          pos: poses[i]\n        });\n      }), clipRelative, subWidth, subHeight, left, top_1, right, bottom).styles), false));\n    }\n    return clipStyles;\n  } else if (isCircle || clipType === \"ellipse\") {\n    var center = poses[0];\n    var ry = convertCSSSize(abs(poses[1][1] - center[1]), isCircle ? Math.sqrt((width * width + height * height) / 2) : height, clipRelative);\n    var clipStyles = isCircle ? [ry] : [convertCSSSize(abs(poses[2][0] - center[0]), width, clipRelative), ry];\n    clipStyles.push(\"at\", convertCSSSize(center[0], width, clipRelative), convertCSSSize(center[1], height, clipRelative));\n    return clipStyles;\n  }\n}\nfunction getRectPoses(top, right, bottom, left) {\n  var xs = [left, (left + right) / 2, right];\n  var ys = [top, (top + bottom) / 2, bottom];\n  return CLIP_RECT_DIRECTIONS.map(function (_a) {\n    var _b = __read(_a, 3),\n      dirx = _b[0],\n      diry = _b[1],\n      dir = _b[2];\n    var x = xs[dirx + 1];\n    var y = ys[diry + 1];\n    return {\n      vertical: abs(diry),\n      horizontal: abs(dirx),\n      direction: dir,\n      pos: [x, y]\n    };\n  });\n}\nfunction getControlSize(controlPoses) {\n  var xRange = [Infinity, -Infinity];\n  var yRange = [Infinity, -Infinity];\n  controlPoses.forEach(function (_a) {\n    var pos = _a.pos;\n    xRange[0] = Math.min(xRange[0], pos[0]);\n    xRange[1] = Math.max(xRange[1], pos[0]);\n    yRange[0] = Math.min(yRange[0], pos[1]);\n    yRange[1] = Math.max(yRange[1], pos[1]);\n  });\n  return [abs(xRange[1] - xRange[0]), abs(yRange[1] - yRange[0])];\n}\nfunction getClipPath(target, width, height, defaultClip, customClip) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n  if (!target) {\n    return;\n  }\n  var clipText = customClip;\n  if (!clipText) {\n    var getStyle = getCachedStyle(target);\n    var clipPath = getStyle(\"clipPath\");\n    clipText = clipPath !== \"none\" ? clipPath : getStyle(\"clip\");\n  }\n  if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n    clipText = defaultClip;\n    if (!clipText) {\n      return;\n    }\n  }\n  var _k = splitBracket(clipText),\n    _l = _k.prefix,\n    clipPrefix = _l === void 0 ? clipText : _l,\n    _m = _k.value,\n    value = _m === void 0 ? \"\" : _m;\n  var isCircle = clipPrefix === \"circle\";\n  var splitter = \" \";\n  if (clipPrefix === \"polygon\") {\n    var values = splitComma(value || \"0% 0%, 100% 0%, 100% 100%, 0% 100%\");\n    splitter = \",\";\n    var poses = values.map(function (pos) {\n      var _a = __read(pos.split(\" \"), 2),\n        xPos = _a[0],\n        yPos = _a[1];\n      return {\n        vertical: 1,\n        horizontal: 1,\n        pos: [convertUnitSize(xPos, width), convertUnitSize(yPos, height)]\n      };\n    });\n    var minMaxs = getMinMaxs(poses.map(function (pos) {\n      return pos.pos;\n    }));\n    return {\n      type: clipPrefix,\n      clipText: clipText,\n      poses: poses,\n      splitter: splitter,\n      left: minMaxs.minX,\n      right: minMaxs.maxX,\n      top: minMaxs.minY,\n      bottom: minMaxs.maxY\n    };\n  } else if (isCircle || clipPrefix === \"ellipse\") {\n    var xPos = \"\";\n    var yPos = \"\";\n    var radiusX_1 = 0;\n    var radiusY_1 = 0;\n    var values = splitSpace(value);\n    if (isCircle) {\n      var radius = \"\";\n      _a = __read(values, 4), _b = _a[0], radius = _b === void 0 ? \"50%\" : _b, _c = _a[2], xPos = _c === void 0 ? \"50%\" : _c, _d = _a[3], yPos = _d === void 0 ? \"50%\" : _d;\n      radiusX_1 = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n      radiusY_1 = radiusX_1;\n    } else {\n      var xRadius = \"\";\n      var yRadius = \"\";\n      _e = __read(values, 5), _f = _e[0], xRadius = _f === void 0 ? \"50%\" : _f, _g = _e[1], yRadius = _g === void 0 ? \"50%\" : _g, _h = _e[3], xPos = _h === void 0 ? \"50%\" : _h, _j = _e[4], yPos = _j === void 0 ? \"50%\" : _j;\n      radiusX_1 = convertUnitSize(xRadius, width);\n      radiusY_1 = convertUnitSize(yRadius, height);\n    }\n    var centerPos_1 = [convertUnitSize(xPos, width), convertUnitSize(yPos, height)];\n    var poses = __spreadArray([{\n      vertical: 1,\n      horizontal: 1,\n      pos: centerPos_1,\n      direction: \"nesw\"\n    }], __read(CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(function (dir) {\n      return {\n        vertical: abs(dir[1]),\n        horizontal: dir[0],\n        direction: dir[2],\n        sub: true,\n        pos: [centerPos_1[0] + dir[0] * radiusX_1, centerPos_1[1] + dir[1] * radiusY_1]\n      };\n    })), false);\n    return {\n      type: clipPrefix,\n      clipText: clipText,\n      radiusX: radiusX_1,\n      radiusY: radiusY_1,\n      left: centerPos_1[0] - radiusX_1,\n      top: centerPos_1[1] - radiusY_1,\n      right: centerPos_1[0] + radiusX_1,\n      bottom: centerPos_1[1] + radiusY_1,\n      poses: poses,\n      splitter: splitter\n    };\n  } else if (clipPrefix === \"inset\") {\n    var values = splitSpace(value || \"0 0 0 0\");\n    var roundIndex = values.indexOf(\"round\");\n    var rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n    var radiusValues = values.slice(rectLength + 1);\n    var _o = __read(values.slice(0, rectLength), 4),\n      topValue = _o[0],\n      _p = _o[1],\n      rightValue = _p === void 0 ? topValue : _p,\n      _q = _o[2],\n      bottomValue = _q === void 0 ? topValue : _q,\n      _r = _o[3],\n      leftValue = _r === void 0 ? rightValue : _r;\n    var _s = __read([topValue, bottomValue].map(function (pos) {\n        return convertUnitSize(pos, height);\n      }), 2),\n      top_2 = _s[0],\n      bottom = _s[1];\n    var _t = __read([leftValue, rightValue].map(function (pos) {\n        return convertUnitSize(pos, width);\n      }), 2),\n      left = _t[0],\n      right = _t[1];\n    var nextRight = width - right;\n    var nextBottom = height - bottom;\n    var radiusPoses = getRadiusValues(radiusValues, nextRight - left, nextBottom - top_2, left, top_2);\n    var poses = __spreadArray(__spreadArray([], __read(getRectPoses(top_2, nextRight, nextBottom, left)), false), __read(radiusPoses), false);\n    return {\n      type: \"inset\",\n      clipText: clipText,\n      poses: poses,\n      top: top_2,\n      left: left,\n      right: nextRight,\n      bottom: nextBottom,\n      radius: radiusValues,\n      splitter: splitter\n    };\n  } else if (clipPrefix === \"rect\") {\n    // top right bottom left\n    var values = splitComma(value || \"0px, \".concat(width, \"px, \").concat(height, \"px, 0px\"));\n    splitter = \",\";\n    var _u = __read(values.map(function (pos) {\n        var posValue = splitUnit(pos).value;\n        return posValue;\n      }), 4),\n      top_3 = _u[0],\n      right = _u[1],\n      bottom = _u[2],\n      left = _u[3];\n    var poses = getRectPoses(top_3, right, bottom, left);\n    return {\n      type: \"rect\",\n      clipText: clipText,\n      poses: poses,\n      top: top_3,\n      right: right,\n      bottom: bottom,\n      left: left,\n      values: values,\n      splitter: splitter\n    };\n  }\n  return;\n}\nfunction moveControlPos(controlPoses, index, dist, isRect, keepRatio) {\n  var _a = controlPoses[index],\n    direction = _a.direction,\n    sub = _a.sub;\n  var dists = controlPoses.map(function () {\n    return [0, 0];\n  });\n  var directions = direction ? direction.split(\"\") : [];\n  if (isRect && index < 8) {\n    var verticalDirections = directions.filter(function (dir) {\n      return dir === \"w\" || dir === \"e\";\n    });\n    var horizontalDirections = directions.filter(function (dir) {\n      return dir === \"n\" || dir === \"s\";\n    });\n    var verticalDirection_1 = verticalDirections[0];\n    var horizontalDirection_1 = horizontalDirections[0];\n    dists[index] = dist;\n    var _b = __read(getControlSize(controlPoses), 2),\n      width = _b[0],\n      height = _b[1];\n    var ratio = width && height ? width / height : 0;\n    if (ratio && keepRatio) {\n      // 0 1 2\n      // 7   3\n      // 6 5 4\n      var fixedIndex = (index + 4) % 8;\n      var fixedPosition = controlPoses[fixedIndex].pos;\n      var sizeDirection = [0, 0];\n      if (direction.indexOf(\"w\") > -1) {\n        sizeDirection[0] = -1;\n      } else if (direction.indexOf(\"e\") > -1) {\n        sizeDirection[0] = 1;\n      }\n      if (direction.indexOf(\"n\") > -1) {\n        sizeDirection[1] = -1;\n      } else if (direction.indexOf(\"s\") > -1) {\n        sizeDirection[1] = 1;\n      }\n      var nextDist = getSizeDistByDist([width, height], dist, ratio, sizeDirection, true);\n      var nextWidth = width + nextDist[0];\n      var nextHeight = height + nextDist[1];\n      var top_1 = fixedPosition[1];\n      var bottom = fixedPosition[1];\n      var left = fixedPosition[0];\n      var right = fixedPosition[0];\n      if (sizeDirection[0] === -1) {\n        left = right - nextWidth;\n      } else if (sizeDirection[0] === 1) {\n        right = left + nextWidth;\n      } else {\n        left = left - nextWidth / 2;\n        right = right + nextWidth / 2;\n      }\n      if (sizeDirection[1] === -1) {\n        top_1 = bottom - nextHeight;\n      } else if (sizeDirection[1] === 1) {\n        bottom = top_1 + nextHeight;\n      } else {\n        top_1 = bottom - nextHeight / 2;\n        bottom = top_1 + nextHeight;\n      }\n      var nextControlPoses_1 = getRectPoses(top_1, right, bottom, left);\n      controlPoses.forEach(function (controlPose, i) {\n        dists[i][0] = nextControlPoses_1[i].pos[0] - controlPose.pos[0];\n        dists[i][1] = nextControlPoses_1[i].pos[1] - controlPose.pos[1];\n      });\n    } else {\n      controlPoses.forEach(function (controlPose, i) {\n        var controlDir = controlPose.direction;\n        if (!controlDir) {\n          return;\n        }\n        if (controlDir.indexOf(verticalDirection_1) > -1) {\n          dists[i][0] = dist[0];\n        }\n        if (controlDir.indexOf(horizontalDirection_1) > -1) {\n          dists[i][1] = dist[1];\n        }\n      });\n      if (verticalDirection_1) {\n        dists[1][0] = dist[0] / 2;\n        dists[5][0] = dist[0] / 2;\n      }\n      if (horizontalDirection_1) {\n        dists[3][1] = dist[1] / 2;\n        dists[7][1] = dist[1] / 2;\n      }\n    }\n  } else if (direction && !sub) {\n    directions.forEach(function (dir) {\n      var isVertical = dir === \"n\" || dir === \"s\";\n      controlPoses.forEach(function (controlPose, i) {\n        var dirDir = controlPose.direction,\n          dirHorizontal = controlPose.horizontal,\n          dirVertical = controlPose.vertical;\n        if (!dirDir || dirDir.indexOf(dir) === -1) {\n          return;\n        }\n        dists[i] = [isVertical || !dirHorizontal ? 0 : dist[0], !isVertical || !dirVertical ? 0 : dist[1]];\n      });\n    });\n  } else {\n    dists[index] = dist;\n  }\n  return dists;\n}\nfunction addClipPath(moveable, e) {\n  var _a = __read(calculatePointerDist(moveable, e), 2),\n    distX = _a[0],\n    distY = _a[1];\n  var _b = e.datas,\n    clipPath = _b.clipPath,\n    clipIndex = _b.clipIndex;\n  var _c = clipPath,\n    clipType = _c.type,\n    clipPoses = _c.poses,\n    splitter = _c.splitter;\n  var poses = clipPoses.map(function (pos) {\n    return pos.pos;\n  });\n  if (clipType === \"polygon\") {\n    poses.splice(clipIndex, 0, [distX, distY]);\n  } else if (clipType === \"inset\") {\n    var horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n    var verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n    var length_1 = clipPoses.length;\n    addRadiusPos(clipPoses, poses, 8, horizontalIndex, verticalIndex, distX, distY, poses[4][0], poses[4][1], poses[0][0], poses[0][1]);\n    if (length_1 === clipPoses.length) {\n      return;\n    }\n  } else {\n    return;\n  }\n  var clipStyles = getClipStyles(moveable, clipPath, poses);\n  var clipStyle = \"\".concat(clipType, \"(\").concat(clipStyles.join(splitter), \")\");\n  triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n    clipEventType: \"added\",\n    clipType: clipType,\n    poses: poses,\n    clipStyles: clipStyles,\n    clipStyle: clipStyle,\n    distX: 0,\n    distY: 0\n  }, fillCSSObject({\n    clipPath: clipStyle\n  }, e))));\n}\nfunction removeClipPath(moveable, e) {\n  var _a = e.datas,\n    clipPath = _a.clipPath,\n    clipIndex = _a.clipIndex;\n  var _b = clipPath,\n    clipType = _b.type,\n    clipPoses = _b.poses,\n    splitter = _b.splitter;\n  var poses = clipPoses.map(function (pos) {\n    return pos.pos;\n  });\n  var length = poses.length;\n  if (clipType === \"polygon\") {\n    clipPoses.splice(clipIndex, 1);\n    poses.splice(clipIndex, 1);\n  } else if (clipType === \"inset\") {\n    if (clipIndex < 8) {\n      return;\n    }\n    removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n    if (length === clipPoses.length) {\n      return;\n    }\n  } else {\n    return;\n  }\n  var clipStyles = getClipStyles(moveable, clipPath, poses);\n  var clipStyle = \"\".concat(clipType, \"(\").concat(clipStyles.join(splitter), \")\");\n  triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n    clipEventType: \"removed\",\n    clipType: clipType,\n    poses: poses,\n    clipStyles: clipStyles,\n    clipStyle: clipStyle,\n    distX: 0,\n    distY: 0\n  }, fillCSSObject({\n    clipPath: clipStyle\n  }, e))));\n}\n/**\r\n * @namespace Moveable.Clippable\r\n * @description Whether to clip the target.\r\n */\nvar Clippable = {\n  name: \"clippable\",\n  props: [\"clippable\", \"defaultClipPath\", \"customClipPath\", \"keepRatio\", \"clipRelative\", \"clipArea\", \"dragWithClip\", \"clipTargetBounds\", \"clipVerticalGuidelines\", \"clipHorizontalGuidelines\", \"clipSnapThreshold\"],\n  events: [\"clipStart\", \"clip\", \"clipEnd\"],\n  css: [\".control.clip-control {\\nbackground: #6d6;\\ncursor: pointer;\\n}\\n.control.clip-control.clip-radius {\\nbackground: #d66;\\n}\\n.line.clip-line {\\nbackground: #6e6;\\ncursor: move;\\nz-index: 1;\\n}\\n.clip-area {\\nposition: absolute;\\ntop: 0;\\nleft: 0;\\n}\\n.clip-ellipse {\\nposition: absolute;\\ncursor: move;\\nborder: 1px solid #6d6;\\nborder: var(--zoompx) solid #6d6;\\nborder-radius: 50%;\\ntransform-origin: 0px 0px;\\n}\", \":host {\\n--bounds-color: #d66;\\n}\", \".guideline {\\npointer-events: none;\\nz-index: 2;\\n}\", \".line.guideline.bounds {\\nbackground: #d66;\\nbackground: var(--bounds-color);\\n}\"],\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      customClipPath = _a.customClipPath,\n      defaultClipPath = _a.defaultClipPath,\n      clipArea = _a.clipArea,\n      zoom = _a.zoom,\n      groupable = _a.groupable;\n    var _b = moveable.getState(),\n      target = _b.target,\n      width = _b.width,\n      height = _b.height,\n      allMatrix = _b.allMatrix,\n      is3d = _b.is3d,\n      left = _b.left,\n      top = _b.top,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4,\n      clipPathState = _b.clipPathState,\n      snapBoundInfos = _b.snapBoundInfos,\n      rotationRad = _b.rotation;\n    if (!target || groupable) {\n      return [];\n    }\n    var clipPath = getClipPath(target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n    if (!clipPath) {\n      return [];\n    }\n    var n = is3d ? 4 : 3;\n    var type = clipPath.type;\n    var clipPoses = clipPath.poses;\n    var poses = clipPoses.map(function (pos) {\n      // return [x, y];\n      var calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n      return [calculatedPos[0] - left, calculatedPos[1] - top];\n    });\n    var controls = [];\n    var lines = [];\n    var isRect = type === \"rect\";\n    var isInset = type === \"inset\";\n    var isPolygon = type === \"polygon\";\n    if (isRect || isInset || isPolygon) {\n      var linePoses_1 = isInset ? poses.slice(0, 8) : poses;\n      lines = linePoses_1.map(function (to, i) {\n        var from = i === 0 ? linePoses_1[linePoses_1.length - 1] : linePoses_1[i - 1];\n        var rad = getRad(from, to);\n        var dist = getDiagonalSize(from, to);\n        return React.createElement(\"div\", {\n          key: \"clipLine\".concat(i),\n          className: prefix(\"line\", \"clip-line\", \"snap-control\"),\n          \"data-clip-index\": i,\n          style: {\n            width: \"\".concat(dist, \"px\"),\n            transform: \"translate(\".concat(from[0], \"px, \").concat(from[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\")\n          }\n        });\n      });\n    }\n    controls = poses.map(function (pos, i) {\n      return React.createElement(\"div\", {\n        key: \"clipControl\".concat(i),\n        className: prefix(\"control\", \"clip-control\", \"snap-control\"),\n        \"data-clip-index\": i,\n        style: {\n          transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rotationRad, \"rad) scale(\").concat(zoom, \")\")\n        }\n      });\n    });\n    if (isInset) {\n      controls.push.apply(controls, __spreadArray([], __read(poses.slice(8).map(function (pos, i) {\n        return React.createElement(\"div\", {\n          key: \"clipRadiusControl\".concat(i),\n          className: prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\"),\n          \"data-clip-index\": 8 + i,\n          style: {\n            transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rotationRad, \"rad) scale(\").concat(zoom, \")\")\n          }\n        });\n      })), false));\n    }\n    if (type === \"circle\" || type === \"ellipse\") {\n      var clipLeft = clipPath.left,\n        clipTop = clipPath.top,\n        radiusX = clipPath.radiusX,\n        radiusY = clipPath.radiusY;\n      var _c = __read(minus(calculatePosition(allMatrix, [clipLeft, clipTop], n), calculatePosition(allMatrix, [0, 0], n)), 2),\n        distLeft = _c[0],\n        distTop = _c[1];\n      var ellipseClipPath = \"none\";\n      if (!clipArea) {\n        var piece = Math.max(10, radiusX / 5, radiusY / 5);\n        var areaPoses = [];\n        for (var i = 0; i <= piece; ++i) {\n          var rad = Math.PI * 2 / piece * i;\n          areaPoses.push([radiusX + (radiusX - zoom) * Math.cos(rad), radiusY + (radiusY - zoom) * Math.sin(rad)]);\n        }\n        areaPoses.push([radiusX, -2]);\n        areaPoses.push([-2, -2]);\n        areaPoses.push([-2, radiusY * 2 + 2]);\n        areaPoses.push([radiusX * 2 + 2, radiusY * 2 + 2]);\n        areaPoses.push([radiusX * 2 + 2, -2]);\n        areaPoses.push([radiusX, -2]);\n        ellipseClipPath = \"polygon(\".concat(areaPoses.map(function (pos) {\n          return \"\".concat(pos[0], \"px \").concat(pos[1], \"px\");\n        }).join(\", \"), \")\");\n      }\n      controls.push(React.createElement(\"div\", {\n        key: \"clipEllipse\",\n        className: prefix(\"clip-ellipse\", \"snap-control\"),\n        style: {\n          width: \"\".concat(radiusX * 2, \"px\"),\n          height: \"\".concat(radiusY * 2, \"px\"),\n          clipPath: ellipseClipPath,\n          transform: \"translate(\".concat(-left + distLeft, \"px, \").concat(-top + distTop, \"px) \").concat(makeMatrixCSS(allMatrix))\n        }\n      }));\n    }\n    if (clipArea) {\n      var _d = getRect(__spreadArray([pos1, pos2, pos3, pos4], __read(poses), false)),\n        allWidth = _d.width,\n        allHeight = _d.height,\n        allLeft_1 = _d.left,\n        allTop_1 = _d.top;\n      if (isPolygon || isRect || isInset) {\n        var areaPoses = isInset ? poses.slice(0, 8) : poses;\n        controls.push(React.createElement(\"div\", {\n          key: \"clipArea\",\n          className: prefix(\"clip-area\", \"snap-control\"),\n          style: {\n            width: \"\".concat(allWidth, \"px\"),\n            height: \"\".concat(allHeight, \"px\"),\n            transform: \"translate(\".concat(allLeft_1, \"px, \").concat(allTop_1, \"px)\"),\n            clipPath: \"polygon(\".concat(areaPoses.map(function (pos) {\n              return \"\".concat(pos[0] - allLeft_1, \"px \").concat(pos[1] - allTop_1, \"px\");\n            }).join(\", \"), \")\")\n          }\n        }));\n      }\n    }\n    if (snapBoundInfos) {\n      [\"vertical\", \"horizontal\"].forEach(function (directionType) {\n        var info = snapBoundInfos[directionType];\n        var isHorizontal = directionType === \"horizontal\";\n        if (info.isSnap) {\n          lines.push.apply(lines, __spreadArray([], __read(info.snap.posInfos.map(function (_a, i) {\n            var pos = _a.pos;\n            var snapPos1 = minus(calculatePosition(allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n            var snapPos2 = minus(calculatePosition(allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n            return renderLine(React, \"\", snapPos1, snapPos2, zoom, \"clip\".concat(directionType, \"snap\").concat(i), \"guideline\");\n          })), false));\n        }\n        if (info.isBound) {\n          lines.push.apply(lines, __spreadArray([], __read(info.bounds.map(function (_a, i) {\n            var pos = _a.pos;\n            var snapPos1 = minus(calculatePosition(allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n            var snapPos2 = minus(calculatePosition(allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n            return renderLine(React, \"\", snapPos1, snapPos2, zoom, \"clip\".concat(directionType, \"bounds\").concat(i), \"guideline\", \"bounds\", \"bold\");\n          })), false));\n        }\n      });\n    }\n    return __spreadArray(__spreadArray([], __read(controls), false), __read(lines), false);\n  },\n  dragControlCondition: function (moveable, e) {\n    return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n  },\n  dragStart: function (moveable, e) {\n    var props = moveable.props;\n    var _a = props.dragWithClip,\n      dragWithClip = _a === void 0 ? true : _a;\n    if (dragWithClip) {\n      return false;\n    }\n    return this.dragControlStart(moveable, e);\n  },\n  drag: function (moveable, e) {\n    return this.dragControl(moveable, __assign(__assign({}, e), {\n      isDragTarget: true\n    }));\n  },\n  dragEnd: function (moveable, e) {\n    return this.dragControlEnd(moveable, e);\n  },\n  dragControlStart: function (moveable, e) {\n    var state = moveable.state;\n    var _a = moveable.props,\n      defaultClipPath = _a.defaultClipPath,\n      customClipPath = _a.customClipPath;\n    var target = state.target,\n      width = state.width,\n      height = state.height;\n    var inputTarget = e.inputEvent ? e.inputEvent.target : null;\n    var className = inputTarget && inputTarget.getAttribute(\"class\") || \"\";\n    var datas = e.datas;\n    var clipPath = getClipPath(target, width, height, defaultClipPath || \"inset\", customClipPath);\n    if (!clipPath) {\n      return false;\n    }\n    var clipText = clipPath.clipText,\n      type = clipPath.type,\n      poses = clipPath.poses;\n    var result = triggerEvent(moveable, \"onClipStart\", fillParams(moveable, e, {\n      clipType: type,\n      clipStyle: clipText,\n      poses: poses.map(function (pos) {\n        return pos.pos;\n      })\n    }));\n    if (result === false) {\n      datas.isClipStart = false;\n      return false;\n    }\n    datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n    datas.isLine = className.indexOf(\"clip-line\") > -1;\n    datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n    datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n    datas.clipPath = clipPath;\n    datas.isClipStart = true;\n    state.clipPathState = clipText;\n    setDragStart(moveable, e);\n    return true;\n  },\n  dragControl: function (moveable, e) {\n    var _a, _b, _c;\n    var datas = e.datas,\n      originalDatas = e.originalDatas,\n      isDragTarget = e.isDragTarget;\n    if (!datas.isClipStart) {\n      return false;\n    }\n    var _d = datas,\n      isControl = _d.isControl,\n      isLine = _d.isLine,\n      isArea = _d.isArea,\n      clipIndex = _d.clipIndex,\n      clipPath = _d.clipPath;\n    if (!clipPath) {\n      return false;\n    }\n    var props = getProps(moveable.props, \"clippable\");\n    var keepRatio = props.keepRatio;\n    var distX = 0;\n    var distY = 0;\n    var originalDraggable = originalDatas.draggable;\n    var originalDist = getDragDist(e);\n    if (isDragTarget && originalDraggable) {\n      _a = __read(originalDraggable.prevBeforeDist, 2), distX = _a[0], distY = _a[1];\n    } else {\n      _b = __read(originalDist, 2), distX = _b[0], distY = _b[1];\n    }\n    var firstDist = [distX, distY];\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height;\n    var isDragWithTarget = !isArea && !isControl && !isLine;\n    var clipType = clipPath.type,\n      clipPoses = clipPath.poses,\n      splitter = clipPath.splitter;\n    var poses = clipPoses.map(function (pos) {\n      return pos.pos;\n    });\n    if (isDragWithTarget) {\n      distX = -distX;\n      distY = -distY;\n    }\n    var isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n    var isRect = clipType === \"inset\" || clipType === \"rect\";\n    var dists = clipPoses.map(function () {\n      return [0, 0];\n    });\n    if (isControl && !isAll) {\n      var _e = clipPoses[clipIndex],\n        horizontal = _e.horizontal,\n        vertical = _e.vertical;\n      var dist = [distX * abs(horizontal), distY * abs(vertical)];\n      dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n    } else if (isAll) {\n      dists = poses.map(function () {\n        return [distX, distY];\n      });\n    }\n    var nextPoses = poses.map(function (pos, i) {\n      return plus(pos, dists[i]);\n    });\n    var guidePoses = __spreadArray([], __read(nextPoses), false);\n    state.snapBoundInfos = null;\n    var isCircle = clipPath.type === \"circle\";\n    var isEllipse = clipPath.type === \"ellipse\";\n    if (isCircle || isEllipse) {\n      var guideRect = getRect(nextPoses);\n      var ry = abs(guideRect.bottom - guideRect.top);\n      var rx = abs(isEllipse ? guideRect.right - guideRect.left : ry);\n      var bottom = nextPoses[0][1] + ry;\n      var left = nextPoses[0][0] - rx;\n      var right = nextPoses[0][0] + rx;\n      // right\n      if (isCircle) {\n        guidePoses.push([right, guideRect.bottom]);\n        dists.push([1, 0]);\n      }\n      // bottom\n      guidePoses.push([guideRect.left, bottom]);\n      dists.push([0, 1]);\n      // left\n      guidePoses.push([left, guideRect.bottom]);\n      dists.push([1, 0]);\n    }\n    var guidelines = getDefaultGuidelines((props.clipHorizontalGuidelines || []).map(function (v) {\n      return convertUnitSize(\"\".concat(v), height);\n    }), (props.clipVerticalGuidelines || []).map(function (v) {\n      return convertUnitSize(\"\".concat(v), width);\n    }), width, height);\n    var guideXPoses = [];\n    var guideYPoses = [];\n    if (isCircle || isEllipse) {\n      guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n      guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n    } else if (isRect) {\n      var rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n      var rectDists_1 = [dists[0], dists[2], dists[4], dists[6]];\n      guideXPoses = rectPoses.filter(function (_, i) {\n        return rectDists_1[i][0];\n      }).map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = rectPoses.filter(function (_, i) {\n        return rectDists_1[i][1];\n      }).map(function (pos) {\n        return pos[1];\n      });\n    } else {\n      guideXPoses = guidePoses.filter(function (_, i) {\n        return dists[i][0];\n      }).map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = guidePoses.filter(function (_, i) {\n        return dists[i][1];\n      }).map(function (pos) {\n        return pos[1];\n      });\n    }\n    var boundDelta = [0, 0];\n    var _f = checkSnapBounds(guidelines, props.clipTargetBounds && {\n        left: 0,\n        top: 0,\n        right: width,\n        bottom: height\n      }, guideXPoses, guideYPoses, 5, 5),\n      horizontalSnapInfo = _f.horizontal,\n      verticalSnapInfo = _f.vertical;\n    var snapOffsetY = horizontalSnapInfo.offset;\n    var snapOffsetX = verticalSnapInfo.offset;\n    if (horizontalSnapInfo.isBound) {\n      boundDelta[1] += snapOffsetY;\n    }\n    if (verticalSnapInfo.isBound) {\n      boundDelta[0] += snapOffsetX;\n    }\n    if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n      var guideRect = getRect(nextPoses);\n      var cy = guideRect.bottom - guideRect.top;\n      var cx = isEllipse ? guideRect.right - guideRect.left : cy;\n      var distSnapX = verticalSnapInfo.isBound ? abs(snapOffsetX) : verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX;\n      var distSnapY = horizontalSnapInfo.isBound ? abs(snapOffsetY) : horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY;\n      cx -= distSnapX;\n      cy -= distSnapY;\n      if (isCircle) {\n        cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n        cx = cy;\n      }\n      var center = guidePoses[0];\n      guidePoses[1][1] = center[1] - cy;\n      guidePoses[2][0] = center[0] + cx;\n      guidePoses[3][1] = center[1] + cy;\n      guidePoses[4][0] = center[0] - cx;\n    } else if (isRect && keepRatio && isControl) {\n      var _g = __read(getControlSize(clipPoses), 2),\n        width_1 = _g[0],\n        height_1 = _g[1];\n      var ratio = width_1 && height_1 ? width_1 / height_1 : 0;\n      var clipPose = clipPoses[clipIndex];\n      var direction = clipPose.direction || \"\";\n      var top_2 = guidePoses[1][1];\n      var bottom = guidePoses[5][1];\n      var left = guidePoses[7][0];\n      var right = guidePoses[3][0];\n      if (abs(snapOffsetY) <= abs(snapOffsetX)) {\n        snapOffsetY = sign(snapOffsetY) * abs(snapOffsetX) / ratio;\n      } else {\n        snapOffsetX = sign(snapOffsetX) * abs(snapOffsetY) * ratio;\n      }\n      if (direction.indexOf(\"w\") > -1) {\n        left -= snapOffsetX;\n      } else if (direction.indexOf(\"e\") > -1) {\n        right -= snapOffsetX;\n      } else {\n        left += snapOffsetX / 2;\n        right -= snapOffsetX / 2;\n      }\n      if (direction.indexOf(\"n\") > -1) {\n        top_2 -= snapOffsetY;\n      } else if (direction.indexOf(\"s\") > -1) {\n        bottom -= snapOffsetY;\n      } else {\n        top_2 += snapOffsetY / 2;\n        bottom -= snapOffsetY / 2;\n      }\n      var nextControlPoses_2 = getRectPoses(top_2, right, bottom, left);\n      guidePoses.forEach(function (pos, i) {\n        var _a;\n        _a = __read(nextControlPoses_2[i].pos, 2), pos[0] = _a[0], pos[1] = _a[1];\n      });\n    } else {\n      guidePoses.forEach(function (pos, j) {\n        var dist = dists[j];\n        if (dist[0]) {\n          pos[0] -= snapOffsetX;\n        }\n        if (dist[1]) {\n          pos[1] -= snapOffsetY;\n        }\n      });\n    }\n    var nextClipStyles = getClipStyles(moveable, clipPath, nextPoses);\n    var clipStyle = \"\".concat(clipType, \"(\").concat(nextClipStyles.join(splitter), \")\");\n    state.clipPathState = clipStyle;\n    if (isCircle || isEllipse) {\n      guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n      guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n    } else if (isRect) {\n      var rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n      guideXPoses = rectPoses.map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = rectPoses.map(function (pos) {\n        return pos[1];\n      });\n    } else {\n      guideXPoses = guidePoses.map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = guidePoses.map(function (pos) {\n        return pos[1];\n      });\n    }\n    state.snapBoundInfos = checkSnapBounds(guidelines, props.clipTargetBounds && {\n      left: 0,\n      top: 0,\n      right: width,\n      bottom: height\n    }, guideXPoses, guideYPoses, 1, 1);\n    if (originalDraggable) {\n      var is3d = state.is3d,\n        allMatrix = state.allMatrix;\n      var n = is3d ? 4 : 3;\n      var dragDist = boundDelta;\n      if (isDragTarget) {\n        dragDist = [firstDist[0] + boundDelta[0] - originalDist[0], firstDist[1] + boundDelta[1] - originalDist[1]];\n      }\n      originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n    }\n    triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n      clipEventType: \"changed\",\n      clipType: clipType,\n      poses: nextPoses,\n      clipStyle: clipStyle,\n      clipStyles: nextClipStyles,\n      distX: distX,\n      distY: distY\n    }, fillCSSObject((_c = {}, _c[clipType === \"rect\" ? \"clip\" : \"clipPath\"] = clipStyle, _c), e))));\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    this.unset(moveable);\n    var isDrag = e.isDrag,\n      datas = e.datas,\n      isDouble = e.isDouble;\n    var isLine = datas.isLine,\n      isClipStart = datas.isClipStart,\n      isControl = datas.isControl;\n    if (!isClipStart) {\n      return false;\n    }\n    triggerEvent(moveable, \"onClipEnd\", fillEndParams(moveable, e, {}));\n    if (isDouble) {\n      if (isControl) {\n        removeClipPath(moveable, e);\n      } else if (isLine) {\n        // add\n        addClipPath(moveable, e);\n      }\n    }\n    return isDouble || isDrag;\n  },\n  unset: function (moveable) {\n    moveable.state.clipPathState = \"\";\n    moveable.state.snapBoundInfos = null;\n  }\n};\n/**\r\n * Whether to clip the target. (default: false)\r\n * @name Moveable.Clippable#clippable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\r\n * @name Moveable.Clippable#defaultClipPath\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\r\n * @name Moveable.Clippable#clipRelative\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\r\n * @name Moveable.Clippable#customClipPath\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * When dragging the target, the clip also moves. (default: true)\r\n * @name Moveable.Clippable#dragWithClip\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * You can drag the clip by setting clipArea.\r\n * @name Moveable.Clippable#clipArea\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n* Whether the clip is bound to the target.\r\n* @name Moveable.Clippable#clipTargetBounds\r\n* @default false\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     clippable: true,\r\n*     defaultClipPath: \"inset\",\r\n*     customClipPath: \"\",\r\n*     clipRelative: false,\r\n*     clipArea: false,\r\n*     dragWithClip: true,\r\n*     clipTargetBounds: true,\r\n* });\r\n* moveable.on(\"clipStart\", e => {\r\n*     console.log(e);\r\n* }).on(\"clip\", e => {\r\n*     if (e.clipType === \"rect\") {\r\n*         e.target.style.clip = e.clipStyle;\r\n*     } else {\r\n*         e.target.style.clipPath = e.clipStyle;\r\n*     }\r\n* }).on(\"clipEnd\", e => {\r\n*     console.log(e);\r\n* });\r\n*/\n/**\r\n * Add clip guidelines in the vertical direction.\r\n * @name Moveable.Clippable#clipVerticalGuidelines\r\n * @default 0\r\n * @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     clippable: true,\r\n*     defaultClipPath: \"inset\",\r\n*     customClipPath: \"\",\r\n*     clipRelative: false,\r\n*     clipArea: false,\r\n*     dragWithClip: true,\r\n*     clipVerticalGuidelines: [0, 100, 200],\r\n*     clipHorizontalGuidelines: [0, 100, 200],\r\n*     clipSnapThreshold: 5,\r\n* });\r\n*/\n/**\r\n* Add clip guidelines in the horizontal direction.\r\n* @name Moveable.Clippable#clipHorizontalGuidelines\r\n* @default []\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     clippable: true,\r\n*     defaultClipPath: \"inset\",\r\n*     customClipPath: \"\",\r\n*     clipRelative: false,\r\n*     clipArea: false,\r\n*     dragWithClip: true,\r\n*     clipVerticalGuidelines: [0, 100, 200],\r\n*     clipHorizontalGuidelines: [0, 100, 200],\r\n*     clipSnapThreshold: 5,\r\n* });\r\n*/\n/**\r\n* istance value that can snap to clip guidelines.\r\n* @name Moveable.Clippable#clipSnapThreshold\r\n* @default 5\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     clippable: true,\r\n*     defaultClipPath: \"inset\",\r\n*     customClipPath: \"\",\r\n*     clipRelative: false,\r\n*     clipArea: false,\r\n*     dragWithClip: true,\r\n*     clipVerticalGuidelines: [0, 100, 200],\r\n*     clipHorizontalGuidelines: [0, 100, 200],\r\n*     clipSnapThreshold: 5,\r\n* });\r\n*/\n/**\r\n * When drag start the clip area or controls, the `clipStart` event is called.\r\n * @memberof Moveable.Clippable\r\n * @event clipStart\r\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * When drag the clip area or controls, the `clip` event is called.\r\n * @memberof Moveable.Clippable\r\n * @event clip\r\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * When drag end the clip area or controls, the `clipEnd` event is called.\r\n * @memberof Moveable.Clippable\r\n * @event clipEnd\r\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n\n/**\r\n * @namespace OriginDraggable\r\n * @memberof Moveable\r\n * @description Whether to drag origin (default: false)\r\n */\nvar OriginDraggable = {\n  name: \"originDraggable\",\n  props: [\"originDraggable\", \"originRelative\"],\n  events: [\"dragOriginStart\", \"dragOrigin\", \"dragOriginEnd\"],\n  css: [\":host[data-able-origindraggable] .control.origin {\\npointer-events: auto;\\n}\"],\n  dragControlCondition: function (_, e) {\n    if (e.isRequest) {\n      return e.requestAble === \"originDraggable\";\n    }\n    return hasClass(e.inputEvent.target, prefix(\"origin\"));\n  },\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas;\n    setDragStart(moveable, e);\n    var params = fillParams(moveable, e, {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    });\n    var result = triggerEvent(moveable, \"onDragOriginStart\", params);\n    datas.startOrigin = moveable.state.transformOrigin;\n    datas.startTargetOrigin = moveable.state.targetOrigin;\n    datas.prevOrigin = [0, 0];\n    datas.isDragOrigin = true;\n    if (result === false) {\n      datas.isDragOrigin = false;\n      return false;\n    }\n    return params;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest;\n    if (!datas.isDragOrigin) {\n      return false;\n    }\n    var _a = __read(getDragDist(e), 2),\n      distX = _a[0],\n      distY = _a[1];\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height,\n      offsetMatrix = state.offsetMatrix,\n      targetMatrix = state.targetMatrix,\n      is3d = state.is3d;\n    var _b = moveable.props.originRelative,\n      originRelative = _b === void 0 ? true : _b;\n    var n = is3d ? 4 : 3;\n    var dist = [distX, distY];\n    if (isRequest) {\n      var distOrigin = e.distOrigin;\n      if (distOrigin[0] || distOrigin[1]) {\n        dist = distOrigin;\n      }\n    }\n    var origin = plus(datas.startOrigin, dist);\n    var targetOrigin = plus(datas.startTargetOrigin, dist);\n    var delta = minus(dist, datas.prevOrigin);\n    var nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, origin, n);\n    var rect = moveable.getRect();\n    var nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n    var dragDelta = [rect.left - nextRect.left, rect.top - nextRect.top];\n    datas.prevOrigin = dist;\n    var transformOrigin = [convertCSSSize(targetOrigin[0], width, originRelative), convertCSSSize(targetOrigin[1], height, originRelative)].join(\" \");\n    var result = Draggable.drag(moveable, setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false));\n    var params = fillParams(moveable, e, __assign(__assign({\n      width: width,\n      height: height,\n      origin: origin,\n      dist: dist,\n      delta: delta,\n      transformOrigin: transformOrigin,\n      drag: result\n    }, fillCSSObject({\n      transformOrigin: transformOrigin,\n      transform: result.transform\n    }, e)), {\n      afterTransform: result.transform\n    }));\n    triggerEvent(moveable, \"onDragOrigin\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isDragOrigin) {\n      return false;\n    }\n    triggerEvent(moveable, \"onDragOriginEnd\", fillEndParams(moveable, e, {}));\n    return true;\n  },\n  dragGroupControlCondition: function (moveable, e) {\n    return this.dragControlCondition(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    return true;\n  },\n  dragGroupControl: function (moveable, e) {\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return false;\n    }\n    moveable.transformOrigin = params.transformOrigin;\n    return true;\n  },\n  /**\r\n  * @method Moveable.OriginDraggable#request\r\n  * @param {object} e - the OriginDraggable's request parameter\r\n  * @param {number} [e.x] - x position\r\n  * @param {number} [e.y] - y position\r\n  * @param {number} [e.deltaX] - x number to move\r\n  * @param {number} [e.deltaY] - y number to move\r\n  * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\r\n  * @param {array} [e.origin] - transform-origin position\r\n  * @param {number} [e.isInstant] - Whether to execute the request instantly\r\n  * @return {Moveable.Requester} Moveable Requester\r\n  * @example\r\n   * // Instantly Request (requestStart - request - requestEnd)\r\n  * // Use Relative Value\r\n  * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\r\n  * // Use Absolute Value\r\n  * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\r\n  * // Use Transform Value\r\n  * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\r\n  * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\r\n  * // requestStart\r\n  * const requester = moveable.request(\"originDraggable\");\r\n  *\r\n  * // request\r\n  * // Use Relative Value\r\n  * requester.request({ deltaX: 10, deltaY: 10 });\r\n  * requester.request({ deltaX: 10, deltaY: 10 });\r\n  * requester.request({ deltaX: 10, deltaY: 10 });\r\n  * // Use Absolute Value\r\n  * moveable.request(\"originDraggable\", { x: 200, y: 100 });\r\n  * moveable.request(\"originDraggable\", { x: 220, y: 100 });\r\n  * moveable.request(\"originDraggable\", { x: 240, y: 100 });\r\n  *\r\n  * // requestEnd\r\n  * requester.requestEnd();\r\n  */\n  request: function (moveable) {\n    var datas = {};\n    var rect = moveable.getRect();\n    var distX = 0;\n    var distY = 0;\n    var transformOrigin = rect.transformOrigin;\n    var distOrigin = [0, 0];\n    return {\n      isControl: true,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"deltaOrigin\" in e) {\n          distOrigin[0] += e.deltaOrigin[0];\n          distOrigin[1] += e.deltaOrigin[1];\n        } else if (\"origin\" in e) {\n          distOrigin[0] = e.origin[0] - transformOrigin[0];\n          distOrigin[1] = e.origin[1] - transformOrigin[1];\n        } else {\n          if (\"x\" in e) {\n            distX = e.x - rect.left;\n          } else if (\"deltaX\" in e) {\n            distX += e.deltaX;\n          }\n          if (\"y\" in e) {\n            distY = e.y - rect.top;\n          } else if (\"deltaY\" in e) {\n            distY += e.deltaY;\n          }\n        }\n        return {\n          datas: datas,\n          distX: distX,\n          distY: distY,\n          distOrigin: distOrigin\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\r\n * Whether to drag origin (default: false)\r\n * @name Moveable.OriginDraggable#originDraggable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     originDraggable: true,\r\n * });\r\n * let translate = [0, 0];\r\n * moveable.on(\"dragOriginStart\", e => {\r\n *     e.dragStart && e.dragStart.set(translate);\r\n * }).on(\"dragOrigin\", e => {\r\n *     translate = e.drag.beforeTranslate;\r\n *     e.target.style.cssText\r\n *         = `transform-origin: ${e.transformOrigin};`\r\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\r\n * }).on(\"dragOriginEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * % Can be used instead of the absolute px (default: true)\r\n * @name Moveable.OriginDraggable#originRelative\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     originDraggable: true,\r\n *     originRelative: false,\r\n * });\r\n * moveable.originRelative = true;\r\n */\n/**\r\n* When drag start the origin, the `dragOriginStart` event is called.\r\n* @memberof Moveable.OriginDraggable\r\n* @event dragOriginStart\r\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     originDraggable: true,\r\n* });\r\n* let translate = [0, 0];\r\n* moveable.on(\"dragOriginStart\", e => {\r\n*     e.dragStart && e.dragStart.set(translate);\r\n* }).on(\"dragOrigin\", e => {\r\n*     translate = e.drag.beforeTranslate;\r\n*     e.target.style.cssText\r\n*         = `transform-origin: ${e.transformOrigin};`\r\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\r\n* }).on(\"dragOriginEnd\", e => {\r\n*     console.log(e);\r\n* });\r\n*/\n/**\r\n* When drag the origin, the `dragOrigin` event is called.\r\n* @memberof Moveable.OriginDraggable\r\n* @event dragOrigin\r\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     originDraggable: true,\r\n* });\r\n* let translate = [0, 0];\r\n* moveable.on(\"dragOriginStart\", e => {\r\n*     e.dragStart && e.dragStart.set(translate);\r\n* }).on(\"dragOrigin\", e => {\r\n*     translate = e.drag.beforeTranslate;\r\n*     e.target.style.cssText\r\n*         = `transform-origin: ${e.transformOrigin};`\r\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\r\n* }).on(\"dragOriginEnd\", e => {\r\n*     console.log(e);\r\n* });\r\n*/\n/**\r\n* When drag end the origin, the `dragOriginEnd` event is called.\r\n* @memberof Moveable.OriginDraggable\r\n* @event dragOriginEnd\r\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     originDraggable: true,\r\n* });\r\n* let translate = [0, 0];\r\n* moveable.on(\"dragOriginStart\", e => {\r\n*     e.dragStart && e.dragStart.set(translate);\r\n* }).on(\"dragOrigin\", e => {\r\n*     translate = e.drag.beforeTranslate;\r\n*     e.target.style.cssText\r\n*         = `transform-origin: ${e.transformOrigin};`\r\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\r\n* }).on(\"dragOriginEnd\", e => {\r\n*     console.log(e);\r\n* });\r\n*/\n\nfunction addBorderRadiusByLine(controlPoses, lineIndex, distX, distY) {\n  // lineIndex\n  // 0 top\n  // 1 right\n  // 2 bottom\n  // 3 left\n  var horizontalsLength = controlPoses.filter(function (_a) {\n    var virtual = _a.virtual,\n      horizontal = _a.horizontal;\n    return horizontal && !virtual;\n  }).length;\n  var verticalsLength = controlPoses.filter(function (_a) {\n    var virtual = _a.virtual,\n      vertical = _a.vertical;\n    return vertical && !virtual;\n  }).length;\n  var controlIndex = -1;\n  //top\n  if (lineIndex === 0) {\n    if (horizontalsLength === 0) {\n      controlIndex = 0;\n    } else if (horizontalsLength === 1) {\n      controlIndex = 1;\n    }\n  }\n  // bottom\n  if (lineIndex === 2) {\n    if (horizontalsLength <= 2) {\n      controlIndex = 2;\n    } else if (horizontalsLength <= 3) {\n      controlIndex = 3;\n    }\n  }\n  // left\n  if (lineIndex === 3) {\n    if (verticalsLength === 0) {\n      controlIndex = 4;\n    } else if (verticalsLength < 4) {\n      controlIndex = 7;\n    }\n  }\n  // right\n  if (lineIndex === 1) {\n    if (verticalsLength <= 1) {\n      controlIndex = 5;\n    } else if (verticalsLength <= 2) {\n      controlIndex = 6;\n    }\n  }\n  if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n    return;\n  }\n  var controlPoseInfo = controlPoses[controlIndex];\n  addBorderRadius(controlPoses, controlIndex);\n  if (controlIndex < 4) {\n    controlPoseInfo.pos[0] = distX;\n  } else {\n    controlPoseInfo.pos[1] = distY;\n  }\n}\nfunction addBorderRadius(controlPoses, index) {\n  if (index < 4) {\n    controlPoses.slice(0, index + 1).forEach(function (info) {\n      info.virtual = false;\n    });\n  } else {\n    if (controlPoses[0].virtual) {\n      controlPoses[0].virtual = false;\n    }\n    controlPoses.slice(4, index + 1).forEach(function (info) {\n      info.virtual = false;\n    });\n  }\n}\nfunction removeBorderRadius(controlPoses, index) {\n  if (index < 4) {\n    controlPoses.slice(index, 4).forEach(function (info) {\n      info.virtual = true;\n    });\n  } else {\n    controlPoses.slice(index).forEach(function (info) {\n      info.virtual = true;\n    });\n  }\n}\nfunction getBorderRadius(borderRadius, width, height, minCounts, full) {\n  if (minCounts === void 0) {\n    minCounts = [0, 0];\n  }\n  var values = [];\n  if (!borderRadius || borderRadius === \"0px\") {\n    values = [];\n  } else {\n    values = splitSpace(borderRadius);\n  }\n  return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\nfunction triggerRoundEvent(moveable, e, dist, delta, nextPoses) {\n  var state = moveable.state;\n  var width = state.width,\n    height = state.height;\n  var _a = getRadiusStyles(nextPoses, moveable.props.roundRelative, width, height),\n    raws = _a.raws,\n    styles = _a.styles,\n    radiusPoses = _a.radiusPoses;\n  var _b = splitRadiusPoses(radiusPoses, raws),\n    horizontals = _b.horizontals,\n    verticals = _b.verticals;\n  var borderRadius = styles.join(\" \");\n  state.borderRadiusState = borderRadius;\n  var params = fillParams(moveable, e, __assign({\n    horizontals: horizontals,\n    verticals: verticals,\n    borderRadius: borderRadius,\n    width: width,\n    height: height,\n    delta: delta,\n    dist: dist\n  }, fillCSSObject({\n    borderRadius: borderRadius\n  }, e)));\n  triggerEvent(moveable, \"onRound\", params);\n  return params;\n}\nfunction getStyleBorderRadius(moveable) {\n  var _a, _b;\n  var style = moveable.getState().style;\n  var borderRadius = style.borderRadius || \"\";\n  if (!borderRadius && moveable.props.groupable) {\n    var firstMoveable = moveable.moveables[0];\n    var firstTarget = moveable.getTargets()[0];\n    if (firstTarget) {\n      if ((firstMoveable === null || firstMoveable === void 0 ? void 0 : firstMoveable.props.target) === firstTarget) {\n        borderRadius = (_b = (_a = moveable.moveables[0]) === null || _a === void 0 ? void 0 : _a.state.style.borderRadius) !== null && _b !== void 0 ? _b : \"\";\n        style.borderRadius = borderRadius;\n      } else {\n        borderRadius = getComputedStyle(firstTarget).borderRadius;\n        style.borderRadius = borderRadius;\n      }\n    }\n  }\n  return borderRadius;\n}\n/**\r\n * @namespace Moveable.Roundable\r\n * @description Whether to show and drag or double click border-radius\r\n */\nvar Roundable = {\n  name: \"roundable\",\n  props: [\"roundable\", \"roundRelative\", \"minRoundControls\", \"maxRoundControls\", \"roundClickable\", \"roundPadding\", \"isDisplayShadowRoundControls\"],\n  events: [\"roundStart\", \"round\", \"roundEnd\", \"roundGroupStart\", \"roundGroup\", \"roundGroupEnd\"],\n  css: [\".control.border-radius {\\nbackground: #d66;\\ncursor: pointer;\\nz-index: 3;\\n}\", \".control.border-radius.vertical {\\nbackground: #d6d;\\nz-index: 2;\\n}\", \".control.border-radius.virtual {\\nopacity: 0.5;\\nz-index: 1;\\n}\", \":host.round-line-clickable .line.direction {\\ncursor: pointer;\\n}\"],\n  className: function (moveable) {\n    var roundClickable = moveable.props.roundClickable;\n    return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n  },\n  requestStyle: function () {\n    return [\"borderRadius\"];\n  },\n  requestChildStyle: function () {\n    return [\"borderRadius\"];\n  },\n  render: function (moveable, React) {\n    var _a = moveable.getState(),\n      target = _a.target,\n      width = _a.width,\n      height = _a.height,\n      allMatrix = _a.allMatrix,\n      is3d = _a.is3d,\n      left = _a.left,\n      top = _a.top,\n      borderRadiusState = _a.borderRadiusState;\n    var _b = moveable.props,\n      _c = _b.minRoundControls,\n      minRoundControls = _c === void 0 ? [0, 0] : _c,\n      _d = _b.maxRoundControls,\n      maxRoundControls = _d === void 0 ? [4, 4] : _d,\n      zoom = _b.zoom,\n      _e = _b.roundPadding,\n      roundPadding = _e === void 0 ? 0 : _e,\n      isDisplayShadowRoundControls = _b.isDisplayShadowRoundControls,\n      groupable = _b.groupable;\n    if (!target) {\n      return null;\n    }\n    var borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\n    var n = is3d ? 4 : 3;\n    var radiusValues = getBorderRadius(borderRadius, width, height, minRoundControls, true);\n    if (!radiusValues) {\n      return null;\n    }\n    var verticalCount = 0;\n    var horizontalCount = 0;\n    var basePos = groupable ? [0, 0] : [left, top];\n    return radiusValues.map(function (v, i) {\n      var horizontal = v.horizontal;\n      var vertical = v.vertical;\n      var direction = v.direction || \"\";\n      var originalPos = __spreadArray([], __read(v.pos), false);\n      horizontalCount += Math.abs(horizontal);\n      verticalCount += Math.abs(vertical);\n      if (horizontal && direction.indexOf(\"n\") > -1) {\n        originalPos[1] -= roundPadding;\n      }\n      if (vertical && direction.indexOf(\"w\") > -1) {\n        originalPos[0] -= roundPadding;\n      }\n      if (horizontal && direction.indexOf(\"s\") > -1) {\n        originalPos[1] += roundPadding;\n      }\n      if (vertical && direction.indexOf(\"e\") > -1) {\n        originalPos[0] += roundPadding;\n      }\n      var pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\n      var isDisplayVerticalShadow = isDisplayShadowRoundControls && isDisplayShadowRoundControls !== \"horizontal\";\n      var isDisplay = v.vertical ? verticalCount <= maxRoundControls[1] && (isDisplayVerticalShadow || !v.virtual) : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n      return React.createElement(\"div\", {\n        key: \"borderRadiusControl\".concat(i),\n        className: prefix(\"control\", \"border-radius\", v.vertical ? \"vertical\" : \"\", v.virtual ? \"virtual\" : \"\"),\n        \"data-radius-index\": i,\n        style: {\n          display: isDisplay ? \"block\" : \"none\",\n          transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) scale(\").concat(zoom, \")\")\n        }\n      });\n    });\n  },\n  dragControlCondition: function (moveable, e) {\n    if (!e.inputEvent || e.isRequest) {\n      return false;\n    }\n    var className = e.inputEvent.target.getAttribute(\"class\") || \"\";\n    return className.indexOf(\"border-radius\") > -1 || className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n  },\n  dragGroupControlCondition: function (moveable, e) {\n    return this.dragControlCondition(moveable, e);\n  },\n  dragControlStart: function (moveable, e) {\n    var inputEvent = e.inputEvent,\n      datas = e.datas;\n    var inputTarget = inputEvent.target;\n    var className = inputTarget.getAttribute(\"class\") || \"\";\n    var isControl = className.indexOf(\"border-radius\") > -1;\n    var isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n    var controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n    var lineIndex = -1;\n    if (isLine) {\n      var indexAttr = inputTarget.getAttribute(\"data-line-key\") || \"\";\n      if (indexAttr) {\n        lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n        if (isNaN(lineIndex)) {\n          lineIndex = -1;\n        }\n      }\n    }\n    if (!isControl && !isLine) {\n      return false;\n    }\n    var params = fillParams(moveable, e, {});\n    var result = triggerEvent(moveable, \"onRoundStart\", params);\n    if (result === false) {\n      return false;\n    }\n    datas.lineIndex = lineIndex;\n    datas.controlIndex = controlIndex;\n    datas.isControl = isControl;\n    datas.isLine = isLine;\n    setDragStart(moveable, e);\n    var _a = moveable.props,\n      roundRelative = _a.roundRelative,\n      _b = _a.minRoundControls,\n      minRoundControls = _b === void 0 ? [0, 0] : _b;\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height;\n    datas.isRound = true;\n    datas.prevDist = [0, 0];\n    var borderRadius = getStyleBorderRadius(moveable);\n    var controlPoses = getBorderRadius(borderRadius || \"\", width, height, minRoundControls, true) || [];\n    datas.controlPoses = controlPoses;\n    state.borderRadiusState = getRadiusStyles(controlPoses, roundRelative, width, height).styles.join(\" \");\n    return params;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas;\n    var controlPoses = datas.controlPoses;\n    if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n      return false;\n    }\n    var index = datas.controlIndex;\n    var _a = __read(getDragDist(e), 2),\n      distX = _a[0],\n      distY = _a[1];\n    var dist = [distX, distY];\n    var delta = minus(dist, datas.prevDist);\n    var _b = moveable.props.maxRoundControls,\n      maxRoundControls = _b === void 0 ? [4, 4] : _b;\n    var _c = moveable.state,\n      width = _c.width,\n      height = _c.height;\n    var selectedControlPose = controlPoses[index];\n    var selectedVertical = selectedControlPose.vertical;\n    var selectedHorizontal = selectedControlPose.horizontal;\n    // 0: [0, 1, 2, 3] maxCount === 1\n    // 0: [0, 2] maxCount === 2\n    // 1: [1, 3] maxCount === 2\n    // 0: [0] maxCount === 3\n    // 1: [1, 3] maxCount === 3\n    var dists = controlPoses.map(function (pose) {\n      var horizontal = pose.horizontal,\n        vertical = pose.vertical;\n      var poseDist = [horizontal * selectedHorizontal * dist[0], vertical * selectedVertical * dist[1]];\n      if (horizontal) {\n        if (maxRoundControls[0] === 1) {\n          return poseDist;\n        } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n          return poseDist;\n        }\n      } else if (maxRoundControls[1] === 0) {\n        poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n        return poseDist;\n      } else if (selectedVertical) {\n        if (maxRoundControls[1] === 1) {\n          return poseDist;\n        } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n          return poseDist;\n        }\n      }\n      return [0, 0];\n    });\n    dists[index] = dist;\n    var nextPoses = controlPoses.map(function (info, i) {\n      return __assign(__assign({}, info), {\n        pos: plus(info.pos, dists[i])\n      });\n    });\n    if (index < 4) {\n      nextPoses.slice(0, index + 1).forEach(function (info) {\n        info.virtual = false;\n      });\n    } else {\n      nextPoses.slice(4, index + 1).forEach(function (info) {\n        info.virtual = false;\n      });\n    }\n    datas.prevDist = [distX, distY];\n    return triggerRoundEvent(moveable, e, dist, delta, nextPoses);\n  },\n  dragControlEnd: function (moveable, e) {\n    var state = moveable.state;\n    state.borderRadiusState = \"\";\n    var datas = e.datas,\n      isDouble = e.isDouble;\n    if (!datas.isRound) {\n      return false;\n    }\n    var isControl = datas.isControl,\n      controlIndex = datas.controlIndex,\n      isLine = datas.isLine,\n      lineIndex = datas.lineIndex;\n    var controlPoses = datas.controlPoses;\n    var length = controlPoses.filter(function (_a) {\n      var virtual = _a.virtual;\n      return virtual;\n    }).length;\n    var _a = moveable.props.roundClickable,\n      roundClickable = _a === void 0 ? true : _a;\n    if (isDouble && roundClickable) {\n      if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n        removeBorderRadius(controlPoses, controlIndex);\n      } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n        var _b = __read(calculatePointerDist(moveable, e), 2),\n          distX = _b[0],\n          distY = _b[1];\n        addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n      }\n      if (length !== controlPoses.filter(function (_a) {\n        var virtual = _a.virtual;\n        return virtual;\n      }).length) {\n        triggerRoundEvent(moveable, e, [0, 0], [0, 0], controlPoses);\n      }\n    }\n    var params = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onRoundEnd\", params);\n    state.borderRadiusState = \"\";\n    return params;\n  },\n  dragGroupControlStart: function (moveable, e) {\n    var result = this.dragControlStart(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        return __assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i]\n        });\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\n    return result;\n  },\n  dragGroupControl: function (moveable, e) {\n    var result = this.dragControl(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        return __assign(__assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i]\n        }), fillCSSObject({\n          borderRadius: result.borderRadius\n        }, ev));\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    catchEvent(moveable, \"onRound\", function (parentEvent) {\n      var nextParams = __assign({\n        targets: moveable.props.targets,\n        events: events.map(function (ev, i) {\n          return __assign(__assign(__assign({}, ev), {\n            target: targets[i],\n            moveable: moveables[i],\n            currentTarget: moveables[i]\n          }), fillCSSObject({\n            borderRadius: parentEvent.borderRadius\n          }, ev));\n        })\n      }, parentEvent);\n      triggerEvent(moveable, \"onRoundGroup\", nextParams);\n    });\n    var result = this.dragControlEnd(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        var _a;\n        return __assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i],\n          lastEvent: (_a = ev.datas) === null || _a === void 0 ? void 0 : _a.lastEvent\n        });\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\n    return nextParams;\n  },\n  unset: function (moveable) {\n    moveable.state.borderRadiusState = \"\";\n  }\n};\n/**\r\n * Whether to show and drag or double click border-radius, (default: false)\r\n * @name Moveable.Roundable#roundable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * % Can be used instead of the absolute px\r\n * @name Moveable.Roundable#roundRelative\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\r\n * @name Moveable.Roundable#minRoundControls\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n *     minRoundControls: [0, 0],\r\n * });\r\n * moveable.minRoundControls = [1, 0];\r\n */\n/**\r\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\r\n * @name Moveable.Roundable#maxRoundControls\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n *     maxRoundControls: [4, 4],\r\n * });\r\n * moveable.maxRoundControls = [1, 0];\r\n */\n/**\r\n * Whether you can add/delete round controls by double-clicking a line or control.\r\n * @name Moveable.Roundable#roundClickable\r\n * @default true\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n *     roundClickable: true,\r\n * });\r\n * moveable.roundClickable = false;\r\n */\n/**\r\n * Whether to show a round control that does not actually exist as a shadow\r\n * @name Moveable.Roundable#isDisplayShadowRoundControls\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     isDisplayShadowRoundControls: false,\r\n * });\r\n * moveable.isDisplayShadowRoundControls = true;\r\n */\n/**\r\n * The padding value of the position of the round control\r\n * @name Moveable.Roundable#roundPadding\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundPadding: 0,\r\n * });\r\n * moveable.roundPadding = 15;\r\n */\n/**\r\n * When drag start the clip area or controls, the `roundStart` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundStart\r\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * When drag or double click the border area or controls, the `round` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event round\r\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\r\n * @example\r\n  * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * When drag end the border area or controls, the `roundEnd` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundEnd\r\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\r\n * @example\r\n  * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundGroupStart\r\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     targets: [target1, target2, target3],\r\n *     roundable: true,\r\n * });\r\n * moveable.on(\"roundGroupStart\", e => {\r\n *     console.log(e.targets);\r\n * }).on(\"roundGroup\", e => {\r\n *   e.events.forEach(ev => {\r\n *       ev.target.style.cssText += ev.cssText;\r\n *   });\r\n * }).on(\"roundGroupEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * When drag or double click the border area or controls, the `roundGroup` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundGroup\r\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     targets: [target1, target2, target3],\r\n *     roundable: true,\r\n * });\r\n * moveable.on(\"roundGroupStart\", e => {\r\n *     console.log(e.targets);\r\n * }).on(\"roundGroup\", e => {\r\n *   e.events.forEach(ev => {\r\n *       ev.target.style.cssText += ev.cssText;\r\n *   });\r\n * }).on(\"roundGroupEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n/**\r\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundGroupEnd\r\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     targets: [target1, target2, target3],\r\n *     roundable: true,\r\n * });\r\n * moveable.on(\"roundGroupStart\", e => {\r\n *     console.log(e.targets);\r\n * }).on(\"roundGroup\", e => {\r\n *     e.events.forEach(ev => {\r\n *         ev.target.style.cssText += ev.cssText;\r\n *     });\r\n * }).on(\"roundGroupEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\n\nfunction isIdentityMatrix(matrix, is3d) {\n  var n = is3d ? 4 : 3;\n  var identityMatrix = createIdentityMatrix(n);\n  var value = \"matrix\".concat(is3d ? \"3d\" : \"\", \"(\").concat(identityMatrix.join(\",\"), \")\");\n  return matrix === value || matrix === \"matrix(1,0,0,1,0,0)\";\n}\nvar BeforeRenderable = {\n  isPinch: true,\n  name: \"beforeRenderable\",\n  props: [],\n  events: [\"beforeRenderStart\", \"beforeRender\", \"beforeRenderEnd\", \"beforeRenderGroupStart\", \"beforeRenderGroup\", \"beforeRenderGroupEnd\"],\n  dragRelation: \"weak\",\n  setTransform: function (moveable, e) {\n    var _a = moveable.state,\n      is3d = _a.is3d,\n      targetMatrix = _a.targetMatrix,\n      inlineTransform = _a.inlineTransform;\n    var cssMatrix = is3d ? \"matrix3d(\".concat(targetMatrix.join(\",\"), \")\") : \"matrix(\".concat(convertMatrixtoCSS(targetMatrix, true), \")\");\n    var startTransform = !inlineTransform || inlineTransform === \"none\" ? cssMatrix : inlineTransform;\n    e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n  },\n  resetStyle: function (e) {\n    var datas = e.datas;\n    datas.nextStyle = {};\n    datas.nextTransforms = e.datas.startTransforms;\n    datas.nextTransformAppendedIndexes = [];\n  },\n  fillDragStartParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      setTransform: function (transform) {\n        e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n      },\n      isPinch: !!e.isPinch\n    });\n  },\n  fillDragParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    });\n  },\n  dragStart: function (moveable, e) {\n    this.setTransform(moveable, e);\n    this.resetStyle(e);\n    triggerEvent(moveable, \"onBeforeRenderStart\", this.fillDragStartParams(moveable, e));\n  },\n  drag: function (moveable, e) {\n    if (!e.datas.startTransforms) {\n      this.setTransform(moveable, e);\n    }\n    this.resetStyle(e);\n    triggerEvent(moveable, \"onBeforeRender\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    }));\n  },\n  dragEnd: function (moveable, e) {\n    if (!e.datas.startTransforms) {\n      this.setTransform(moveable, e);\n      this.resetStyle(e);\n    }\n    triggerEvent(moveable, \"onBeforeRenderEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag\n    }));\n  },\n  dragGroupStart: function (moveable, e) {\n    var _this = this;\n    this.dragStart(moveable, e);\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      _this.setTransform(childMoveable, childEvent);\n      _this.resetStyle(childEvent);\n      return _this.fillDragStartParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onBeforeRenderGroupStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      setTransform: function () {},\n      events: params\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    var _this = this;\n    this.drag(moveable, e);\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      _this.resetStyle(childEvent);\n      return _this.fillDragParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onBeforeRenderGroup\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      events: params\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n    triggerEvent(moveable, \"onBeforeRenderGroupEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      targets: moveable.props.targets\n    }));\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragGroupStart(moveable, e);\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.dragGroup(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return this.dragGroupEnd(moveable, e);\n  }\n};\nvar Renderable = {\n  name: \"renderable\",\n  props: [],\n  events: [\"renderStart\", \"render\", \"renderEnd\", \"renderGroupStart\", \"renderGroup\", \"renderGroupEnd\"],\n  dragRelation: \"weak\",\n  dragStart: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    }));\n  },\n  drag: function (moveable, e) {\n    triggerEvent(moveable, \"onRender\", this.fillDragParams(moveable, e));\n  },\n  dragAfter: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragEnd: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderEnd\", this.fillDragEndParams(moveable, e));\n  },\n  dragGroupStart: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderGroupStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    var _this = this;\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      return _this.fillDragParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onRenderGroup\", fillParams(moveable, e, __assign(__assign({\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      transform: getNextTransformText(e),\n      transformObject: {}\n    }, fillCSSObject(getNextStyle(e))), {\n      events: params\n    })));\n  },\n  dragGroupEnd: function (moveable, e) {\n    var _this = this;\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      return _this.fillDragEndParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onRenderGroupEnd\", fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      targets: moveable.props.targets,\n      events: params,\n      transformObject: {},\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e)))));\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlAfter: function (moveable, e) {\n    return this.dragAfter(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragGroupStart(moveable, e);\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.dragGroup(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return this.dragGroupEnd(moveable, e);\n  },\n  fillDragParams: function (moveable, e) {\n    var transformObject = {};\n    parse(getNextTransforms(e) || []).forEach(function (matrixInfo) {\n      transformObject[matrixInfo.name] = matrixInfo.functionValue;\n    });\n    return fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      transformObject: transformObject,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e))));\n  },\n  fillDragEndParams: function (moveable, e) {\n    var transformObject = {};\n    parse(getNextTransforms(e) || []).forEach(function (matrixInfo) {\n      transformObject[matrixInfo.name] = matrixInfo.functionValue;\n    });\n    return fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      transformObject: transformObject,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e))));\n  }\n};\nfunction triggerAble(moveable, moveableAbles, eventOperations, eventAffix, eventType, e, requestInstant) {\n  // pre setting\n  e.clientDistX = e.distX;\n  e.clientDistY = e.distY;\n  var isStart = eventType === \"Start\";\n  var isEnd = eventType === \"End\";\n  var isAfter = eventType === \"After\";\n  var target = moveable.state.target;\n  var isRequest = e.isRequest;\n  var isControl = eventAffix.indexOf(\"Control\") > -1;\n  if (!target || isStart && isControl && !isRequest && moveable.areaElement === e.inputEvent.target) {\n    return false;\n  }\n  var ables = __spreadArray([], __read(moveableAbles), false);\n  if (isRequest) {\n    var requestAble_1 = e.requestAble;\n    if (!ables.some(function (able) {\n      return able.name === requestAble_1;\n    })) {\n      ables.push.apply(ables, __spreadArray([], __read(moveable.props.ables.filter(function (able) {\n        return able.name === requestAble_1;\n      })), false));\n    }\n  }\n  if (!ables.length || ables.every(function (able) {\n    return able.dragRelation;\n  })) {\n    return false;\n  }\n  // \"drag\" \"Control\" \"After\"\n  var inputEvent = e.inputEvent;\n  var inputTarget;\n  if (isEnd && inputEvent) {\n    inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n  }\n  var isDragStop = false;\n  var stop = function () {\n    var _a;\n    isDragStop = true;\n    (_a = e.stop) === null || _a === void 0 ? void 0 : _a.call(e);\n  };\n  var isFirstStart = isStart && (!moveable.targetGesto || !moveable.controlGesto || !moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag());\n  if (isFirstStart) {\n    moveable.updateRect(eventType, true, false);\n  }\n  // trigger ables\n  var datas = e.datas;\n  var gestoType = isControl ? \"controlGesto\" : \"targetGesto\";\n  var prevGesto = moveable[gestoType];\n  var trigger = function (able, eventName, conditionName) {\n    if (!(eventName in able) || prevGesto !== moveable[gestoType]) {\n      return false;\n    }\n    var ableName = able.name;\n    var nextDatas = datas[ableName] || (datas[ableName] = {});\n    if (isStart) {\n      nextDatas.isEventStart = !conditionName || !able[conditionName] || able[conditionName](moveable, e);\n    }\n    if (!nextDatas.isEventStart) {\n      return false;\n    }\n    var result = able[eventName](moveable, __assign(__assign({}, e), {\n      stop: stop,\n      datas: nextDatas,\n      originalDatas: datas,\n      inputTarget: inputTarget\n    }));\n    moveable._emitter.off();\n    if (isStart && result === false) {\n      nextDatas.isEventStart = false;\n    }\n    return result;\n  };\n  // unset ables for first drag start\n  if (isFirstStart) {\n    ables.forEach(function (able) {\n      able.unset && able.unset(moveable);\n    });\n  }\n  // BeforeRenderable\n  trigger(BeforeRenderable, \"drag\".concat(eventAffix).concat(eventType));\n  var forceEndedCount = 0;\n  var updatedCount = 0;\n  eventOperations.forEach(function (eventOperation) {\n    if (isDragStop) {\n      return false;\n    }\n    var eventName = \"\".concat(eventOperation).concat(eventAffix).concat(eventType);\n    var conditionName = \"\".concat(eventOperation).concat(eventAffix, \"Condition\");\n    if (eventType === \"\" && !isRequest) {\n      // Convert distX, distY\n      convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    var eventAbles = ables.filter(function (able) {\n      return able[eventName];\n    });\n    eventAbles = eventAbles.filter(function (able, i) {\n      return able.name && eventAbles.indexOf(able) === i;\n    });\n    var results = eventAbles.filter(function (able) {\n      return trigger(able, eventName, conditionName);\n    });\n    var isUpdate = results.length;\n    // end ables\n    if (isDragStop) {\n      ++forceEndedCount;\n    }\n    if (isUpdate) {\n      ++updatedCount;\n    }\n    if (!isDragStop && isStart && eventAbles.length && !isUpdate) {\n      forceEndedCount += eventAbles.filter(function (able) {\n        var ableName = able.name;\n        var nextDatas = datas[ableName];\n        if (nextDatas.isEventStart) {\n          if (able.dragRelation === \"strong\") {\n            return false;\n          }\n          // stop drag\n          return true;\n        }\n        // pre stop drag\n        return false;\n      }).length ? 1 : 0;\n    }\n  });\n  if (!isAfter || updatedCount) {\n    trigger(Renderable, \"drag\".concat(eventAffix).concat(eventType));\n  }\n  // stop gesto condition\n  var isForceEnd = prevGesto !== moveable[gestoType] || forceEndedCount === eventOperations.length;\n  if (isEnd || isDragStop || isForceEnd) {\n    moveable.state.gestos = {};\n    if (moveable.moveables) {\n      moveable.moveables.forEach(function (childMoveable) {\n        childMoveable.state.gestos = {};\n      });\n    }\n    ables.forEach(function (able) {\n      able.unset && able.unset(moveable);\n    });\n  }\n  if (isStart && !isForceEnd && !isRequest && updatedCount && moveable.props.preventDefault) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n  }\n  if (moveable.isUnmounted || isForceEnd) {\n    return false;\n  }\n  if (!isStart && updatedCount && !requestInstant || isEnd) {\n    var flushSync = moveable.props.flushSync || defaultSync;\n    flushSync(function () {\n      moveable.updateRect(isEnd ? eventType : \"\", true, false);\n      moveable.forceUpdate();\n    });\n  }\n  if (!isStart && !isEnd && !isAfter && updatedCount && !requestInstant) {\n    triggerAble(moveable, moveableAbles, eventOperations, eventAffix, eventType + \"After\", e);\n  }\n  return true;\n}\nfunction checkMoveableTarget(moveable, isControl) {\n  return function (e, target) {\n    var _a;\n    if (target === void 0) {\n      target = e.inputEvent.target;\n    }\n    var eventTarget = target;\n    var areaElement = moveable.areaElement;\n    var dragTargetElement = moveable._dragTarget;\n    if (!dragTargetElement || !isControl && ((_a = moveable.controlGesto) === null || _a === void 0 ? void 0 : _a.isFlag())) {\n      return false;\n    }\n    return eventTarget === dragTargetElement || dragTargetElement.contains(eventTarget) || eventTarget === areaElement || !moveable.isMoveableElement(eventTarget) && !moveable.controlBox.contains(eventTarget) || hasClass(eventTarget, \"moveable-area\") || hasClass(eventTarget, \"moveable-padding\") || hasClass(eventTarget, \"moveable-edgeDraggable\");\n  };\n}\nfunction getTargetAbleGesto(moveable, moveableTarget, eventAffix) {\n  var controlBox = moveable.controlBox;\n  var targets = [];\n  var props = moveable.props;\n  var dragArea = props.dragArea;\n  var target = moveable.state.target;\n  var dragTarget = props.dragTarget;\n  targets.push(controlBox);\n  if (!dragArea || dragTarget) {\n    targets.push(moveableTarget);\n  }\n  if (!dragArea && dragTarget && target && moveableTarget !== target && props.dragTargetSelf) {\n    targets.push(target);\n  }\n  var checkTarget = checkMoveableTarget(moveable);\n  return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n    dragStart: checkTarget,\n    pinchStart: checkTarget\n  });\n}\nfunction getControlAbleGesto(moveable, eventAffix) {\n  var controlBox = moveable.controlBox;\n  var targets = [];\n  targets.push(controlBox);\n  var checkTarget = checkMoveableTarget(moveable, true);\n  var checkControlTarget = function (e, target) {\n    if (target === void 0) {\n      target = e.inputEvent.target;\n    }\n    if (target === controlBox) {\n      return true;\n    }\n    var result = checkTarget(e, target);\n    return !result;\n  };\n  return getAbleGesto(moveable, targets, \"controlAbles\", eventAffix, {\n    dragStart: checkControlTarget,\n    pinchStart: checkControlTarget\n  });\n}\nfunction getAbleGesto(moveable, target, ableType, eventAffix, conditionFunctions) {\n  if (conditionFunctions === void 0) {\n    conditionFunctions = {};\n  }\n  var isTargetAbles = ableType === \"targetAbles\";\n  var _a = moveable.props,\n    pinchOutside = _a.pinchOutside,\n    pinchThreshold = _a.pinchThreshold,\n    preventClickEventOnDrag = _a.preventClickEventOnDrag,\n    preventClickDefault = _a.preventClickDefault,\n    checkInput = _a.checkInput,\n    dragFocusedInput = _a.dragFocusedInput,\n    _b = _a.preventDefault,\n    preventDefault = _b === void 0 ? true : _b,\n    _c = _a.preventRightClick,\n    preventRightClick = _c === void 0 ? true : _c,\n    _d = _a.preventWheelClick,\n    preventWheelClick = _d === void 0 ? true : _d,\n    dragContaienrOption = _a.dragContainer;\n  var dragContainer = getRefTarget(dragContaienrOption, true);\n  var options = {\n    preventDefault: preventDefault,\n    preventRightClick: preventRightClick,\n    preventWheelClick: preventWheelClick,\n    container: dragContainer || getWindow(moveable.getControlBoxElement()),\n    pinchThreshold: pinchThreshold,\n    pinchOutside: pinchOutside,\n    preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n    preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n    preventClickEventByCondition: isTargetAbles ? null : function (e) {\n      return moveable.controlBox.contains(e.target);\n    },\n    checkInput: isTargetAbles ? checkInput : false,\n    dragFocusedInput: dragFocusedInput\n  };\n  var gesto = new Gesto(target, options);\n  var isControl = eventAffix === \"Control\";\n  [\"drag\", \"pinch\"].forEach(function (eventOperation) {\n    [\"Start\", \"\", \"End\"].forEach(function (eventType) {\n      gesto.on(\"\".concat(eventOperation).concat(eventType), function (e) {\n        var _a;\n        var eventName = e.eventType;\n        var isPinchScheduled = eventOperation === \"drag\" && e.isPinch;\n        if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n          e.stop();\n          return;\n        }\n        if (isPinchScheduled) {\n          return;\n        }\n        var eventOperations = eventOperation === \"drag\" ? [eventOperation] : [\"drag\", eventOperation];\n        var moveableAbles = __spreadArray([], __read(moveable[ableType]), false);\n        var result = triggerAble(moveable, moveableAbles, eventOperations, eventAffix, eventType, e);\n        if (!result) {\n          e.stop();\n        } else if (moveable.props.stopPropagation || eventType === \"Start\" && isControl) {\n          (_a = e === null || e === void 0 ? void 0 : e.inputEvent) === null || _a === void 0 ? void 0 : _a.stopPropagation();\n        }\n      });\n    });\n  });\n  return gesto;\n}\nvar EventManager = /*#__PURE__*/function () {\n  function EventManager(target, moveable, eventName) {\n    var _this = this;\n    this.target = target;\n    this.moveable = moveable;\n    this.eventName = eventName;\n    this.ables = [];\n    this._onEvent = function (e) {\n      var eventName = _this.eventName;\n      var moveable = _this.moveable;\n      if (moveable.state.disableNativeEvent) {\n        return;\n      }\n      _this.ables.forEach(function (able) {\n        able[eventName](moveable, {\n          inputEvent: e\n        });\n      });\n    };\n    target.addEventListener(eventName.toLowerCase(), this._onEvent);\n  }\n  EventManager.prototype.setAbles = function (ables) {\n    this.ables = ables;\n  };\n  EventManager.prototype.destroy = function () {\n    this.target.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n    this.target = null;\n    this.moveable = null;\n  };\n  return EventManager;\n}();\nfunction calculateMatrixStack(target, container, rootContainer, isAbsolute3d) {\n  var _a;\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  var _b = getMatrixStackInfo(target, container),\n    matrixes = _b.matrixes,\n    is3d = _b.is3d,\n    prevTargetMatrix = _b.targetMatrix,\n    transformOrigin = _b.transformOrigin,\n    targetOrigin = _b.targetOrigin,\n    offsetContainer = _b.offsetContainer,\n    hasFixed = _b.hasFixed,\n    containerZoom = _b.zoom; // prevMatrix\n  var _c = getCachedMatrixContainerInfo(offsetContainer, rootContainer),\n    rootMatrixes = _c.matrixes,\n    isRoot3d = _c.is3d,\n    offsetRootContainer = _c.offsetContainer,\n    rootZoom = _c.zoom; // prevRootMatrix\n  // if (rootContainer === document.body) {\n  //     console.log(offsetContainer, rootContainer, rootMatrixes);\n  // }\n  var isNext3d = isAbsolute3d || isRoot3d || is3d;\n  var n = isNext3d ? 4 : 3;\n  var isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n  var targetMatrix = prevTargetMatrix;\n  // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n  // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n  // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n  var allMatrix = createIdentityMatrix(n);\n  var rootMatrix = createIdentityMatrix(n);\n  var beforeMatrix = createIdentityMatrix(n);\n  var offsetMatrix = createIdentityMatrix(n);\n  var length = matrixes.length;\n  var nextRootMatrixes = rootMatrixes.map(function (info) {\n    return __assign(__assign({}, info), {\n      matrix: info.matrix ? __spreadArray([], __read(info.matrix), false) : undefined\n    });\n  }).reverse();\n  matrixes.reverse();\n  if (!is3d && isNext3d) {\n    targetMatrix = convertDimension(targetMatrix, 3, 4);\n    convert3DMatrixes(matrixes);\n  }\n  if (!isRoot3d && isNext3d) {\n    convert3DMatrixes(nextRootMatrixes);\n  }\n  // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n  // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n  // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n  // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n  nextRootMatrixes.forEach(function (info) {\n    rootMatrix = multiply(rootMatrix, info.matrix, n);\n  });\n  var originalRootContainer = rootContainer || getDocumentBody(target);\n  var endContainer = ((_a = nextRootMatrixes[0]) === null || _a === void 0 ? void 0 : _a.target) || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n  var rootMatrixBeforeOffset = nextRootMatrixes.slice(1).reduce(function (matrix, info) {\n    return multiply(matrix, info.matrix, n);\n  }, createIdentityMatrix(n));\n  matrixes.forEach(function (info, i) {\n    if (length - 2 === i) {\n      // length - 3\n      beforeMatrix = allMatrix.slice();\n    }\n    if (length - 1 === i) {\n      // length - 2\n      offsetMatrix = allMatrix.slice();\n    }\n    // calculate for SVGElement\n    if (!info.matrix) {\n      var nextInfo = matrixes[i + 1];\n      var offset = getSVGOffset(info, nextInfo, endContainer, n, multiply(rootMatrixBeforeOffset, allMatrix, n));\n      info.matrix = createOriginMatrix(offset, n);\n    }\n    allMatrix = multiply(allMatrix, info.matrix, n);\n  });\n  var isMatrix3d = !isSVGGraphicElement && is3d;\n  if (!targetMatrix) {\n    targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n  }\n  var targetTransform = makeMatrixCSS(isSVGGraphicElement && targetMatrix.length === 16 ? convertDimension(targetMatrix, 4, 3) : targetMatrix, isMatrix3d);\n  var originalRootMatrix = rootMatrix;\n  rootMatrix = ignoreDimension(rootMatrix, n, n);\n  return {\n    hasZoom: containerZoom !== 1 || rootZoom !== 1,\n    hasFixed: hasFixed,\n    matrixes: matrixes,\n    rootMatrix: rootMatrix,\n    originalRootMatrix: originalRootMatrix,\n    beforeMatrix: beforeMatrix,\n    offsetMatrix: offsetMatrix,\n    allMatrix: allMatrix,\n    targetMatrix: targetMatrix,\n    targetTransform: targetTransform,\n    inlineTransform: target.style.transform,\n    transformOrigin: transformOrigin,\n    targetOrigin: targetOrigin,\n    is3d: isNext3d,\n    offsetContainer: offsetContainer,\n    offsetRootContainer: offsetRootContainer\n  };\n}\nfunction calculateElementInfo(target, container, rootContainer, isAbsolute3d) {\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  var width = 0;\n  var height = 0;\n  var rotation = 0;\n  var allResult = {};\n  var sizes = getSize(target);\n  if (target) {\n    width = sizes.offsetWidth;\n    height = sizes.offsetHeight;\n  }\n  if (target) {\n    var result = calculateMatrixStack(target, container, rootContainer, isAbsolute3d);\n    var position = calculateElementPosition(result.allMatrix, result.transformOrigin, width, height);\n    allResult = __assign(__assign({}, result), position);\n    var rotationPosition = calculateElementPosition(result.allMatrix, [50, 50], 100, 100);\n    rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n  }\n  var n = isAbsolute3d ? 4 : 3;\n  return __assign(__assign(__assign({\n    hasZoom: false,\n    width: width,\n    height: height,\n    rotation: rotation\n  }, sizes), {\n    originalRootMatrix: createIdentityMatrix(n),\n    rootMatrix: createIdentityMatrix(n),\n    beforeMatrix: createIdentityMatrix(n),\n    offsetMatrix: createIdentityMatrix(n),\n    allMatrix: createIdentityMatrix(n),\n    targetMatrix: createIdentityMatrix(n),\n    targetTransform: \"\",\n    inlineTransform: \"\",\n    transformOrigin: [0, 0],\n    targetOrigin: [0, 0],\n    is3d: !!isAbsolute3d,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    origin: [0, 0],\n    pos1: [0, 0],\n    pos2: [0, 0],\n    pos3: [0, 0],\n    pos4: [0, 0],\n    direction: 1,\n    hasFixed: false,\n    offsetContainer: null,\n    offsetRootContainer: null,\n    matrixes: []\n  }), allResult);\n}\nfunction getElementInfo(target, container, rootContainer) {\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  return calculateElementInfo(target, container, rootContainer, true);\n}\nfunction getMoveableTargetInfo(moveableElement, target, container, parentContainer, rootContainer, requestStyles) {\n  if (requestStyles === void 0) {\n    requestStyles = [];\n  }\n  var beforeDirection = 1;\n  var beforeOrigin = [0, 0];\n  var targetClientRect = resetClientRect();\n  var moveableClientRect = resetClientRect();\n  var containerClientRect = resetClientRect();\n  var rootContainerClientRect = resetClientRect();\n  var offsetDelta = [0, 0];\n  var style = {};\n  var result = calculateElementInfo(target, container, rootContainer, true);\n  if (target) {\n    var getStyle_1 = getCachedStyle(target);\n    requestStyles.forEach(function (name) {\n      style[name] = getStyle_1(name);\n    });\n    var n = result.is3d ? 4 : 3;\n    var beforePosition = calculateElementPosition(result.offsetMatrix, plus(result.transformOrigin, getOrigin(result.targetMatrix, n)), result.width, result.height);\n    beforeDirection = beforePosition.direction;\n    beforeOrigin = plus(beforePosition.origin, [beforePosition.left - result.left, beforePosition.top - result.top]);\n    rootContainerClientRect = getClientRect(result.offsetRootContainer);\n    var offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent || result.offsetRootContainer;\n    if (result.hasZoom) {\n      var absoluteTargetPosition = calculateElementPosition(multiply(result.originalRootMatrix, result.allMatrix), result.transformOrigin, result.width, result.height);\n      var absoluteContainerPosition = calculateElementPosition(result.originalRootMatrix, getTransformOriginArray(getCachedStyle(offsetContainer)(\"transformOrigin\")).map(function (pos) {\n        return parseFloat(pos);\n      }), offsetContainer.offsetWidth, offsetContainer.offsetHeight);\n      targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\n      containerClientRect = getClientRectByPosition(absoluteContainerPosition, rootContainerClientRect, offsetContainer, true);\n      if (moveableElement) {\n        var left = absoluteTargetPosition.left;\n        var top_1 = absoluteTargetPosition.top;\n        moveableClientRect = getClientRectByPosition({\n          left: left,\n          top: top_1,\n          bottom: top_1,\n          right: top_1\n        }, rootContainerClientRect);\n      }\n    } else {\n      targetClientRect = getClientRect(target);\n      containerClientRect = getCachedClientRect(offsetContainer);\n      if (moveableElement) {\n        moveableClientRect = getClientRect(moveableElement);\n      }\n      var containerClientRectLeft = containerClientRect.left,\n        containerClientRectTop = containerClientRect.top,\n        containterClientLeft = containerClientRect.clientLeft,\n        containerClientTop = containerClientRect.clientTop;\n      var clientDelta = [targetClientRect.left - containerClientRectLeft, targetClientRect.top - containerClientRectTop];\n      offsetDelta = minus(calculateInversePosition(result.rootMatrix, clientDelta, 4), [containterClientLeft + result.left, containerClientTop + result.top]);\n    }\n  }\n  return __assign({\n    targetClientRect: targetClientRect,\n    containerClientRect: containerClientRect,\n    moveableClientRect: moveableClientRect,\n    rootContainerClientRect: rootContainerClientRect,\n    beforeDirection: beforeDirection,\n    beforeOrigin: beforeOrigin,\n    originalBeforeOrigin: beforeOrigin,\n    target: target,\n    style: style,\n    offsetDelta: offsetDelta\n  }, result);\n}\nfunction getPersistState(rect) {\n  var pos1 = rect.pos1,\n    pos2 = rect.pos2,\n    pos3 = rect.pos3,\n    pos4 = rect.pos4;\n  if (!pos1 || !pos2 || !pos3 || !pos4) {\n    return null;\n  }\n  var minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n  var posDelta = [minPos.minX, minPos.minY];\n  var origin = minus(rect.origin, posDelta);\n  pos1 = minus(pos1, posDelta);\n  pos2 = minus(pos2, posDelta);\n  pos3 = minus(pos3, posDelta);\n  pos4 = minus(pos4, posDelta);\n  return __assign(__assign({}, rect), {\n    left: rect.left,\n    top: rect.top,\n    posDelta: posDelta,\n    pos1: pos1,\n    pos2: pos2,\n    pos3: pos3,\n    pos4: pos4,\n    origin: origin,\n    beforeOrigin: origin,\n    // originalBeforeOrigin: origin,\n    isPersisted: true\n  });\n}\nvar MoveableManager = /*#__PURE__*/function (_super) {\n  __extends(MoveableManager, _super);\n  function MoveableManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = __assign({\n      container: null,\n      gestos: {},\n      renderLines: [[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]],\n      renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n      disableNativeEvent: false,\n      posDelta: [0, 0]\n    }, getMoveableTargetInfo(null));\n    _this.renderState = {};\n    _this.enabledAbles = [];\n    _this.targetAbles = [];\n    _this.controlAbles = [];\n    _this.rotation = 0;\n    _this.scale = [1, 1];\n    _this.isMoveableMounted = false;\n    _this.isUnmounted = false;\n    _this.events = {\n      \"mouseEnter\": null,\n      \"mouseLeave\": null\n    };\n    _this._emitter = new EventEmitter();\n    _this._prevOriginalDragTarget = null;\n    _this._originalDragTarget = null;\n    _this._prevDragTarget = null;\n    _this._dragTarget = null;\n    _this._prevPropTarget = null;\n    _this._propTarget = null;\n    _this._prevDragArea = false;\n    _this._isPropTargetChanged = false;\n    _this._hasFirstTarget = false;\n    _this._reiszeObserver = null;\n    _this._observerId = 0;\n    _this._mutationObserver = null;\n    _this._rootContainer = null;\n    _this._viewContainer = null;\n    _this._viewClassNames = [];\n    _this._store = {};\n    _this.checkUpdateRect = function () {\n      if (_this.isDragging()) {\n        return;\n      }\n      var parentMoveable = _this.props.parentMoveable;\n      if (parentMoveable) {\n        parentMoveable.checkUpdateRect();\n        return;\n      }\n      cancelAnimationFrame(_this._observerId);\n      _this._observerId = requestAnimationFrame(function () {\n        if (_this.isDragging()) {\n          return;\n        }\n        _this.updateRect();\n      });\n    };\n    _this._onPreventClick = function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      // removeEvent(window, \"click\", this._onPreventClick, true);\n    };\n    return _this;\n  }\n  MoveableManager.prototype.render = function () {\n    var props = this.props;\n    var state = this.getState();\n    var parentPosition = props.parentPosition,\n      className = props.className,\n      propsTarget = props.target,\n      zoom = props.zoom,\n      cspNonce = props.cspNonce,\n      translateZ = props.translateZ,\n      ControlBoxElement = props.cssStyled,\n      groupable = props.groupable,\n      linePadding = props.linePadding,\n      controlPadding = props.controlPadding;\n    this._checkUpdateRootContainer();\n    this.checkUpdate();\n    this.updateRenderPoses();\n    var _a = __read(parentPosition || [0, 0], 2),\n      parentLeft = _a[0],\n      parentTop = _a[1];\n    var left = state.left,\n      top = state.top,\n      stateTarget = state.target,\n      direction = state.direction,\n      hasFixed = state.hasFixed,\n      offsetDelta = state.offsetDelta;\n    var groupTargets = props.targets;\n    var isDragging = this.isDragging();\n    var ableAttributes = {};\n    this.getEnabledAbles().forEach(function (able) {\n      ableAttributes[\"data-able-\".concat(able.name.toLowerCase())] = true;\n    });\n    var ableClassName = this._getAbleClassName();\n    var isDisplay = groupTargets && groupTargets.length && (stateTarget || groupable) || propsTarget || !this._hasFirstTarget && this.state.isPersisted;\n    var isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\n    var translate = [left - parentLeft, top - parentTop];\n    if (!groupable && props.useAccuratePosition) {\n      translate[0] += offsetDelta[0];\n      translate[1] += offsetDelta[1];\n    }\n    var style = {\n      \"position\": hasFixed ? \"fixed\" : \"absolute\",\n      \"display\": isDisplay ? \"block\" : \"none\",\n      \"visibility\": isVisible ? \"visible\" : \"hidden\",\n      \"transform\": \"translate3d(\".concat(translate[0], \"px, \").concat(translate[1], \"px, \").concat(translateZ, \")\"),\n      \"--zoom\": zoom,\n      \"--zoompx\": \"\".concat(zoom, \"px\")\n    };\n    if (linePadding) {\n      style[\"--moveable-line-padding\"] = linePadding;\n    }\n    if (controlPadding) {\n      style[\"--moveable-control-padding\"] = controlPadding;\n    }\n    return React.createElement(ControlBoxElement, __assign({\n      cspNonce: cspNonce,\n      ref: ref(this, \"controlBox\"),\n      className: \"\".concat(prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\"), \" \").concat(ableClassName, \" \").concat(className)\n    }, ableAttributes, {\n      onClick: this._onPreventClick,\n      style: style\n    }), this.renderAbles(), this._renderLines());\n  };\n  MoveableManager.prototype.componentDidMount = function () {\n    this.isMoveableMounted = true;\n    this.isUnmounted = false;\n    var props = this.props;\n    var parentMoveable = props.parentMoveable,\n      container = props.container;\n    this._checkUpdateRootContainer();\n    this._checkUpdateViewContainer();\n    this._updateTargets();\n    this._updateNativeEvents();\n    this._updateEvents();\n    this.updateCheckInput();\n    this._updateObserver(this.props);\n    if (!container && !parentMoveable && !this.state.isPersisted) {\n      this.updateRect(\"\", false, false);\n      this.forceUpdate();\n    }\n  };\n  MoveableManager.prototype.componentDidUpdate = function (prevProps) {\n    this._checkUpdateRootContainer();\n    this._checkUpdateViewContainer();\n    this._updateNativeEvents();\n    this._updateTargets();\n    this._updateEvents();\n    this.updateCheckInput();\n    this._updateObserver(prevProps);\n  };\n  MoveableManager.prototype.componentWillUnmount = function () {\n    var _a, _b;\n    this.isMoveableMounted = false;\n    this.isUnmounted = true;\n    this._emitter.off();\n    (_a = this._reiszeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n    var viewContainer = this._viewContainer;\n    if (viewContainer) {\n      this._changeAbleViewClassNames([]);\n    }\n    unsetGesto(this, false);\n    unsetGesto(this, true);\n    var events = this.events;\n    for (var name_1 in events) {\n      var manager = events[name_1];\n      manager && manager.destroy();\n    }\n  };\n  MoveableManager.prototype.getTargets = function () {\n    var target = this.props.target;\n    return target ? [target] : [];\n  };\n  /**\r\n   * Get the able used in MoveableManager.\r\n   * @method Moveable#getAble\r\n   * @param - able name\r\n   */\n  MoveableManager.prototype.getAble = function (ableName) {\n    var ables = this.props.ables || [];\n    return find(ables, function (able) {\n      return able.name === ableName;\n    });\n  };\n  MoveableManager.prototype.getContainer = function () {\n    var _a = this.props,\n      parentMoveable = _a.parentMoveable,\n      wrapperMoveable = _a.wrapperMoveable,\n      container = _a.container;\n    return container || wrapperMoveable && wrapperMoveable.getContainer() || parentMoveable && parentMoveable.getContainer() || this.controlBox.parentElement;\n  };\n  /**\r\n   * Returns the element of the control box.\r\n   * @method Moveable#getControlBoxElement\r\n   */\n  MoveableManager.prototype.getControlBoxElement = function () {\n    return this.controlBox;\n  };\n  /**\r\n   * Target element to be dragged in moveable\r\n   * @method Moveable#getDragElement\r\n   */\n  MoveableManager.prototype.getDragElement = function () {\n    return this._dragTarget;\n  };\n  /**\r\n   * Check if the target is an element included in the moveable.\r\n   * @method Moveable#isMoveableElement\r\n   * @param - the target\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * window.addEventListener(\"click\", e => {\r\n   *     if (!moveable.isMoveableElement(e.target)) {\r\n   *         moveable.target = e.target;\r\n   *     }\r\n   * });\r\n   */\n  MoveableManager.prototype.isMoveableElement = function (target) {\n    var _a;\n    return target && (((_a = target.getAttribute) === null || _a === void 0 ? void 0 : _a.call(target, \"class\")) || \"\").indexOf(PREFIX) > -1;\n  };\n  /**\r\n   * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\r\n   * @method Moveable#dragStart\r\n   * @param - external `MouseEvent`or `TouchEvent`\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * document.body.addEventListener(\"mousedown\", e => {\r\n   *     if (!moveable.isMoveableElement(e.target)) {\r\n   *          moveable.dragStart(e);\r\n   *     }\r\n   * });\r\n   */\n  MoveableManager.prototype.dragStart = function (e, target) {\n    if (target === void 0) {\n      target = e.target;\n    }\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    if (targetGesto && checkMoveableTarget(this)({\n      inputEvent: e\n    }, target)) {\n      if (!targetGesto.isFlag()) {\n        targetGesto.triggerDragStart(e);\n      }\n    } else if (controlGesto && this.isMoveableElement(target)) {\n      if (!controlGesto.isFlag()) {\n        controlGesto.triggerDragStart(e);\n      }\n    }\n    return this;\n  };\n  /**\r\n   * Hit test an element or rect on a moveable target.\r\n   * (100% = 100)\r\n   * @method Moveable#hitTest\r\n   * @param - element or rect to test\r\n   * @return - Get hit test rate (rate > 0 is hitted)\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * document.body.addEventListener(\"mousedown\", e => {\r\n   *     if (moveable.hitTest(e.target) > 0) {\r\n   *          console.log(\"hiited\");\r\n   *     }\r\n   * });\r\n   */\n  MoveableManager.prototype.hitTest = function (el) {\n    var _a = this.state,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos3 = _a.pos3,\n      pos4 = _a.pos4,\n      targetClientRect = _a.targetClientRect;\n    if (!target) {\n      return 0;\n    }\n    var rect;\n    if (isNode(el)) {\n      var clientRect = el.getBoundingClientRect();\n      rect = {\n        left: clientRect.left,\n        top: clientRect.top,\n        width: clientRect.width,\n        height: clientRect.height\n      };\n    } else {\n      rect = __assign({\n        width: 0,\n        height: 0\n      }, el);\n    }\n    var rectLeft = rect.left,\n      rectTop = rect.top,\n      rectWidth = rect.width,\n      rectHeight = rect.height;\n    var points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n    var size = getOverlapSize(points, [[rectLeft, rectTop], [rectLeft + rectWidth, rectTop], [rectLeft + rectWidth, rectTop + rectHeight], [rectLeft, rectTop + rectHeight]]);\n    var totalSize = getAreaSize(points);\n    if (!size || !totalSize) {\n      return 0;\n    }\n    return Math.min(100, size / totalSize * 100);\n  };\n  /**\r\n   * Whether the coordinates are inside Moveable\r\n   * @method Moveable#isInside\r\n   * @param - x coordinate\r\n   * @param - y coordinate\r\n   * @return - True if the coordinate is in moveable or false\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * document.body.addEventListener(\"mousedown\", e => {\r\n   *     if (moveable.isInside(e.clientX, e.clientY)) {\r\n   *          console.log(\"inside\");\r\n   *     }\r\n   * });\r\n   */\n  MoveableManager.prototype.isInside = function (clientX, clientY) {\n    var _a = this.state,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos3 = _a.pos3,\n      pos4 = _a.pos4,\n      targetClientRect = _a.targetClientRect;\n    if (!target) {\n      return false;\n    }\n    return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n  };\n  /**\r\n   * If the width, height, left, and top of all elements change, update the shape of the moveable.\r\n   * @method Moveable#updateRect\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * window.addEventListener(\"resize\", e => {\r\n   *     moveable.updateRect();\r\n   * });\r\n   */\n  MoveableManager.prototype.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    var props = this.props;\n    var isSingle = !props.parentPosition && !props.wrapperMoveable;\n    if (isSingle) {\n      setStoreCache(true);\n    }\n    var parentMoveable = props.parentMoveable;\n    var state = this.state;\n    var target = state.target || props.target;\n    var container = this.getContainer();\n    var rootContainer = parentMoveable ? parentMoveable._rootContainer : this._rootContainer;\n    var nextState = getMoveableTargetInfo(this.controlBox, target, container, container, rootContainer || container, this._getRequestStyles());\n    if (!target && this._hasFirstTarget && props.persistData) {\n      var persistState = getPersistState(props.persistData);\n      for (var name_2 in persistState) {\n        nextState[name_2] = persistState[name_2];\n      }\n    }\n    if (isSingle) {\n      setStoreCache();\n    }\n    this.updateState(nextState, parentMoveable ? false : isSetState);\n  };\n  /**\r\n   * Check if the moveable state is being dragged.\r\n   * @method Moveable#isDragging\r\n   * @param - If you want to check if able is dragging, specify ableName.\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * // false\r\n   * console.log(moveable.isDragging());\r\n   *\r\n   * moveable.on(\"drag\", () => {\r\n   *   // true\r\n   *   console.log(moveable.isDragging());\r\n   * });\r\n   */\n  MoveableManager.prototype.isDragging = function (ableName) {\n    var _a, _b;\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    if (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) {\n      if (!ableName) {\n        return true;\n      }\n      var data = targetGesto.getEventData();\n      return !!((_a = data[ableName]) === null || _a === void 0 ? void 0 : _a.isEventStart);\n    }\n    if (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag()) {\n      if (!ableName) {\n        return true;\n      }\n      var data = controlGesto.getEventData();\n      return !!((_b = data[ableName]) === null || _b === void 0 ? void 0 : _b.isEventStart);\n    }\n    return false;\n  };\n  /**\r\n   * If the width, height, left, and top of the only target change, update the shape of the moveable.\r\n   * Use `.updateRect()` method\r\n   * @method Moveable#updateTarget\r\n   * @deprecated\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * moveable.updateTarget();\r\n   */\n  MoveableManager.prototype.updateTarget = function (type) {\n    this.updateRect(type, true);\n  };\n  /**\r\n   * You can get the vertex information, position and offset size information of the target based on the container.\r\n   * @method Moveable#getRect\r\n   * @return - The Rect Info\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * const rectInfo = moveable.getRect();\r\n   */\n  MoveableManager.prototype.getRect = function () {\n    var state = this.state;\n    var poses = getAbsolutePosesByState(this.state);\n    var _a = __read(poses, 4),\n      pos1 = _a[0],\n      pos2 = _a[1],\n      pos3 = _a[2],\n      pos4 = _a[3];\n    var rect = getRect(poses);\n    var offsetWidth = state.width,\n      offsetHeight = state.height;\n    var width = rect.width,\n      height = rect.height,\n      left = rect.left,\n      top = rect.top;\n    var statePos = [state.left, state.top];\n    var origin = plus(statePos, state.origin);\n    var beforeOrigin = plus(statePos, state.beforeOrigin);\n    var transformOrigin = state.transformOrigin;\n    return {\n      width: width,\n      height: height,\n      left: left,\n      top: top,\n      pos1: pos1,\n      pos2: pos2,\n      pos3: pos3,\n      pos4: pos4,\n      offsetWidth: offsetWidth,\n      offsetHeight: offsetHeight,\n      beforeOrigin: beforeOrigin,\n      origin: origin,\n      transformOrigin: transformOrigin,\n      rotation: this.getRotation()\n    };\n  };\n  /**\r\n   * Get a manager that manages the moveable's state and props.\r\n   * @method Moveable#getManager\r\n   * @return - The Rect Info\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * const manager = moveable.getManager(); // real moveable class instance\r\n   */\n  MoveableManager.prototype.getManager = function () {\n    return this;\n  };\n  /**\r\n   * You can stop the dragging currently in progress through a method from outside.\r\n   * @method Moveable#stopDrag\r\n   * @return - The Rect Info\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * moveable.stopDrag();\r\n   */\n  MoveableManager.prototype.stopDrag = function (type) {\n    if (!type || type === \"target\") {\n      var gesto = this.targetGesto;\n      if ((gesto === null || gesto === void 0 ? void 0 : gesto.isIdle()) === false) {\n        unsetAbles(this, false);\n      }\n      gesto === null || gesto === void 0 ? void 0 : gesto.stop();\n    }\n    if (!type || type === \"control\") {\n      var gesto = this.controlGesto;\n      if ((gesto === null || gesto === void 0 ? void 0 : gesto.isIdle()) === false) {\n        unsetAbles(this, true);\n      }\n      gesto === null || gesto === void 0 ? void 0 : gesto.stop();\n    }\n  };\n  MoveableManager.prototype.getRotation = function () {\n    var _a = this.state,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      direction = _a.direction;\n    return getAbsoluteRotation(pos1, pos2, direction);\n  };\n  /**\r\n   * Request able through a method rather than an event.\r\n   * At the moment of execution, requestStart is executed,\r\n   * and then request and requestEnd can be executed through Requester.\r\n   * @method Moveable#request\r\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\r\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\r\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\r\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\r\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\r\n   * @param - ableName\r\n   * @param - request to be able params.\r\n   * @param - If isInstant is true, request and requestEnd are executed immediately.\r\n   * @return - Able Requester. If there is no request in able, nothing will work.\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * // Instantly Request (requestStart - request - requestEnd)\r\n   * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\r\n   *\r\n   * // Start move\r\n   * const requester = moveable.request(\"draggable\");\r\n   * requester.request({ deltaX: 10, deltaY: 10 });\r\n   * requester.request({ deltaX: 10, deltaY: 10 });\r\n   * requester.request({ deltaX: 10, deltaY: 10 });\r\n   * requester.requestEnd();\r\n   */\n  MoveableManager.prototype.request = function (ableName, param, isInstant) {\n    if (param === void 0) {\n      param = {};\n    }\n    var self = this;\n    var props = self.props;\n    var manager = props.parentMoveable || props.wrapperMoveable || self;\n    var allAbles = manager.props.ables;\n    var groupable = props.groupable;\n    var requsetAble = find(allAbles, function (able) {\n      return able.name === ableName;\n    });\n    if (this.isDragging() || !requsetAble || !requsetAble.request) {\n      return {\n        request: function () {\n          return this;\n        },\n        requestEnd: function () {\n          return this;\n        }\n      };\n    }\n    var ableRequester = requsetAble.request(self);\n    var requestInstant = isInstant || param.isInstant;\n    var ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n    var eventAffix = \"\".concat(groupable ? \"Group\" : \"\").concat(ableRequester.isControl ? \"Control\" : \"\");\n    var moveableAbles = __spreadArray([], __read(manager[ableType]), false);\n    var requester = {\n      request: function (ableParam) {\n        triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"\", __assign(__assign({}, ableRequester.request(ableParam)), {\n          requestAble: ableName,\n          isRequest: true\n        }), requestInstant);\n        return requester;\n      },\n      requestEnd: function () {\n        triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"End\", __assign(__assign({}, ableRequester.requestEnd()), {\n          requestAble: ableName,\n          isRequest: true\n        }), requestInstant);\n        return requester;\n      }\n    };\n    triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"Start\", __assign(__assign({}, ableRequester.requestStart(param)), {\n      requestAble: ableName,\n      isRequest: true\n    }), requestInstant);\n    return requestInstant ? requester.request(param).requestEnd() : requester;\n  };\n  /**\r\n   * moveable is the top level that manages targets\r\n   * `Single`: MoveableManager instance\r\n   * `Group`: MoveableGroup instance\r\n   * `IndividualGroup`: MoveableIndividaulGroup instance\r\n   * Returns leaf target MoveableManagers.\r\n   */\n  MoveableManager.prototype.getMoveables = function () {\n    return [this];\n  };\n  /**\r\n   * Remove the Moveable object and the events.\r\n   * @method Moveable#destroy\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body);\r\n   *\r\n   * moveable.destroy();\r\n   */\n  MoveableManager.prototype.destroy = function () {\n    this.componentWillUnmount();\n  };\n  MoveableManager.prototype.updateRenderPoses = function () {\n    var state = this.getState();\n    var props = this.props;\n    var padding = props.padding;\n    var originalBeforeOrigin = state.originalBeforeOrigin,\n      transformOrigin = state.transformOrigin,\n      allMatrix = state.allMatrix,\n      is3d = state.is3d,\n      pos1 = state.pos1,\n      pos2 = state.pos2,\n      pos3 = state.pos3,\n      pos4 = state.pos4,\n      stateLeft = state.left,\n      stateTop = state.top,\n      isPersisted = state.isPersisted;\n    var zoom = props.zoom || 1;\n    if (!padding && zoom <= 1) {\n      state.renderPoses = [pos1, pos2, pos3, pos4];\n      state.renderLines = [[pos1, pos2], [pos2, pos4], [pos4, pos3], [pos3, pos1]];\n      return;\n    }\n    var _a = getPaddingBox(padding || {}),\n      left = _a.left,\n      top = _a.top,\n      bottom = _a.bottom,\n      right = _a.right;\n    var n = is3d ? 4 : 3;\n    // const clipPathInfo = getClipPath(\n    //     props.target,\n    //     offsetWidth,\n    //     offsetHeight,\n    // );\n    // if (clipPathInfo) {\n    //     left -= Math.max(0, clipPathInfo.left);\n    //     top -= Math.max(0, clipPathInfo.top);\n    //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\n    //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\n    // }\n    var absoluteOrigin = [];\n    if (isPersisted) {\n      absoluteOrigin = transformOrigin;\n    } else if (this.controlBox && props.groupable) {\n      absoluteOrigin = originalBeforeOrigin;\n    } else {\n      absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\n    }\n    var nextMatrix = multiplies(n, createOriginMatrix(absoluteOrigin.map(function (v) {\n      return -v;\n    }), n), allMatrix, createOriginMatrix(transformOrigin, n));\n    var renderPos1 = calculatePadding(nextMatrix, pos1, [-left, -top], n);\n    var renderPos2 = calculatePadding(nextMatrix, pos2, [right, -top], n);\n    var renderPos3 = calculatePadding(nextMatrix, pos3, [-left, bottom], n);\n    var renderPos4 = calculatePadding(nextMatrix, pos4, [right, bottom], n);\n    state.renderPoses = [renderPos1, renderPos2, renderPos3, renderPos4];\n    state.renderLines = [[renderPos1, renderPos2], [renderPos2, renderPos4], [renderPos4, renderPos3], [renderPos3, renderPos1]];\n    if (zoom) {\n      var zoomOffset = zoom / 2;\n      state.renderLines = [[calculatePadding(nextMatrix, pos1, [-left - zoomOffset, -top], n), calculatePadding(nextMatrix, pos2, [right + zoomOffset, -top], n)], [calculatePadding(nextMatrix, pos2, [right, -top - zoomOffset], n), calculatePadding(nextMatrix, pos4, [right, bottom + zoomOffset], n)], [calculatePadding(nextMatrix, pos4, [right + zoomOffset, bottom], n), calculatePadding(nextMatrix, pos3, [-left - zoomOffset, bottom], n)], [calculatePadding(nextMatrix, pos3, [-left, bottom + zoomOffset], n), calculatePadding(nextMatrix, pos1, [-left, -top - zoomOffset], n)]];\n    }\n  };\n  MoveableManager.prototype.checkUpdate = function () {\n    this._isPropTargetChanged = false;\n    var _a = this.props,\n      target = _a.target,\n      container = _a.container,\n      parentMoveable = _a.parentMoveable;\n    var _b = this.state,\n      stateTarget = _b.target,\n      stateContainer = _b.container;\n    if (!stateTarget && !target) {\n      return;\n    }\n    this.updateAbles();\n    var isTargetChanged = !equals(stateTarget, target);\n    var isChanged = isTargetChanged || !equals(stateContainer, container);\n    if (!isChanged) {\n      return;\n    }\n    var moveableContainer = container || this.controlBox;\n    if (moveableContainer) {\n      this.unsetAbles();\n    }\n    this.updateState({\n      target: target,\n      container: container\n    });\n    if (!parentMoveable && moveableContainer) {\n      this.updateRect(\"End\", false, false);\n    }\n    this._isPropTargetChanged = isTargetChanged;\n  };\n  MoveableManager.prototype.waitToChangeTarget = function () {\n    return new Promise(function () {});\n  };\n  MoveableManager.prototype.triggerEvent = function (name, e) {\n    var props = this.props;\n    this._emitter.trigger(name, e);\n    if (props.parentMoveable && e.isRequest && !e.isRequestChild) {\n      return props.parentMoveable.triggerEvent(name, e, true);\n    }\n    var callback = props[name];\n    return callback && callback(e);\n  };\n  MoveableManager.prototype.useCSS = function (tag, css) {\n    var customStyleMap = this.props.customStyledMap;\n    var key = tag + css;\n    if (!customStyleMap[key]) {\n      customStyleMap[key] = styled(tag, css);\n    }\n    return customStyleMap[key];\n  };\n  MoveableManager.prototype.getState = function () {\n    var _a;\n    var props = this.props;\n    if (props.target || ((_a = props.targets) === null || _a === void 0 ? void 0 : _a.length)) {\n      this._hasFirstTarget = true;\n    }\n    var hasControlBox = this.controlBox;\n    var persistData = props.persistData;\n    var firstRenderState = props.firstRenderState;\n    if (firstRenderState && !hasControlBox) {\n      return firstRenderState;\n    }\n    if (!this._hasFirstTarget && persistData) {\n      var persistState = getPersistState(persistData);\n      if (persistState) {\n        this.updateState(persistState, false);\n        return this.state;\n      }\n    }\n    this.state.isPersisted = false;\n    return this.state;\n  };\n  MoveableManager.prototype.updateSelectors = function () {};\n  MoveableManager.prototype.unsetAbles = function () {\n    var _this = this;\n    this.targetAbles.forEach(function (able) {\n      if (able.unset) {\n        able.unset(_this);\n      }\n    });\n  };\n  MoveableManager.prototype.updateAbles = function (ables, eventAffix) {\n    if (ables === void 0) {\n      ables = this.props.ables;\n    }\n    if (eventAffix === void 0) {\n      eventAffix = \"\";\n    }\n    var props = this.props;\n    var triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n    var enabledAbles = this.getEnabledAbles(ables);\n    var dragStart = \"drag\".concat(eventAffix, \"Start\");\n    var pinchStart = \"pinch\".concat(eventAffix, \"Start\");\n    var dragControlStart = \"drag\".concat(eventAffix, \"ControlStart\");\n    var targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n    var controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n    this.enabledAbles = enabledAbles;\n    this.targetAbles = targetAbles;\n    this.controlAbles = controlAbles;\n  };\n  MoveableManager.prototype.updateState = function (nextState, isSetState) {\n    if (isSetState) {\n      if (this.isUnmounted) {\n        return;\n      }\n      this.setState(nextState);\n    } else {\n      var state = this.state;\n      for (var name_3 in nextState) {\n        state[name_3] = nextState[name_3];\n      }\n    }\n  };\n  MoveableManager.prototype.getEnabledAbles = function (ables) {\n    if (ables === void 0) {\n      ables = this.props.ables;\n    }\n    var props = this.props;\n    return ables.filter(function (able) {\n      return able && (able.always && props[able.name] !== false || props[able.name]);\n    });\n  };\n  MoveableManager.prototype.renderAbles = function () {\n    var _this = this;\n    var props = this.props;\n    var triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n    var Renderer = {\n      createElement: createElement\n    };\n    this.renderState = {};\n    return groupByMap(flat(filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(function (_a) {\n      var render = _a.render;\n      return render(_this, Renderer) || [];\n    })).filter(function (el) {\n      return el;\n    }), function (_a) {\n      var key = _a.key;\n      return key;\n    }).map(function (group) {\n      return group[0];\n    });\n  };\n  MoveableManager.prototype.updateCheckInput = function () {\n    this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n  };\n  MoveableManager.prototype._getRequestStyles = function () {\n    var styleNames = this.getEnabledAbles().reduce(function (names, able) {\n      var _a, _b;\n      var ableStyleNames = (_b = (_a = able.requestStyle) === null || _a === void 0 ? void 0 : _a.call(able)) !== null && _b !== void 0 ? _b : [];\n      return __spreadArray(__spreadArray([], __read(names), false), __read(ableStyleNames), false);\n    }, __spreadArray([], __read(this.props.requestStyles || []), false));\n    return styleNames;\n  };\n  MoveableManager.prototype._updateObserver = function (prevProps) {\n    this._updateResizeObserver(prevProps);\n    this._updateMutationObserver(prevProps);\n  };\n  MoveableManager.prototype._updateEvents = function () {\n    var hasTargetAble = this.targetAbles.length;\n    var hasControlAble = this.controlAbles.length;\n    var target = this._dragTarget;\n    var isUnset = !hasTargetAble && this.targetGesto || this._isTargetChanged(true);\n    if (isUnset) {\n      unsetGesto(this, false);\n      this.updateState({\n        gestos: {}\n      });\n    }\n    if (!hasControlAble) {\n      unsetGesto(this, true);\n    }\n    if (target && hasTargetAble && !this.targetGesto) {\n      this.targetGesto = getTargetAbleGesto(this, target, \"\");\n    }\n    if (!this.controlGesto && hasControlAble) {\n      this.controlGesto = getControlAbleGesto(this, \"Control\");\n    }\n  };\n  MoveableManager.prototype._updateTargets = function () {\n    var props = this.props;\n    this._prevPropTarget = this._propTarget;\n    this._prevDragTarget = this._dragTarget;\n    this._prevOriginalDragTarget = this._originalDragTarget;\n    this._prevDragArea = props.dragArea;\n    this._propTarget = props.target;\n    this._originalDragTarget = props.dragTarget || props.target;\n    this._dragTarget = getRefTarget(this._originalDragTarget, true);\n  };\n  MoveableManager.prototype._renderLines = function () {\n    var props = this.props;\n    var _a = props,\n      zoom = _a.zoom,\n      hideDefaultLines = _a.hideDefaultLines,\n      hideChildMoveableDefaultLines = _a.hideChildMoveableDefaultLines,\n      parentMoveable = _a.parentMoveable;\n    if (hideDefaultLines || parentMoveable && hideChildMoveableDefaultLines) {\n      return [];\n    }\n    var state = this.getState();\n    var Renderer = {\n      createElement: createElement\n    };\n    return state.renderLines.map(function (line, i) {\n      return renderLine(Renderer, \"\", line[0], line[1], zoom, \"render-line-\".concat(i));\n    });\n  };\n  MoveableManager.prototype._isTargetChanged = function (useDragArea) {\n    var props = this.props;\n    var nextTarget = props.dragTarget || props.target;\n    var prevTarget = this._prevOriginalDragTarget;\n    var prevDragArea = this._prevDragArea;\n    var dragArea = props.dragArea;\n    // check target without dragArea\n    var isDragTargetChanged = !dragArea && prevTarget !== nextTarget;\n    var isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n    return isDragTargetChanged || isDragAreaChanged || this._prevPropTarget != this._propTarget;\n  };\n  MoveableManager.prototype._updateNativeEvents = function () {\n    var _this = this;\n    var props = this.props;\n    var target = props.dragArea ? this.areaElement : this.state.target;\n    var events = this.events;\n    var eventKeys = getKeys(events);\n    if (this._isTargetChanged()) {\n      for (var eventName in events) {\n        var manager = events[eventName];\n        manager && manager.destroy();\n        events[eventName] = null;\n      }\n    }\n    if (!target) {\n      return;\n    }\n    var enabledAbles = this.enabledAbles;\n    eventKeys.forEach(function (eventName) {\n      var ables = filterAbles(enabledAbles, [eventName]);\n      var hasAbles = ables.length > 0;\n      var manager = events[eventName];\n      if (!hasAbles) {\n        if (manager) {\n          manager.destroy();\n          events[eventName] = null;\n        }\n        return;\n      }\n      if (!manager) {\n        manager = new EventManager(target, _this, eventName);\n        events[eventName] = manager;\n      }\n      manager.setAbles(ables);\n    });\n  };\n  MoveableManager.prototype._checkUpdateRootContainer = function () {\n    var rootContainer = this.props.rootContainer;\n    if (!this._rootContainer && rootContainer) {\n      this._rootContainer = getRefTarget(rootContainer, true);\n    }\n  };\n  MoveableManager.prototype._checkUpdateViewContainer = function () {\n    var viewContainerOption = this.props.viewContainer;\n    if (!this._viewContainer && viewContainerOption) {\n      this._viewContainer = getRefTarget(viewContainerOption, true);\n    }\n    var viewContainer = this._viewContainer;\n    if (viewContainer) {\n      this._changeAbleViewClassNames(__spreadArray(__spreadArray([], __read(this._getAbleViewClassNames()), false), [this.isDragging() ? VIEW_DRAGGING : \"\"], false));\n    }\n  };\n  MoveableManager.prototype._changeAbleViewClassNames = function (classNames) {\n    var viewContainer = this._viewContainer;\n    var nextClassNames = groupBy(classNames.filter(Boolean), function (el) {\n      return el;\n    }).map(function (_a) {\n      var _b = __read(_a, 1),\n        className = _b[0];\n      return className;\n    });\n    var prevClassNames = this._viewClassNames;\n    var _a = diff$1(prevClassNames, nextClassNames),\n      removed = _a.removed,\n      added = _a.added;\n    removed.forEach(function (index) {\n      removeClass(viewContainer, prevClassNames[index]);\n    });\n    added.forEach(function (index) {\n      addClass(viewContainer, nextClassNames[index]);\n    });\n    this._viewClassNames = nextClassNames;\n  };\n  MoveableManager.prototype._getAbleViewClassNames = function () {\n    var _this = this;\n    return (this.getEnabledAbles().map(function (able) {\n      var _a;\n      return ((_a = able.viewClassName) === null || _a === void 0 ? void 0 : _a.call(able, _this)) || \"\";\n    }).join(\" \") + \" \".concat(this._getAbleClassName(\"-view\"))).split(/\\s+/g);\n  };\n  MoveableManager.prototype._getAbleClassName = function (classPrefix) {\n    var _this = this;\n    if (classPrefix === void 0) {\n      classPrefix = \"\";\n    }\n    var ables = this.getEnabledAbles();\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    var targetGestoData = (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) ? targetGesto.getEventData() : {};\n    var controlGestoData = (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag()) ? controlGesto.getEventData() : {};\n    return ables.map(function (able) {\n      var _a, _b, _c;\n      var name = able.name;\n      var className = ((_a = able.className) === null || _a === void 0 ? void 0 : _a.call(able, _this)) || \"\";\n      if (((_b = targetGestoData[name]) === null || _b === void 0 ? void 0 : _b.isEventStart) || ((_c = controlGestoData[name]) === null || _c === void 0 ? void 0 : _c.isEventStart)) {\n        className += \" \".concat(prefix(\"\".concat(name).concat(classPrefix, \"-dragging\")));\n      }\n      return className.trim();\n    }).filter(Boolean).join(\" \");\n  };\n  MoveableManager.prototype._updateResizeObserver = function (prevProps) {\n    var _a;\n    var props = this.props;\n    var target = props.target;\n    var win = getWindow(this.getControlBoxElement());\n    if (!win.ResizeObserver || !target || !props.useResizeObserver) {\n      (_a = this._reiszeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n      return;\n    }\n    if (prevProps.target === target && this._reiszeObserver) {\n      return;\n    }\n    var observer = new win.ResizeObserver(this.checkUpdateRect);\n    observer.observe(target, {\n      box: \"border-box\"\n    });\n    this._reiszeObserver = observer;\n  };\n  MoveableManager.prototype._updateMutationObserver = function (prevProps) {\n    var _this = this;\n    var _a;\n    var props = this.props;\n    var target = props.target;\n    var win = getWindow(this.getControlBoxElement());\n    if (!win.MutationObserver || !target || !props.useMutationObserver) {\n      (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n      return;\n    }\n    if (prevProps.target === target && this._mutationObserver) {\n      return;\n    }\n    var observer = new win.MutationObserver(function (records) {\n      var e_1, _a;\n      try {\n        for (var records_1 = __values(records), records_1_1 = records_1.next(); !records_1_1.done; records_1_1 = records_1.next()) {\n          var mutation = records_1_1.value;\n          if (mutation.type === \"attributes\" && mutation.attributeName === \"style\") {\n            _this.checkUpdateRect();\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (records_1_1 && !records_1_1.done && (_a = records_1.return)) _a.call(records_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    });\n    observer.observe(target, {\n      attributes: true\n    });\n    this._mutationObserver = observer;\n  };\n  MoveableManager.defaultProps = {\n    dragTargetSelf: false,\n    target: null,\n    dragTarget: null,\n    container: null,\n    rootContainer: null,\n    origin: true,\n    parentMoveable: null,\n    wrapperMoveable: null,\n    isWrapperMounted: false,\n    parentPosition: null,\n    warpSelf: false,\n    svgOrigin: \"\",\n    dragContainer: null,\n    useResizeObserver: false,\n    useMutationObserver: false,\n    preventDefault: true,\n    preventRightClick: true,\n    preventWheelClick: true,\n    linePadding: 0,\n    controlPadding: 0,\n    ables: [],\n    pinchThreshold: 20,\n    dragArea: false,\n    passDragArea: false,\n    transformOrigin: \"\",\n    className: \"\",\n    zoom: 1,\n    triggerAblesSimultaneously: false,\n    padding: {},\n    pinchOutside: true,\n    checkInput: false,\n    dragFocusedInput: false,\n    groupable: false,\n    hideDefaultLines: false,\n    cspNonce: \"\",\n    translateZ: 0,\n    cssStyled: null,\n    customStyledMap: {},\n    props: {},\n    stopPropagation: false,\n    preventClickDefault: false,\n    preventClickEventOnDrag: true,\n    flushSync: defaultSync,\n    firstRenderState: null,\n    persistData: null,\n    viewContainer: null,\n    requestStyles: [],\n    useAccuratePosition: false\n  };\n  return MoveableManager;\n}(React.PureComponent);\n/**\r\n * The target to indicate Moveable Control Box.\r\n * @name Moveable#target\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.target = document.querySelector(\".target\");\r\n */\n/**\r\n * Zooms in the elements of a moveable.\r\n * @name Moveable#zoom\r\n * @default 1\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.zoom = 2;\r\n */\n/**\r\n * Whether the target size is detected and updated whenever it changes.\r\n * @name Moveable#useResizeObserver\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.useResizeObserver = true;\r\n */\n/**\r\n * Resize, Scale Events at edges\r\n * @name Moveable#edge\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.edge = true;\r\n */\n/**\r\n * You can specify the className of the moveable controlbox.\r\n * @name Moveable#className\r\n * @default \"\"\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   className: \"\",\r\n * });\r\n *\r\n * moveable.className = \"moveable1\";\r\n */\n/**\r\n * The target(s) to drag Moveable target(s)\r\n * @name Moveable#dragTarget\r\n * @default target\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.target = document.querySelector(\".target\");\r\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\r\n */\n/**\r\n * `renderStart` event occurs at the first start of all events.\r\n * @memberof Moveable\r\n * @event renderStart\r\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"renderStart\", ({ target }) => {\r\n *     console.log(\"onRenderStart\", target);\r\n * });\r\n */\n/**\r\n * `render` event occurs before the target is drawn on the screen.\r\n * @memberof Moveable\r\n * @event render\r\n * @param {Moveable.OnRender} - Parameters for the `render` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"render\", ({ target }) => {\r\n *     console.log(\"onRender\", target);\r\n * });\r\n */\n/**\r\n * `renderEnd` event occurs at the end of all events.\r\n * @memberof Moveable\r\n * @event renderEnd\r\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"renderEnd\", ({ target }) => {\r\n *     console.log(\"onRenderEnd\", target);\r\n * });\r\n */\n/**\r\n * `renderGroupStart` event occurs at the first start of all events in group.\r\n * @memberof Moveable\r\n * @event renderGroupStart\r\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\r\n *     console.log(\"onRenderGroupStart\", targets);\r\n * });\r\n */\n/**\r\n * `renderGroup` event occurs before the target is drawn on the screen in group.\r\n * @memberof Moveable\r\n * @event renderGroup\r\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"renderGroup\", ({ targets }) => {\r\n *     console.log(\"onRenderGroup\", targets);\r\n * });\r\n */\n/**\r\n * `renderGroupEnd` event occurs at the end of all events in group.\r\n * @memberof Moveable\r\n * @event renderGroupEnd\r\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\r\n *     console.log(\"onRenderGroupEnd\", targets);\r\n * });\r\n */\n\nvar Groupable = {\n  name: \"groupable\",\n  props: [\"defaultGroupRotate\", \"useDefaultGroupRotate\", \"defaultGroupOrigin\", \"groupable\", \"groupableProps\", \"targetGroups\", \"hideChildMoveableDefaultLines\"],\n  events: [],\n  render: function (moveable, React) {\n    var _a;\n    var props = moveable.props;\n    var targets = props.targets || [];\n    var _b = moveable.getState(),\n      left = _b.left,\n      top = _b.top,\n      isPersisted = _b.isPersisted;\n    var zoom = props.zoom || 1;\n    var renderGroupRects = moveable.renderGroupRects;\n    var persistDatChildren = ((_a = props.persistData) === null || _a === void 0 ? void 0 : _a.children) || [];\n    if (isPersisted) {\n      targets = persistDatChildren.map(function () {\n        return null;\n      });\n    } else {\n      persistDatChildren = [];\n    }\n    var parentPosition = watchValue(moveable, \"parentPosition\", [left, top], function (styles) {\n      return styles.join(\",\");\n    });\n    var requestStyles = watchValue(moveable, \"requestStyles\", moveable.getRequestChildStyles(), function (styles) {\n      return styles.join(\",\");\n    });\n    moveable.moveables = moveable.moveables.slice(0, targets.length);\n    return __spreadArray(__spreadArray([], __read(targets.map(function (target, i) {\n      return React.createElement(MoveableManager, {\n        key: \"moveable\" + i,\n        ref: refs(moveable, \"moveables\", i),\n        target: target,\n        origin: false,\n        requestStyles: requestStyles,\n        cssStyled: props.cssStyled,\n        customStyledMap: props.customStyledMap,\n        useResizeObserver: props.useResizeObserver,\n        useMutationObserver: props.useMutationObserver,\n        hideChildMoveableDefaultLines: props.hideChildMoveableDefaultLines,\n        parentMoveable: moveable,\n        parentPosition: [left, top],\n        persistData: persistDatChildren[i],\n        zoom: zoom\n      });\n    })), false), __read(flat(renderGroupRects.map(function (_a, i) {\n      var pos1 = _a.pos1,\n        pos2 = _a.pos2,\n        pos3 = _a.pos3,\n        pos4 = _a.pos4;\n      var poses = [pos1, pos2, pos3, pos4];\n      return [[0, 1], [1, 3], [3, 2], [2, 0]].map(function (_a, j) {\n        var _b = __read(_a, 2),\n          from = _b[0],\n          to = _b[1];\n        return renderLine(React, \"\", minus(poses[from], parentPosition), minus(poses[to], parentPosition), zoom, \"group-rect-\".concat(i, \"-\").concat(j));\n      });\n    }))), false);\n  }\n};\nvar Clickable = makeAble(\"clickable\", {\n  props: [\"clickable\"],\n  events: [\"click\", \"clickGroup\"],\n  always: true,\n  dragRelation: \"weak\",\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  dragStart: function () {\n    return;\n  },\n  dragControlStart: function () {\n    return;\n  },\n  dragGroupStart: function (moveable, e) {\n    e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n  },\n  dragEnd: function (moveable, e) {\n    var target = moveable.props.target;\n    var inputEvent = e.inputEvent;\n    var inputTarget = e.inputTarget;\n    var isMoveableElement = moveable.isMoveableElement(inputTarget);\n    var containsElement = !isMoveableElement && moveable.controlBox.contains(inputTarget);\n    if (!inputEvent || !inputTarget || e.isDrag || moveable.isMoveableElement(inputTarget) || containsElement\n    // External event duplicate target or dragAreaElement\n    ) {\n      return;\n    }\n    var containsTarget = target.contains(inputTarget);\n    triggerEvent(moveable, \"onClick\", fillParams(moveable, e, {\n      isDouble: e.isDouble,\n      inputTarget: inputTarget,\n      isTarget: target === inputTarget,\n      moveableTarget: moveable.props.target,\n      containsTarget: containsTarget\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    var inputEvent = e.inputEvent;\n    var inputTarget = e.inputTarget;\n    if (!inputEvent || !inputTarget || e.isDrag || moveable.isMoveableElement(inputTarget)\n    // External event duplicate target or dragAreaElement\n    || e.datas.inputTarget === inputTarget) {\n      return;\n    }\n    var targets = moveable.props.targets;\n    var targetIndex = targets.indexOf(inputTarget);\n    var isTarget = targetIndex > -1;\n    var containsTarget = false;\n    if (targetIndex === -1) {\n      targetIndex = findIndex(targets, function (parentTarget) {\n        return parentTarget.contains(inputTarget);\n      });\n      containsTarget = targetIndex > -1;\n    }\n    triggerEvent(moveable, \"onClickGroup\", fillParams(moveable, e, {\n      isDouble: e.isDouble,\n      targets: targets,\n      inputTarget: inputTarget,\n      targetIndex: targetIndex,\n      isTarget: isTarget,\n      containsTarget: containsTarget,\n      moveableTarget: targets[targetIndex]\n    }));\n  },\n  dragControlEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n  }\n});\n/**\r\n * When you click on the element, the `click` event is called.\r\n * @memberof Moveable\r\n * @event click\r\n * @param {Moveable.OnClick} - Parameters for the `click` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\r\n *     // If you click on an element other than the target and not included in the target, index is -1.\r\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\r\n * });\r\n */\n/**\r\n * When you click on the element inside the group, the `clickGroup` event is called.\r\n * @memberof Moveable\r\n * @event clickGroup\r\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\r\n *     // If you click on an element other than the target and not included in the target, index is -1.\r\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\r\n * });\r\n */\n\nfunction getDraggableEvent(e) {\n  var datas = e.originalDatas.draggable;\n  if (!datas) {\n    e.originalDatas.draggable = {};\n    datas = e.originalDatas.draggable;\n  }\n  return __assign(__assign({}, e), {\n    datas: datas\n  });\n}\nvar edgeDraggable = makeAble(\"edgeDraggable\", {\n  css: [\".edge.edgeDraggable.line {\\ncursor: move;\\n}\"],\n  render: function (moveable, React) {\n    var props = moveable.props;\n    var edge = props.edgeDraggable;\n    if (!edge) {\n      return [];\n    }\n    return renderEdgeLines(React, \"edgeDraggable\", edge, moveable.getState().renderPoses, props.zoom);\n  },\n  dragCondition: function (moveable, e) {\n    var _a;\n    var props = moveable.props;\n    var target = (_a = e.inputEvent) === null || _a === void 0 ? void 0 : _a.target;\n    if (!props.edgeDraggable || !target) {\n      return false;\n    }\n    return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"edge\")) && hasClass(target, prefix(\"edgeDraggable\"));\n  },\n  dragStart: function (moveable, e) {\n    return Draggable.dragStart(moveable, getDraggableEvent(e));\n  },\n  drag: function (moveable, e) {\n    return Draggable.drag(moveable, getDraggableEvent(e));\n  },\n  dragEnd: function (moveable, e) {\n    return Draggable.dragEnd(moveable, getDraggableEvent(e));\n  },\n  dragGroupCondition: function (moveable, e) {\n    var _a;\n    var props = moveable.props;\n    var target = (_a = e.inputEvent) === null || _a === void 0 ? void 0 : _a.target;\n    if (!props.edgeDraggable || !target) {\n      return false;\n    }\n    return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n  },\n  dragGroupStart: function (moveable, e) {\n    return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n  },\n  dragGroup: function (moveable, e) {\n    return Draggable.dragGroup(moveable, getDraggableEvent(e));\n  },\n  dragGroupEnd: function (moveable, e) {\n    return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n  },\n  unset: function (moveable) {\n    return Draggable.unset(moveable);\n  }\n});\n/**\r\n * Whether to move by dragging the edge line (default: false)\r\n * @name Moveable.Draggable#edgeDraggable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  draggable: true,\r\n *  edgeDraggable: false,\r\n * });\r\n *\r\n * moveable.edgeDraggable = true;\r\n */\n\nvar IndividualGroupable = {\n  name: \"individualGroupable\",\n  props: [\"individualGroupable\", \"individualGroupableProps\"],\n  events: []\n};\nvar MOVEABLE_ABLES = [BeforeRenderable, Default, Snappable, Pinchable, Draggable, edgeDraggable, Resizable, Scalable, Warpable, Rotatable, Scrollable, Padding, Origin, OriginDraggable, Clippable, Roundable, Groupable, IndividualGroupable, Clickable, DragArea, Renderable];\nvar MOVEABLE_EVENTS = /*#__PURE__*/MOVEABLE_ABLES.reduce(function (current, able) {\n  (able.events || []).forEach(function (name) {\n    pushSet(current, name);\n  });\n  return current;\n}, []);\nvar MOVEABLE_PROPS = /*#__PURE__*/MOVEABLE_ABLES.reduce(function (current, able) {\n  (able.props || []).forEach(function (name) {\n    pushSet(current, name);\n  });\n  return current;\n}, []);\nfunction solveConstantsDistance(_a, pos) {\n  var _b = __read(_a, 3),\n    a = _b[0],\n    b = _b[1],\n    c = _b[2];\n  return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\nfunction solveC(_a, pos) {\n  var _b = __read(_a, 2),\n    a = _b[0],\n    b = _b[1];\n  // ax + by + c = 0\n  // -ax -by;\n  return -a * pos[0] - b * pos[1];\n}\nfunction getMaxPos(poses, index) {\n  return Math.max.apply(Math, __spreadArray([], __read(poses.map(function (_a) {\n    var _b = __read(_a, 4),\n      pos1 = _b[0],\n      pos2 = _b[1],\n      pos3 = _b[2],\n      pos4 = _b[3];\n    return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n  })), false));\n}\nfunction getMinPos(poses, index) {\n  return Math.min.apply(Math, __spreadArray([], __read(poses.map(function (_a) {\n    var _b = __read(_a, 4),\n      pos1 = _b[0],\n      pos2 = _b[1],\n      pos3 = _b[2],\n      pos4 = _b[3];\n    return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n  })), false));\n}\nfunction getGroupRect(parentPoses, rotation) {\n  var _a, _b, _c;\n  var pos1 = [0, 0];\n  var pos2 = [0, 0];\n  var pos3 = [0, 0];\n  var pos4 = [0, 0];\n  var width = 0;\n  var height = 0;\n  if (!parentPoses.length) {\n    return {\n      pos1: pos1,\n      pos2: pos2,\n      pos3: pos3,\n      pos4: pos4,\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0,\n      width: width,\n      height: height,\n      rotation: rotation\n    };\n  }\n  var fixedRotation = throttle(rotation, TINY_NUM);\n  if (fixedRotation % 90) {\n    var rad = fixedRotation / 180 * Math.PI;\n    var a1_1 = Math.tan(rad);\n    var a2_1 = -1 / a1_1;\n    // ax = y  // -ax + y = 0 // 0 => 1\n    // -ax = y // ax + y = 0  // 0 => 3\n    var a1MinMax_1 = [MAX_NUM, MIN_NUM];\n    var a1MinMaxPos_1 = [[0, 0], [0, 0]];\n    var a2MinMax_1 = [MAX_NUM, MIN_NUM];\n    var a2MinMaxPos_1 = [[0, 0], [0, 0]];\n    parentPoses.forEach(function (poses) {\n      poses.forEach(function (pos) {\n        // const b1 = pos[1] - a1 * pos[0];\n        // const b2 = pos[1] - a2 * pos[0];\n        var a1Dist = solveConstantsDistance([-a1_1, 1, 0], pos);\n        var a2Dist = solveConstantsDistance([-a2_1, 1, 0], pos);\n        if (a1MinMax_1[0] > a1Dist) {\n          a1MinMaxPos_1[0] = pos;\n          a1MinMax_1[0] = a1Dist;\n        }\n        if (a1MinMax_1[1] < a1Dist) {\n          a1MinMaxPos_1[1] = pos;\n          a1MinMax_1[1] = a1Dist;\n        }\n        if (a2MinMax_1[0] > a2Dist) {\n          a2MinMaxPos_1[0] = pos;\n          a2MinMax_1[0] = a2Dist;\n        }\n        if (a2MinMax_1[1] < a2Dist) {\n          a2MinMaxPos_1[1] = pos;\n          a2MinMax_1[1] = a2Dist;\n        }\n      });\n    });\n    var _d = __read(a1MinMaxPos_1, 2),\n      a1MinPos = _d[0],\n      a1MaxPos = _d[1];\n    var _e = __read(a2MinMaxPos_1, 2),\n      a2MinPos = _e[0],\n      a2MaxPos = _e[1];\n    var minHorizontalLine = [-a1_1, 1, solveC([-a1_1, 1], a1MinPos)];\n    var maxHorizontalLine = [-a1_1, 1, solveC([-a1_1, 1], a1MaxPos)];\n    var minVerticalLine = [-a2_1, 1, solveC([-a2_1, 1], a2MinPos)];\n    var maxVerticalLine = [-a2_1, 1, solveC([-a2_1, 1], a2MaxPos)];\n    _a = __read([[minHorizontalLine, minVerticalLine], [minHorizontalLine, maxVerticalLine], [maxHorizontalLine, minVerticalLine], [maxHorizontalLine, maxVerticalLine]].map(function (_a) {\n      var _b = __read(_a, 2),\n        line1 = _b[0],\n        line2 = _b[1];\n      return getIntersectionPointsByConstants(line1, line2)[0];\n    }), 4), pos1 = _a[0], pos2 = _a[1], pos3 = _a[2], pos4 = _a[3];\n    width = a2MinMax_1[1] - a2MinMax_1[0];\n    height = a1MinMax_1[1] - a1MinMax_1[0];\n  } else {\n    var minX_1 = getMinPos(parentPoses, 0);\n    var minY_1 = getMinPos(parentPoses, 1);\n    var maxX_1 = getMaxPos(parentPoses, 0);\n    var maxY_1 = getMaxPos(parentPoses, 1);\n    pos1 = [minX_1, minY_1];\n    pos2 = [maxX_1, minY_1];\n    pos3 = [minX_1, maxY_1];\n    pos4 = [maxX_1, maxY_1];\n    width = maxX_1 - minX_1;\n    height = maxY_1 - minY_1;\n    if (fixedRotation % 180) {\n      // 0\n      // 1 2\n      // 3 4\n      // 90\n      // 3 1\n      // 4 2\n      // 180\n      // 4 3\n      // 2 1\n      // 270\n      // 2 4\n      // 1 3\n      // 1, 2, 3,4 = 3 1 4 2\n      var changedX = [pos3, pos1, pos4, pos2];\n      _b = __read(changedX, 4), pos1 = _b[0], pos2 = _b[1], pos3 = _b[2], pos4 = _b[3];\n      width = maxY_1 - minY_1;\n      height = maxX_1 - minX_1;\n    }\n  }\n  if (fixedRotation % 360 > 180) {\n    // 1 2   4 3\n    // 3 4   2 1\n    var changedX = [pos4, pos3, pos2, pos1];\n    _c = __read(changedX, 4), pos1 = _c[0], pos2 = _c[1], pos3 = _c[2], pos4 = _c[3];\n  }\n  var _f = getMinMaxs([pos1, pos2, pos3, pos4]),\n    minX = _f.minX,\n    minY = _f.minY,\n    maxX = _f.maxX,\n    maxY = _f.maxY;\n  return {\n    pos1: pos1,\n    pos2: pos2,\n    pos3: pos3,\n    pos4: pos4,\n    width: width,\n    height: height,\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY,\n    rotation: rotation\n  };\n}\nfunction findMoveableGroups(moveables, childTargetGroups) {\n  var groups = childTargetGroups.map(function (targetGroup) {\n    if (isArray(targetGroup)) {\n      var childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n      var length_1 = childMoveableGroups.length;\n      if (length_1 > 1) {\n        return childMoveableGroups;\n      } else if (length_1 === 1) {\n        return childMoveableGroups[0];\n      } else {\n        return null;\n      }\n    } else {\n      var checked = find(moveables, function (_a) {\n        var manager = _a.manager;\n        return manager.props.target === targetGroup;\n      });\n      if (checked) {\n        checked.finded = true;\n        return checked.manager;\n      }\n      return null;\n    }\n  }).filter(Boolean);\n  if (groups.length === 1 && isArray(groups[0])) {\n    return groups[0];\n  }\n  return groups;\n}\n/**\r\n * @namespace Moveable.Group\r\n * @description You can make targets moveable.\r\n */\nvar MoveableGroup = /*#__PURE__*/function (_super) {\n  __extends(MoveableGroup, _super);\n  function MoveableGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.differ = new ChildrenDiffer();\n    _this.moveables = [];\n    _this.transformOrigin = \"50% 50%\";\n    _this.renderGroupRects = [];\n    _this._targetGroups = [];\n    _this._hasFirstTargets = false;\n    return _this;\n  }\n  MoveableGroup.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n  };\n  MoveableGroup.prototype.checkUpdate = function () {\n    this._isPropTargetChanged = false;\n    this.updateAbles();\n  };\n  MoveableGroup.prototype.getTargets = function () {\n    return this.props.targets;\n  };\n  MoveableGroup.prototype.updateRect = function (type, isTarget, isSetState) {\n    var _a;\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    var state = this.state;\n    if (!this.controlBox || state.isPersisted) {\n      return;\n    }\n    setStoreCache(true);\n    this.moveables.forEach(function (moveable) {\n      moveable.updateRect(type, false, false);\n    });\n    var props = this.props;\n    var moveables = this.moveables;\n    var target = state.target || props.target;\n    var checkeds = moveables.map(function (moveable) {\n      return {\n        finded: false,\n        manager: moveable\n      };\n    });\n    var targetGroups = this.props.targetGroups || [];\n    var moveableGroups = findMoveableGroups(checkeds, targetGroups);\n    var useDefaultGroupRotate = props.useDefaultGroupRotate;\n    moveableGroups.push.apply(moveableGroups, __spreadArray([], __read(checkeds.filter(function (_a) {\n      var finded = _a.finded;\n      return !finded;\n    }).map(function (_a) {\n      var manager = _a.manager;\n      return manager;\n    })), false));\n    var renderGroupRects = [];\n    var isReset = !isTarget || type !== \"\" && props.updateGroup;\n    var defaultGroupRotate = props.defaultGroupRotate || 0;\n    if (!this._hasFirstTargets) {\n      var persistedRoatation = (_a = props.persistData) === null || _a === void 0 ? void 0 : _a.rotation;\n      if (persistedRoatation != null) {\n        defaultGroupRotate = persistedRoatation;\n      }\n    }\n    function getMoveableGroupRect(group, parentRotation, isRoot) {\n      var posesRotations = group.map(function (moveable) {\n        if (isArray(moveable)) {\n          var rect = getMoveableGroupRect(moveable, parentRotation);\n          var poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n          renderGroupRects.push(rect);\n          return {\n            poses: poses,\n            rotation: rect.rotation\n          };\n        } else {\n          return {\n            poses: getAbsolutePosesByState(moveable.state),\n            rotation: moveable.getRotation()\n          };\n        }\n      });\n      var rotations = posesRotations.map(function (_a) {\n        var rotation = _a.rotation;\n        return rotation;\n      });\n      var groupRotation = 0;\n      var firstRotation = rotations[0];\n      var isSameRotation = rotations.every(function (nextRotation) {\n        return Math.abs(firstRotation - nextRotation) < 0.1;\n      });\n      if (isReset) {\n        groupRotation = !useDefaultGroupRotate && isSameRotation ? firstRotation : defaultGroupRotate;\n      } else {\n        groupRotation = !useDefaultGroupRotate && !isRoot && isSameRotation ? firstRotation : parentRotation;\n      }\n      var groupPoses = posesRotations.map(function (_a) {\n        var poses = _a.poses;\n        return poses;\n      });\n      var groupRect = getGroupRect(groupPoses, groupRotation);\n      return groupRect;\n    }\n    var rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n    if (isReset) {\n      // reset rotataion\n      this.rotation = rootGroupRect.rotation;\n      this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n      this.scale = [1, 1];\n    }\n    this._targetGroups = targetGroups;\n    this.renderGroupRects = renderGroupRects;\n    var transformOrigin = this.transformOrigin;\n    var rotation = this.rotation;\n    var scale = this.scale;\n    var width = rootGroupRect.width,\n      height = rootGroupRect.height,\n      minX = rootGroupRect.minX,\n      minY = rootGroupRect.minY;\n    var posesInfo = rotatePosesInfo([[0, 0], [width, 0], [0, height], [width, height]], convertTransformOriginArray(transformOrigin, width, height), this.rotation / 180 * Math.PI);\n    var _b = getMinMaxs(posesInfo.result),\n      deltaX = _b.minX,\n      deltaY = _b.minY;\n    var rotateScale = \" rotate(\".concat(rotation, \"deg)\") + \" scale(\".concat(sign(scale[0]), \", \").concat(sign(scale[1]), \")\");\n    var transform = \"translate(\".concat(-deltaX, \"px, \").concat(-deltaY, \"px)\").concat(rotateScale);\n    this.controlBox.style.transform = \"translate3d(\".concat(minX, \"px, \").concat(minY, \"px, \").concat(this.props.translateZ || 0, \")\");\n    target.style.cssText += \"left:0px;top:0px;\" + \"transform-origin:\".concat(transformOrigin, \";\") + \"width:\".concat(width, \"px;height:\").concat(height, \"px;\") + \"transform: \".concat(transform);\n    state.width = width;\n    state.height = height;\n    var container = this.getContainer();\n    var info = getMoveableTargetInfo(this.controlBox, target, this.controlBox, this.getContainer(), this._rootContainer || container, []);\n    var pos = [info.left, info.top];\n    var _c = __read(getAbsolutePosesByState(info), 4),\n      pos1 = _c[0],\n      pos2 = _c[1],\n      pos3 = _c[2],\n      pos4 = _c[3]; // info.left + info.pos(1 ~ 4)\n    var minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n    var delta = [minPos.minX, minPos.minY];\n    var direction = sign(scale[0] * scale[1]);\n    info.pos1 = minus(pos1, delta);\n    info.pos2 = minus(pos2, delta);\n    info.pos3 = minus(pos3, delta);\n    info.pos4 = minus(pos4, delta);\n    // info.left = info.left + delta[0];\n    // info.top = info.top + delta[1];\n    info.left = minX - info.left + delta[0];\n    info.top = minY - info.top + delta[1];\n    info.origin = minus(plus(pos, info.origin), delta);\n    info.beforeOrigin = minus(plus(pos, info.beforeOrigin), delta);\n    info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin);\n    info.transformOrigin = minus(plus(pos, info.transformOrigin), delta);\n    target.style.transform = \"translate(\".concat(-deltaX - delta[0], \"px, \").concat(-deltaY - delta[1], \"px)\") + rotateScale;\n    setStoreCache();\n    this.updateState(__assign(__assign({}, info), {\n      posDelta: delta,\n      direction: direction,\n      beforeDirection: direction\n    }), isSetState);\n  };\n  MoveableGroup.prototype.getRect = function () {\n    return __assign(__assign({}, _super.prototype.getRect.call(this)), {\n      children: this.moveables.map(function (child) {\n        return child.getRect();\n      })\n    });\n  };\n  MoveableGroup.prototype.triggerEvent = function (name, e, isManager) {\n    if (isManager || name.indexOf(\"Group\") > -1) {\n      return _super.prototype.triggerEvent.call(this, name, e);\n    } else {\n      this._emitter.trigger(name, e);\n    }\n  };\n  MoveableGroup.prototype.getRequestChildStyles = function () {\n    var styleNames = this.getEnabledAbles().reduce(function (names, able) {\n      var _a, _b;\n      var ableStyleNames = (_b = (_a = able.requestChildStyle) === null || _a === void 0 ? void 0 : _a.call(able)) !== null && _b !== void 0 ? _b : [];\n      return __spreadArray(__spreadArray([], __read(names), false), __read(ableStyleNames), false);\n    }, []);\n    return styleNames;\n  };\n  MoveableGroup.prototype.getMoveables = function () {\n    return __spreadArray([], __read(this.moveables), false);\n  };\n  MoveableGroup.prototype.updateAbles = function () {\n    _super.prototype.updateAbles.call(this, __spreadArray(__spreadArray([], __read(this.props.ables), false), [Groupable], false), \"Group\");\n  };\n  MoveableGroup.prototype._updateTargets = function () {\n    _super.prototype._updateTargets.call(this);\n    this._originalDragTarget = this.props.dragTarget || this.areaElement;\n    this._dragTarget = getRefTarget(this._originalDragTarget, true);\n  };\n  MoveableGroup.prototype._updateEvents = function () {\n    var state = this.state;\n    var props = this.props;\n    var prevTarget = this._prevDragTarget;\n    var nextTarget = props.dragTarget || this.areaElement;\n    var targets = props.targets;\n    var _a = this.differ.update(targets),\n      added = _a.added,\n      changed = _a.changed,\n      removed = _a.removed;\n    var isTargetChanged = added.length || removed.length;\n    if (isTargetChanged || this._prevOriginalDragTarget !== this._originalDragTarget) {\n      unsetGesto(this, false);\n      unsetGesto(this, true);\n      this.updateState({\n        gestos: {}\n      });\n    }\n    if (prevTarget !== nextTarget) {\n      state.target = null;\n    }\n    if (!state.target) {\n      state.target = this.areaElement;\n      this.controlBox.style.display = \"block\";\n    }\n    if (state.target) {\n      if (!this.targetGesto) {\n        this.targetGesto = getTargetAbleGesto(this, this._dragTarget, \"Group\");\n      }\n      if (!this.controlGesto) {\n        this.controlGesto = getControlAbleGesto(this, \"GroupControl\");\n      }\n    }\n    var isContainerChanged = !equals(state.container, props.container);\n    if (isContainerChanged) {\n      state.container = props.container;\n    }\n    if (isContainerChanged || isTargetChanged || this.transformOrigin !== (props.defaultGroupOrigin || \"50% 50%\") || changed.length || targets.length && !isDeepArrayEquals(this._targetGroups, props.targetGroups || [])) {\n      this.updateRect();\n      this._hasFirstTargets = true;\n    }\n    this._isPropTargetChanged = !!isTargetChanged;\n  };\n  MoveableGroup.prototype._updateObserver = function () {};\n  MoveableGroup.defaultProps = __assign(__assign({}, MoveableManager.defaultProps), {\n    transformOrigin: [\"50%\", \"50%\"],\n    groupable: true,\n    dragArea: true,\n    keepRatio: true,\n    targets: [],\n    defaultGroupRotate: 0,\n    defaultGroupOrigin: \"50% 50%\"\n  });\n  return MoveableGroup;\n}(MoveableManager);\n\n/**\r\n * @namespace Moveable.IndividualGroup\r\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\r\n */\nvar MoveableIndividualGroup = /*#__PURE__*/function (_super) {\n  __extends(MoveableIndividualGroup, _super);\n  function MoveableIndividualGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.moveables = [];\n    return _this;\n  }\n  MoveableIndividualGroup.prototype.render = function () {\n    var _this = this;\n    var _a;\n    var props = this.props;\n    var cspNonce = props.cspNonce,\n      ControlBoxElement = props.cssStyled,\n      persistData = props.persistData;\n    var targets = props.targets || [];\n    var length = targets.length;\n    var canPersist = this.isUnmounted || !length;\n    var persistDatChildren = (_a = persistData === null || persistData === void 0 ? void 0 : persistData.children) !== null && _a !== void 0 ? _a : [];\n    if (canPersist && !length && persistDatChildren.length) {\n      targets = persistDatChildren.map(function () {\n        return null;\n      });\n    } else if (!canPersist) {\n      persistDatChildren = [];\n    }\n    return React.createElement(ControlBoxElement, {\n      cspNonce: cspNonce,\n      ref: ref(this, \"controlBox\"),\n      className: prefix(\"control-box\")\n    }, targets.map(function (target, i) {\n      var _a, _b;\n      var individualProps = (_b = (_a = props.individualGroupableProps) === null || _a === void 0 ? void 0 : _a.call(props, target, i)) !== null && _b !== void 0 ? _b : {};\n      return React.createElement(MoveableManager, __assign({\n        key: \"moveable\" + i,\n        ref: refs(_this, \"moveables\", i)\n      }, props, individualProps, {\n        target: target,\n        wrapperMoveable: _this,\n        isWrapperMounted: _this.isMoveableMounted,\n        persistData: persistDatChildren[i]\n      }));\n    }));\n  };\n  MoveableIndividualGroup.prototype.componentDidMount = function () {};\n  MoveableIndividualGroup.prototype.componentDidUpdate = function () {};\n  MoveableIndividualGroup.prototype.getTargets = function () {\n    return this.props.targets;\n  };\n  MoveableIndividualGroup.prototype.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    setStoreCache(true);\n    this.moveables.forEach(function (moveable) {\n      moveable.updateRect(type, isTarget, isSetState);\n    });\n    setStoreCache();\n  };\n  MoveableIndividualGroup.prototype.getRect = function () {\n    return __assign(__assign({}, _super.prototype.getRect.call(this)), {\n      children: this.moveables.map(function (child) {\n        return child.getRect();\n      })\n    });\n  };\n  MoveableIndividualGroup.prototype.request = function (ableName, param, isInstant) {\n    if (param === void 0) {\n      param = {};\n    }\n    var results = this.moveables.map(function (m) {\n      return m.request(ableName, __assign(__assign({}, param), {\n        isInstant: false\n      }), false);\n    });\n    var requestInstant = isInstant || param.isInstant;\n    var requester = {\n      request: function (ableParam) {\n        results.forEach(function (r) {\n          return r.request(ableParam);\n        });\n        return this;\n      },\n      requestEnd: function () {\n        results.forEach(function (r) {\n          return r.requestEnd();\n        });\n        return this;\n      }\n    };\n    return requestInstant ? requester.request(param).requestEnd() : requester;\n  };\n  MoveableIndividualGroup.prototype.dragStart = function (e, target) {\n    if (target === void 0) {\n      target = e.target;\n    }\n    var inputTarget = target;\n    var childMoveable = find(this.moveables, function (child) {\n      var target = child.getTargets()[0];\n      var controlBoxElement = child.getControlBoxElement();\n      var dragElement = child.getDragElement();\n      if (!target || !dragElement) {\n        return false;\n      }\n      return dragElement === inputTarget || dragElement.contains(inputTarget) || dragElement !== target && target === inputTarget || target.contains(inputTarget) || controlBoxElement === inputTarget || controlBoxElement.contains(inputTarget);\n    });\n    if (childMoveable) {\n      childMoveable.dragStart(e, target);\n    }\n    return this;\n  };\n  MoveableIndividualGroup.prototype.hitTest = function () {\n    return 0;\n  };\n  MoveableIndividualGroup.prototype.isInside = function () {\n    return false;\n  };\n  MoveableIndividualGroup.prototype.isDragging = function () {\n    return false;\n  };\n  MoveableIndividualGroup.prototype.getDragElement = function () {\n    return null;\n  };\n  MoveableIndividualGroup.prototype.getMoveables = function () {\n    return __spreadArray([], __read(this.moveables), false);\n  };\n  MoveableIndividualGroup.prototype.updateRenderPoses = function () {};\n  MoveableIndividualGroup.prototype.checkUpdate = function () {};\n  MoveableIndividualGroup.prototype.triggerEvent = function () {};\n  MoveableIndividualGroup.prototype.updateAbles = function () {};\n  MoveableIndividualGroup.prototype._updateEvents = function () {};\n  MoveableIndividualGroup.prototype._updateObserver = function () {};\n  return MoveableIndividualGroup;\n}(MoveableManager);\nfunction getElementTargets(refTargets, selectorMap) {\n  var elementTargets = [];\n  refTargets.forEach(function (target) {\n    if (!target) {\n      return;\n    }\n    if (isString(target)) {\n      if (selectorMap[target]) {\n        elementTargets.push.apply(elementTargets, __spreadArray([], __read(selectorMap[target]), false));\n      }\n      return;\n    }\n    if (isArray(target)) {\n      elementTargets.push.apply(elementTargets, __spreadArray([], __read(getElementTargets(target, selectorMap)), false));\n    } else {\n      elementTargets.push(target);\n    }\n  });\n  return elementTargets;\n}\nfunction getTargetGroups(refTargets, selectorMap) {\n  var targetGroups = [];\n  refTargets.forEach(function (target) {\n    if (!target) {\n      return;\n    }\n    if (isString(target)) {\n      if (selectorMap[target]) {\n        targetGroups.push.apply(targetGroups, __spreadArray([], __read(selectorMap[target]), false));\n      }\n      return;\n    }\n    if (isArray(target)) {\n      targetGroups.push(getTargetGroups(target, selectorMap));\n    } else {\n      targetGroups.push(target);\n    }\n  });\n  return targetGroups;\n}\nfunction compareRefTargets(prevRefTargets, nextRefTargets) {\n  return prevRefTargets.length !== nextRefTargets.length || prevRefTargets.some(function (target, i) {\n    var nextTarget = nextRefTargets[i];\n    if (!target && !nextTarget) {\n      return false;\n    } else if (target != nextTarget) {\n      if (isArray(target) && isArray(nextTarget)) {\n        return compareRefTargets(target, nextTarget);\n      }\n      return true;\n    }\n    return false;\n  });\n}\nvar InitialMoveable = /*#__PURE__*/function (_super) {\n  __extends(InitialMoveable, _super);\n  function InitialMoveable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.refTargets = [];\n    _this.selectorMap = {};\n    _this._differ = new ChildrenDiffer();\n    _this._elementTargets = [];\n    _this._tmpRefTargets = [];\n    _this._tmpSelectorMap = {};\n    _this._onChangeTargets = null;\n    return _this;\n  }\n  InitialMoveable.makeStyled = function () {\n    var cssMap = {};\n    var ables = this.getTotalAbles();\n    ables.forEach(function (_a) {\n      var css = _a.css;\n      if (!css) {\n        return;\n      }\n      css.forEach(function (text) {\n        cssMap[text] = true;\n      });\n    });\n    var style = getKeys(cssMap).join(\"\\n\");\n    this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n  };\n  InitialMoveable.getTotalAbles = function () {\n    return __spreadArray([Default, Groupable, IndividualGroupable, DragArea], __read(this.defaultAbles), false);\n  };\n  InitialMoveable.prototype.render = function () {\n    var _a;\n    var moveableContructor = this.constructor;\n    if (!moveableContructor.defaultStyled) {\n      moveableContructor.makeStyled();\n    }\n    var _b = this.props,\n      userAbles = _b.ables,\n      userProps = _b.props,\n      props = __rest(_b, [\"ables\", \"props\"]);\n    var _c = __read(this._updateRefs(true), 2),\n      refTargets = _c[0],\n      nextSelectorMap = _c[1];\n    var elementTargets = getElementTargets(refTargets, nextSelectorMap);\n    var isGroup = elementTargets.length > 1;\n    var totalAbles = moveableContructor.getTotalAbles();\n    var ables = __spreadArray(__spreadArray([], __read(totalAbles), false), __read(userAbles || []), false);\n    var nextProps = __assign(__assign(__assign({}, props), userProps || {}), {\n      ables: ables,\n      cssStyled: moveableContructor.defaultStyled,\n      customStyledMap: moveableContructor.customStyledMap\n    });\n    this._elementTargets = elementTargets;\n    var firstRenderState = null;\n    var prevMoveable = this.moveable;\n    var persistData = props.persistData;\n    if (persistData === null || persistData === void 0 ? void 0 : persistData.children) {\n      isGroup = true;\n    }\n    // Even one child is treated as a group if individualGroupable is enabled. #867\n    if (props.individualGroupable) {\n      return React.createElement(MoveableIndividualGroup, __assign({\n        key: \"individual-group\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, {\n        target: null,\n        targets: elementTargets\n      }));\n    }\n    if (isGroup) {\n      var targetGroups = getTargetGroups(refTargets, nextSelectorMap);\n      // manager\n      if (prevMoveable && !prevMoveable.props.groupable && !prevMoveable.props.individualGroupable) {\n        var target = prevMoveable.props.target;\n        if (target && elementTargets.indexOf(target) > -1) {\n          firstRenderState = __assign({}, prevMoveable.state);\n        }\n      }\n      return React.createElement(MoveableGroup, __assign({\n        key: \"group\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, (_a = props.groupableProps) !== null && _a !== void 0 ? _a : {}, {\n        target: null,\n        targets: elementTargets,\n        targetGroups: targetGroups,\n        firstRenderState: firstRenderState\n      }));\n    } else {\n      var target_1 = elementTargets[0];\n      // manager\n      if (prevMoveable && (prevMoveable.props.groupable || prevMoveable.props.individualGroupable)) {\n        var moveables = prevMoveable.moveables || [];\n        var prevTargetMoveable = find(moveables, function (mv) {\n          return mv.props.target === target_1;\n        });\n        if (prevTargetMoveable) {\n          firstRenderState = __assign({}, prevTargetMoveable.state);\n        }\n      }\n      return React.createElement(MoveableManager, __assign({\n        key: \"single\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, {\n        target: target_1,\n        firstRenderState: firstRenderState\n      }));\n    }\n  };\n  InitialMoveable.prototype.componentDidMount = function () {\n    this._checkChangeTargets();\n  };\n  InitialMoveable.prototype.componentDidUpdate = function () {\n    this._checkChangeTargets();\n  };\n  InitialMoveable.prototype.componentWillUnmount = function () {\n    this.selectorMap = {};\n    this.refTargets = [];\n  };\n  /**\r\n   * Get targets set in moveable through target or targets of props.\r\n   * @method Moveable#getTargets\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body, {\r\n   *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\r\n   * });\r\n   *\r\n   * console.log(moveable.getTargets());\r\n   */\n  InitialMoveable.prototype.getTargets = function () {\n    var _a, _b;\n    return (_b = (_a = this.moveable) === null || _a === void 0 ? void 0 : _a.getTargets()) !== null && _b !== void 0 ? _b : [];\n  };\n  /**\r\n   * If the element list corresponding to the selector among the targets is changed, it is updated.\r\n   * @method Moveable#updateSelectors\r\n   * @example\r\n   * import Moveable from \"moveable\";\r\n   *\r\n   * const moveable = new Moveable(document.body, {\r\n   *    target: \".target\",\r\n   * });\r\n   *\r\n   * moveable.updateSelectors();\r\n   */\n  InitialMoveable.prototype.updateSelectors = function () {\n    this.selectorMap = {};\n    this._updateRefs();\n    this.forceUpdate();\n  };\n  /**\r\n   * User changes target and waits for target to change.\r\n   * @method Moveable#waitToChangeTarget\r\n   * @story combination-with-other-components--components-selecto\r\n   * @example\r\n   * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\r\n   *   moveable.waitToChangeTarget().then(() => {\r\n   *      moveable.dragStart(e, e.currentTarget);\r\n   *   });\r\n   *   moveable.target = e.currentTarget;\r\n   * });\r\n   */\n  InitialMoveable.prototype.waitToChangeTarget = function () {\n    // let resolvePromise: (e: OnChangeTarget) => void;\n    var _this = this;\n    // this._onChangeTargets = () => {\n    //     this._onChangeTargets = null;\n    //     resolvePromise({\n    //         moveable: this.getManager(),\n    //         targets: this._elementTargets,\n    //     });\n    // };\n    // return new Promise<OnChangeTarget>(resolve => {\n    //     resolvePromise = resolve;\n    // });\n    var resolvePromise;\n    this._onChangeTargets = function () {\n      _this._onChangeTargets = null;\n      resolvePromise();\n    };\n    return new Promise(function (resolve) {\n      resolvePromise = resolve;\n    });\n  };\n  InitialMoveable.prototype.waitToChangeTargets = function () {\n    return this.waitToChangeTarget();\n  };\n  InitialMoveable.prototype.getManager = function () {\n    return this.moveable;\n  };\n  InitialMoveable.prototype.getMoveables = function () {\n    return this.moveable.getMoveables();\n  };\n  InitialMoveable.prototype.getDragElement = function () {\n    return this.moveable.getDragElement();\n  };\n  InitialMoveable.prototype._updateRefs = function (isRender) {\n    var prevRefTargets = this.refTargets;\n    var nextRefTargets = getRefTargets(this.props.target || this.props.targets);\n    var isBrowser = typeof document !== \"undefined\";\n    var isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n    var selectorMap = this.selectorMap;\n    var nextSelectorMap = {};\n    this.refTargets.forEach(function updateSelectorMap(target) {\n      if (isString(target)) {\n        var selectorTarget = selectorMap[target];\n        if (selectorTarget) {\n          nextSelectorMap[target] = selectorMap[target];\n        } else if (isBrowser) {\n          isUpdate = true;\n          nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n        }\n      } else if (isArray(target)) {\n        target.forEach(updateSelectorMap);\n      }\n    });\n    this._tmpRefTargets = nextRefTargets;\n    this._tmpSelectorMap = nextSelectorMap;\n    return [nextRefTargets, nextSelectorMap, !isRender && isUpdate];\n  };\n  InitialMoveable.prototype._checkChangeTargets = function () {\n    var _a, _b, _c;\n    this.refTargets = this._tmpRefTargets;\n    this.selectorMap = this._tmpSelectorMap;\n    var _d = this._differ.update(this._elementTargets),\n      added = _d.added,\n      removed = _d.removed;\n    var isTargetChanged = added.length || removed.length;\n    if (isTargetChanged) {\n      (_b = (_a = this.props).onChangeTargets) === null || _b === void 0 ? void 0 : _b.call(_a, {\n        moveable: this.moveable,\n        targets: this._elementTargets\n      });\n      (_c = this._onChangeTargets) === null || _c === void 0 ? void 0 : _c.call(this);\n    }\n    var _e = __read(this._updateRefs(), 3),\n      refTargets = _e[0],\n      selectorMap = _e[1],\n      isUpdate = _e[2];\n    this.refTargets = refTargets;\n    this.selectorMap = selectorMap;\n    if (isUpdate) {\n      this.forceUpdate();\n    }\n  };\n  InitialMoveable.defaultAbles = [];\n  InitialMoveable.customStyledMap = {};\n  InitialMoveable.defaultStyled = null;\n  __decorate([withMethods(MOVEABLE_METHODS)], InitialMoveable.prototype, \"moveable\", void 0);\n  return InitialMoveable;\n}(React.PureComponent);\nvar Moveable = /*#__PURE__*/function (_super) {\n  __extends(Moveable, _super);\n  function Moveable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Moveable.defaultAbles = MOVEABLE_ABLES;\n  return Moveable;\n}(InitialMoveable);\nfunction makeMoveable(ables) {\n  var _a;\n  return _a = /*#__PURE__*/function (_super) {\n    __extends(Moveable, _super);\n    function Moveable() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Moveable;\n  }(InitialMoveable), _a.defaultAbles = ables, _a;\n}\nexport { Clippable, DIRECTIONS, Draggable, edgeDraggable as EdgeDraggable, InitialMoveable, MOVEABLE_ABLES, MOVEABLE_EVENTS, MOVEABLE_METHODS, MOVEABLE_PROPS, Pinchable, Resizable, Rotatable, Roundable, Scalable, Snappable, Warpable, calculateElementPosition, Moveable as default, getElementInfo, makeAble, makeMoveable };","map":{"version":3,"names":["makeAble","name","able","__assign","events","props","DIRECTIONS4","DIRECTIONS","getSVGCursor","scale","degree","concat","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","browserName","browserVersion","parseInt","version","IS_CHROME","IS_CHROMIUM","chromium","chromiumVersion","IS_CHROMIUM109","IS_FIREFOX","IS_SAFARI_ABOVE15","webkitVersion","PREFIX","directionCSS","map","dir","top","left","originX","originY","offset","indexOf","join","MOVEABLE_CSS","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTION_REGION_TO_DIRECTION","n","e","s","w","nw","ne","sw","se","DIRECTION_INDEXES","DIRECTION_ROTATIONS","MOVEABLE_METHODS","setCustomDrag","state","delta","isPinch","isConvert","ableName","result","_b","_a","gestos","move","inputEvent","datas","originalDatas","ableDatas","convertDragDist","parentEvent","CustomGesto","prevX","prevY","startX","startY","isDrag","isFlag","draggable","prototype","dragStart","client","type","drag","clientX","clientY","isFirstDrag","isPrevDrag","distX","distY","deltaX","deltaY","parentGesto","calculateElementPosition","matrix","origin","width","height","is3d","length","poses","calculatePoses","__read","y1","_c","x2","y2","_d","x3","y3","_e","x4","y4","_f","calculatePosition","min","right","max","bottom","sx","sy","direction","sign","pos1","pos2","pos3","pos4","calculatePointerDist","moveable","moveableClientRect","rootMatrix","minus","calculateInversePosition","posX","posY","getDragDist","setDragStart","allMatrix","beforeMatrix","offsetMatrix","targetMatrix","transformOrigin","inverseMatrix","invert","inverseBeforeMatrix","absoluteOrigin","convertPositionMatrix","plus","startDragBeforeDist","calculate","startDragDist","getTransformDirection","beforeTransform","resolveTransformEvent","event","functionName","beforeRenderable","index","transformIndex","nextTransforms","nextTransformAppendedIndexes","nextIndex","findIndex","text","match","find","info","filter","convertTransformInfo","targetFunction","matFunctionName","beforeFunctionTexts","afterFunctionTexts","beforeFunctionMatrix","beforeTransform2","beforeFunctionMatrix2","targetTansform","targetFunctionMatrix","afterTransform","afterFunctionMatrix","afterTransform2","afterFunctionMatrix2","targetAllTransform","allFunctionMatrix","splice","isAppendTransform","__spreadArray","isAppend","convertTransformFormat","value","dist","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","multiply","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","prevWidth","prevHeight","prevOrigin","pos","i","splitUnit","unit","prevSize","size","isNaN","measureRatio","getPosIndexesByDirection","indexes","push","getPosesByDirection","getPosBySingleDirection","ratio","dot","getPosByDirection","getDist","startPos","fixedDirection","fixedPos","getNextMatrix","getAbsoluteMatrix","getNextTransformMatrix","transform","isAllTransform","targetTransform","isString","convertDimension","parseMat","scaleMatrix","createScaleMatrix","fillTransformStartEvent","getBeforeRenderableDatas","setTransform","startTransforms","isArray","splitSpace","setTransformIndex","setDefaultTransformIndex","property","func","parse","x%","v","offsetWidth","y%","offsetHeight","startValue","functionValue","fillOriginalTransform","getNextTransforms","getNextTransformText","getNextStyle","nextStyle","fillTransformEvent","nextTransform","Draggable","fillCSSObject","getTranslateFixedPosition","fixedOffset","nextMatrix","nextFixedPosition","getDirectionOffset","getTranslateDist","fixedPosition","groupable","groupLeft","groupTop","getScaleDist","getDirectionByPos","fixedOffsetPosition","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","getAbsolutePosesByState","getGestoData","targetGesto","controlGesto","data","getEventData","getShadowRoot","parentElement","getRootNode","rootNode","nodeType","getIndividualTransforms","getStyle","rotate","translate","individualTransforms","split","getMatrixStackInfo","target","container","checkContainer","el","matrixes","documentElement","getDocumentElement","getDocumentBody","requestEnd","isEnd","targetTransformOrigin","hasFixed","offsetContainer","getOffsetInfo","offsetParent","zoom","getCachedStyle","position","getElementTransform","isFixed","convertCSStoMatrix","getTransformMatrix","isOffsetEnd","isStatic","parentClientLeft","parentClientTop","fixedClientLeft","fixedClientTop","fixedInfo","hasTransform","fixedContainer","getPositionFixedInfo","length_1","convert3DMatrixes","getOffsetPosInfo","tagName","hasOffset","isSVG","origin_1","targetOrigin","offsetPos","offsetLeft","offsetTop","ownerSVGElement","getSVGMatrix","createIdentityMatrix","targetZoom","offsetInfo","offsetZoom","isCustomElement","parentSlotElement","customOffsetParent","customOffsetLeft","customOffsetTop","clientLeft","clientTop","margin","getBodyOffset","isElementTarget","scrollLeft","scrollTop","createOriginMatrix","cacheStyleMap","clientRectStyleMap","matrixContainerInfos","setStoreCache","useCache","Map","getCachedClientRect","clientRect","get","nextClientRect","getClientRect","set","getCachedMatrixContainerInfo","result_1","element","cache","nextStyle_1","getWindow","getComputedStyle","style","cached","fillChildEvents","groupableDatas","childDatas","moveables","_","isRequestChild","triggerChildGesto","isStart","childEvents","eventParams","ev","childMoveable","childEvent","childGestos","parentFlag","child","triggerChildAbles","eachEvent","callback","childs","startChildDist","parentDatas","startPositions","createRotateMatrix","rotation","PI","originalX","originalY","renderDirectionControlsByInfos","renderDirections","React","getState","renderPoses","rotationRad","getProps","degRotation","absDegree","directionMap","renderState","renderDirectionMap","forEach","directionSign","classNames","directionRotation","throttle","dataAttrs","getKeys","createElement","className","prefix","apply","key","getControlTransform","renderDirectionControls","defaultDirections","directions","displayAroundControls","renderAroundControls","renderLine","_i","arguments","rad","getRad","getLineStyle","renderEdgeLines","edge","index1","index2","Boolean","getRenderDirections","renderDiagonalDirections","renderAllDirections","checkBoundPoses","bounds","verticalPoses","horizontalPoses","Infinity","nextBounds","vertical","checkBounds","horizontal","getBounds","externalBounds","containerClientRect","containerHeight","clientHeight","containerWidth","clientWidth","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetRight","snapOffsetBottom","isCSS","_g","checkBoundKeepRatio","endPos","endX","endY","dx","dy","abs","isBottom","isRight","verticalInfo","isBound","horizontalInfo","a","b","y","x","isVertical","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","sort","isBoundRotate$1","isBoundRotate","relativePoses","boundRect","nextPoses","some","boundRotate","vec","boundPos","r","getDistSize","nextPos","sqrt","checkRotateBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","relativeRad1","relativeRad2","nextRad","VERTICAL_NAMES","HORIZONTAL_NAMES","SNAP_SKIP_NAMES_MAP","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","getInitialBounds","hasGuidelines","snappable","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","getSnapDirections","snapDirections","mapSnapDirectionPoses","snapPoses","nextSnapDirections","nextSnapPoses","name_1","splitSnapDirectionPoses","horizontalNames","verticalNames","calculateContainerPos","containerRect","clientPos","solveLineConstants","point1","point2","TINY_NUM$1","c","NAME_snapRotationThreshold","NAME_snapRotationDegrees","NAME_snapHorizontalThreshold","NAME_snapVerticalThreshold","checkMoveableSnapPoses","posesX","posesY","dirXs","dirYs","customSnapVerticalThreshold","customSnapHorizontalThreshold","snapThresholdMultiples","snapThresholdInfo","multiples","snapHorizontalThreshold","selectValue","snapVerticalThreshold","checkSnapPoses","checkSnap","checkSnapKeepRatio","getTinyDist","isSnap","undefined","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","guideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","getStringDirection","stringDirection","checkSnaps","rect","horizontalDirection","verticalDirection","snapInfo","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","snapThreshold","dirs","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","arr","nextDir","keepRatio","xs","ys","checkSnapBoundPriority","aDist","bDist","getNearOffsetInfo","offsets","slice","aSign","bSign","aOffset","bOffset","getCheckSnapDirections","endDirection_1","signX","signY","nextDirection","signs","isStartLine","line","cx","average","cy","hitTestLine","test1","test2","isSameStartLine","dots","centerSign","error","every","checkInnerBoundDot","threshold","checkInnerBound","verticalSign","horizontalSign","lineConstants","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","maxOffset","horizontalOffset","boundLine","isRender","dot1","boundDot1","boundDot2","dy2","dx2","hasDx","hasDy","slope","getInnerBoundInfo","lineInfos","multiple","sizeOffset","getInnerBoundDragInfo","lines","getCheckInnerBoundLineInfos","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","virtualPoses","dir1","dir2","virtualLine","boundDots","getDistPointLine","solveReverseLine","checkRotateInnerBounds","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","reduce","prev","cur","checkInnerBoundPoses","boundMap","getRect","lineInfo","isHorizontalStart","isVerticalStart","solveEquation","solveNextOffset","isOutside","getDist$1","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","_h","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapBoundsDrag","ignoreSnap","getAbsolutePoses","absolutePoses","boundPoses","middle","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","isRequest","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","maxWidth","maxHeight","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","deg","nextOtherPos","isHeightOutside","isWidthOutside","requestStyle","requestChildStyle","render","hideThrottleDragRotateLine","dragInfo","beforeOrigin","startCheckSnapDrag","prevDist","prevBeforeDist","deltaOffset","params","fillParams","triggerEvent","startRect","useSnap","isGroup","parentThrottleDrag","parentMoveable","throttleDrag","dragRotateRad","startDragRotate","ry","cos","rx","sin","beforeTranslate","throttleArray","beforeDist","beforeDelta","passDelta","passDist","num","dragAfter","dragEnd","param","fillEndParams","dragGroupStart","nextParams","targets","throttleOffset","dragGroup","dragGroupEnd","request","isControl","requestStart","unset","getFixedDirectionInfo","getOffsetFixedDirectionInfo","nextFixedOffset","getOffsetFixedPositionInfo","offsetFixedPosition","directionCondition$2","getDirectionCondition","Resizable","ableGroup","canPinch","dragControlCondition","viewClassName","getDirectionViewClassName","dragControlStart","parentDirection","parentFixedDirection","getTotalDirection","resizable","startOffsetWidth","startOffsetHeight","minSize","startWidth","inlineCSSWidth","cssWidth","startHeight","inlineCSSHeight","cssHeight","maxSize","minOffsetWidth","minOffsetHeight","maxOffsetWidth","maxOffsetHeight","startOffsetMatrix","startTransformOrigin","isWidth","parentIsWidth","setRatio","isFinite","setFixedDirection","setFixedPosition","setMin","convertUnitSize","setMax","nextMaxSize","isNumber","startRatio","setOrigin","startFixedDirection","startFixedPosition","isResize","snapRenderInfo","dragControl","parentKeepRatio","dragClient","parentDist","resolveMatrix","targetN","nextAllMatrix","resizeFormat","throttleResize","keepRatioFinally","sizeDirection","distWidth","distHeight","getNextBoundingSize","nextSize","getOffsetSizeDist","nextWidth","nextHeight","boundingWidth","boundingHeight","nextFixedDirection","setSize","snapDist","checkSnapResize","computeSize","isNoSnap","calculateBoundSize","inverseDelta","fillAfterTransform","dragControlAfter","checkResizableError","errorWidth","errorHeight","isErrorWidth","isErrorHeight","dragControlEnd","dragGroupControlCondition","dragGroupControlStart","originalEvents","parentStartOffsetWidth","parentStartOffsetHeight","updateGroupMin","originalMinSize","childMinSize","childStartOffsetWidth","childStartOffsetHeight","parentMinWidth","parentMinHeight","updateGroupMax","originalMaxSize","childMaxSize","parentMaxWidth","parentMaxHeight","dragGroupControl","catchEvent","parentScale","dragGroupControlEnd","deltaWidth","deltaHeight","setRotateStartInfo","startAbsoluteOrigin","prevDeg","defaultDeg","prevSnapDeg","loop","startDist","getAbsoluteDist","normalizedPrevDeg","floor","getAbsoluteDistByClient","getRotateInfo","moveableRect","throttleRotate","snapRotation","checkSnapRotate","snapDeg","getRotationPositions","rotationPosition","radPoses","getRotationRad","isReverse","requestAble","hasClass","rotateAroundControls","rotationTarget","getRefTargets","contains","css","Rotatable","isDragging","rotatable","resolveAblesWithRotatable","positions","jsxs","ables","resolveMap_1","directionControlInfos","resolve","parentRotate","beforeDirection","resizeStart","startClientX","startClientY","externalRotate","beforeInfo","afterInfo","absoluteInfo","inputTarget","regionDirection","getAttribute","controlDirection","isAroundControl","resolveAble","clientPoses","calculateMoveableClientPositions","originalFixedPosition_1","getOrigin","fixedBeforeOrigin","fixedAfterOrigin","posDelta","parentPosition","controlPosition","parentFixedPosition","getTotalOrigin","rotatation","isRotate","clientDistX","clientDistY","groupDelta","targetDirection","beforeRotation","absoluteDelta","absoluteDist","absoluteRotation","startRotation","absoluteStartRotation","nextClientX","nextClientY","setRotation","nextRotation","inverseDist","prevInverseDist","requestValue","dragEvent","transformEvent","parentDistance","resize","resizeEvent","beforeRotate","absoluteRotate","parentLeft","parentTop","parentBeforeOrigin","childClient","startGroupClient","groupClient","prevClientX","prevClientY","setGroupRotation","distRotate","getRotation","deltaRotate","renderGuideline","isHorizontal","scaleType","renderInnerGuideline","sizeValue","posValue","renderSnapPoses","renderPos","renderGuidelines","targetRect","isDisplayInnerSnapDigit","mainNames","targetStart","targetEnd","hide","elementRect","renderDigitLine","lineType","gap","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","groupBy","nextGuidelines","inner","elementRect1","elementRect2","nextPos1","nextPos2","elementDirection","total","renderDashedGuidelines","rendered","groups","sideNames","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","gapRects","sideStartPos","sideEndPos","sideCenterPos","getTotalGuidelines","overflow","scrollHeight","scrollWidth","containerClientHeight","containerClientWidth","snapGap","maxSnapElementGuidelineDistance","isDisplayGridGuidelines","elementGuidelines","getElementGuidelines","totalGuidelines","getGapGuidelines","getGridGuidelines","getDefaultGuidelines","checkBetweenRects","snapThresholds","maxSnapElementGapDistance","elementRects","gapGuidelines","targetCenter","targetStart2","targetEnd2","snapThresholdMap","nextElementRects","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","isCenter","startGridGroupGuidelines","snapGridAll","hasDirection","rect_1","children_1","children","posName","clientOffset","rectSize","rectPos","childSizes","flat$1","firstChildSize","childSnapSizes","rectRatio","childSize","startOffset","defaultSnapGridWidth","defaultSnapGridHeight","pushGuideline","grid","distance","prevValues","snapRect","refresh","nextElementGuidelines","isObject","getRefTarget","diff","maintained","added","nextValues","prevIndex","getSnapElementRects","elementSnapDirections","topValue","leftValue","rightValue","bottomValue","centerValue","middleValue","rectTop","rectLeft","sizes","getObjectGuidelines","containerSize","posGuideline","snapWidth","snapHeight","values","offsetDelta","containerLeft","containerTop","getBoundingClientRect","elementLeft","elementTop","elementRight","elementBottom","checkSnapInfo","snapContainer","snapContainerTarget","snapContainerRect","offset1","getDragDistByState","offset2","getNextFixedPoses","nextFixedPos","normalized","getSizeOffsetInfo","innerBoundLineInfos","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","p","bumpDegree","baseDeg","count","deg1","deg2","getMinDegreeDistance","deg3","snapRotationThreshold","snapRotationDegrees","origin2_1","rad_1","sorted","firstDegree","checkSnapScale","sizeDist","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","innerBoundMap","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","directionCondition$1","Snappable","dragRelation","targetTop","targetLeft","snapRenderThreshold","watchValue","JSON","stringify","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","nextBoundMap","nextInnerBoundMap","pinchStart","multiply2","prefixNames","defaultSync","fn","multiplies","measureSVGSize","viewBox","getSVGViewBox","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","o","getTransformOriginArray","computedTransform","list","baseVal","chr","lastParent","isParent","checkZoom","getTargetStyle","hasSlot","assignedSlotParentElement","assignedSlot","targetPosition","willChange","slotParentNode","parentNode","targetParentNode","host","isUndefined","getSVGGraphicsOffset","getBodyStyle","bodyPosition","marginLeft","marginTop","body","makeMatrixCSS","convertMatrixtoCSS","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","xAlign","yAlign","scaleDimension","isGTarget","getBBox","isFillBox","bbox","rectWidth","rectHeight","calculateRect","getSVGOffset","targetInfo","getSize","mat","prevLeft","prevTop","posOrigin","rectOrigin","mat2","nextLeft","nextTop","distLeft","distTop","rootClientRect","rootPoses","getDiagonalSize","self","contentWidth","contentHeight","minWidth","minHeight","svg","targetStyle","boxSizing","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","horizontalPadding","verticalPadding","horizontalBorder","verticalBorder","getParentStyle","between","resetClientRect","getExtendsRect","isRoot","extendsRect","getClientRectByPosition","base","isExtends","baseTop","baseLeft","convertTransformOriginArray","getDirection","direciton","unsetAbles","unsetGesto","gestoName","gesto","isIdle","resolvedEvent","cssText","decamelize","prevEvent","nextEvent","isBeforeEvent","currentTarget","isTrusted","stopAble","isEventStart","stopDrag","stop","call","isStartEvent","lastEvent","isDouble","_emitter","on","isManager","pseudoElt","filterAbles","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","method","equals","a1","a2","groupKeys","groupKey","keyIndex","group","groupByMap","flat","args","calculatePadding","xAdded","yAdded","nextAdded","convertCSSSize","isRelative","checkAbles","transforms","matrixInfos","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts2","beforeFunctions","beforeFunctions2","afterFunctions","afterFunctions2","targetFunctions","toMat","isArrayFormat","isNode","isSelector","document","querySelector","isFunction","isWindow","current","userTargets","querySelectorAll","getAbsoluteRotation","calculateMatrixDist","getSizeDistByDist","startSize","standardRad","signSize","startWidthSize","startHeightSize","secondRad","atan2","firstRad","distSize","pinchScale","directionsDists","directionRatios","ratioDistance","dist_1","convertTransformUnit","xy","leftOrigin","rightOrigin","originObject","nextOriginObject","rotatePosesInfo","next","isDeepArrayEquals","arr1","arr2","value1","value2","isArray1","isArray2","nextValue","valueKey","defaultValue","store","_store","prevValue","countEach","counter","getPaddingBox","padding","Pinchable","angle","pinchable","eventName","controlEventName","pinchAbles","controlAbles","ableEvent","pinch","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","directionCondition","Scalable","setMinScaleSize","minScaleSize","setMaxScaleSize","maxScaleSize","isScale","throttleScale","tempScaleValue","getNextScale","stateDirection","setScale","nextScale","distSign","isSelfPinch","startOffsetSize","scaleSize","distText","scaleText","isZeroScale","scaleEndParam","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","Warpable","scalable","warpable","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","warpTargetMatrix","targetInverseMatrix","ignoreDimension","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","VIEW_DRAGGING","restoreStyle","areaElement","removeClass","renderPieces","DragArea","dragArea","passDragArea","ref","isDragArea","rects","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","Origin","originStyle","getDefaultScrollPosition","scrollContainer","Scrollable","getContainer","scrollOptions","dragScroll","DragScroll","scrollContainerElement","scrollBy","getCurrentEvent","checkScroll","scrollThreshold","scrollThrottleTime","getScrollPosition","throttleTime","dragGroupControEnd","Default","Padding","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","radiusPoses","virtual","raws","rawPos","styles","getRadiusRange","controlPoses","horizontalRange","verticalRange","clipPose","sub","getRadiusValues","minCounts","full","splitIndex","splitLength","horizontalValues","verticalValues","horizontalValuesLength","verticalValuesLength","hasVerticalValues","nwValue","neValue","seValue","_j","swValue","_k","_l","wnValue","_m","enValue","_o","esValue","_p","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isRect","isCircle","subWidth","subHeight","getRectPoses","dirx","diry","getControlSize","xRange","yRange","getClipPath","defaultClip","customClip","clipText","splitBracket","clipPrefix","splitter","splitComma","xPos","yPos","minMaxs","getMinMaxs","minX","maxX","minY","maxY","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_q","_r","_s","top_2","_t","nextRight","nextBottom","_u","top_3","moveControlPos","dists","verticalDirections","horizontalDirections","verticalDirection_1","horizontalDirection_1","fixedIndex","nextDist","nextControlPoses_1","controlPose","controlDir","dirDir","dirHorizontal","dirVertical","addClipPath","clipIndex","clipStyle","clipEventType","removeClipPath","Clippable","customClipPath","defaultClipPath","clipArea","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","dragWithClip","isDragTarget","isClipStart","isLine","isArea","originalDraggable","originalDist","firstDist","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","clipHorizontalGuidelines","clipVerticalGuidelines","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","clipTargetBounds","snapOffsetY","snapOffsetX","distSnapX","distSnapY","width_1","height_1","nextControlPoses_2","j","nextClipStyles","dragDist","OriginDraggable","startOrigin","startTargetOrigin","isDragOrigin","originRelative","distOrigin","dragDelta","deltaOrigin","addBorderRadiusByLine","lineIndex","horizontalsLength","verticalsLength","controlIndex","controlPoseInfo","addBorderRadius","removeBorderRadius","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","getStyleBorderRadius","firstMoveable","firstTarget","getTargets","Roundable","roundClickable","minRoundControls","maxRoundControls","roundPadding","isDisplayShadowRoundControls","verticalCount","horizontalCount","basePos","originalPos","isDisplayVerticalShadow","isDisplay","display","indexAttr","replace","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","identityMatrix","BeforeRenderable","inlineTransform","cssMatrix","startTransform","resetStyle","fillDragStartParams","fillDragParams","_this","Renderable","fillDragEndParams","transformObject","matrixInfo","triggerAble","moveableAbles","eventOperations","eventAffix","eventType","requestInstant","requestAble_1","elementFromPoint","isDragStop","isFirstStart","updateRect","gestoType","prevGesto","trigger","conditionName","nextDatas","off","forceEndedCount","updatedCount","eventOperation","eventAbles","results","isUpdate","isForceEnd","preventDefault","isUnmounted","flushSync","forceUpdate","checkMoveableTarget","eventTarget","dragTargetElement","_dragTarget","isMoveableElement","controlBox","getTargetAbleGesto","moveableTarget","dragTarget","dragTargetSelf","checkTarget","getAbleGesto","getControlAbleGesto","checkControlTarget","ableType","conditionFunctions","isTargetAbles","pinchOutside","pinchThreshold","preventClickEventOnDrag","preventClickDefault","checkInput","dragFocusedInput","preventRightClick","preventWheelClick","dragContaienrOption","dragContainer","options","getControlBoxElement","preventClickEventOnDragStart","preventClickEventByCondition","Gesto","isPinchScheduled","stopPropagation","EventManager","_onEvent","addEventListener","setAbles","destroy","removeEventListener","calculateMatrixStack","rootContainer","isAbsolute3d","prevTargetMatrix","containerZoom","rootMatrixes","isRoot3d","offsetRootContainer","rootZoom","isNext3d","isSVGGraphicElement","nextRootMatrixes","reverse","originalRootContainer","endContainer","rootMatrixBeforeOffset","nextInfo","isMatrix3d","originalRootMatrix","hasZoom","calculateElementInfo","allResult","getElementInfo","getMoveableTargetInfo","moveableElement","parentContainer","requestStyles","targetClientRect","rootContainerClientRect","getStyle_1","beforePosition","absoluteTargetPosition","absoluteContainerPosition","containerClientRectLeft","containerClientRectTop","containterClientLeft","containerClientTop","clientDelta","originalBeforeOrigin","getPersistState","isPersisted","MoveableManager","_super","__extends","renderLines","targetAbles","isMoveableMounted","EventEmitter","_prevOriginalDragTarget","_originalDragTarget","_prevDragTarget","_prevPropTarget","_propTarget","_prevDragArea","_isPropTargetChanged","_hasFirstTarget","_reiszeObserver","_observerId","_mutationObserver","_rootContainer","_viewContainer","_viewClassNames","checkUpdateRect","cancelAnimationFrame","_onPreventClick","propsTarget","cspNonce","translateZ","ControlBoxElement","cssStyled","linePadding","controlPadding","_checkUpdateRootContainer","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","ableClassName","_getAbleClassName","isVisible","firstRenderState","persistData","useAccuratePosition","onClick","renderAbles","_renderLines","componentDidMount","_checkUpdateViewContainer","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","componentDidUpdate","prevProps","componentWillUnmount","disconnect","viewContainer","_changeAbleViewClassNames","manager","getAble","wrapperMoveable","getDragElement","triggerDragStart","hitTest","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","isSingle","nextState","_getRequestStyles","persistState","name_2","updateState","updateTarget","statePos","getManager","isInstant","allAbles","requsetAble","ableRequester","requester","ableParam","getMoveables","stateLeft","stateTop","renderPos3","renderPos4","zoomOffset","stateContainer","updateAbles","isTargetChanged","isChanged","moveableContainer","waitToChangeTarget","Promise","useCSS","tag","customStyleMap","customStyledMap","styled","hasControlBox","updateSelectors","setState","name_3","always","Renderer","styleNames","ableStyleNames","_updateResizeObserver","_updateMutationObserver","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","hideDefaultLines","hideChildMoveableDefaultLines","useDragArea","nextTarget","prevTarget","prevDragArea","isDragTargetChanged","isDragAreaChanged","eventKeys","hasAbles","viewContainerOption","_getAbleViewClassNames","nextClassNames","prevClassNames","diff$1","removed","classPrefix","targetGestoData","controlGestoData","trim","win","ResizeObserver","useResizeObserver","observer","observe","box","MutationObserver","useMutationObserver","records","records_1","__values","records_1_1","done","mutation","attributeName","attributes","defaultProps","isWrapperMounted","warpSelf","PureComponent","Groupable","renderGroupRects","persistDatChildren","getRequestChildStyles","refs","Clickable","containsElement","containsTarget","targetIndex","parentTarget","getDraggableEvent","edgeDraggable","dragCondition","dragGroupCondition","IndividualGroupable","MOVEABLE_ABLES","MOVEABLE_EVENTS","pushSet","MOVEABLE_PROPS","solveConstantsDistance","solveC","getMaxPos","getMinPos","getGroupRect","parentPoses","fixedRotation","a1_1","tan","a2_1","a1MinMax_1","a1MinMaxPos_1","a2MinMax_1","a2MinMaxPos_1","a1Dist","a2Dist","a1MinPos","a1MaxPos","a2MinPos","a2MaxPos","minHorizontalLine","maxHorizontalLine","minVerticalLine","maxVerticalLine","line1","line2","getIntersectionPointsByConstants","minX_1","minY_1","maxX_1","maxY_1","changedX","findMoveableGroups","childTargetGroups","targetGroup","childMoveableGroups","checked","finded","MoveableGroup","differ","ChildrenDiffer","_targetGroups","_hasFirstTargets","checkeds","targetGroups","moveableGroups","useDefaultGroupRotate","isReset","updateGroup","defaultGroupRotate","persistedRoatation","getMoveableGroupRect","parentRotation","posesRotations","rotations","groupRotation","firstRotation","isSameRotation","groupPoses","groupRect","rootGroupRect","defaultGroupOrigin","posesInfo","rotateScale","update","changed","isContainerChanged","MoveableIndividualGroup","canPersist","individualProps","individualGroupableProps","m","controlBoxElement","dragElement","getElementTargets","refTargets","selectorMap","elementTargets","getTargetGroups","compareRefTargets","prevRefTargets","nextRefTargets","InitialMoveable","_differ","_elementTargets","_tmpRefTargets","_tmpSelectorMap","_onChangeTargets","makeStyled","cssMap","getTotalAbles","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","userAbles","userProps","__rest","_updateRefs","nextSelectorMap","totalAbles","nextProps","prevMoveable","individualGroupable","groupableProps","target_1","prevTargetMoveable","mv","_checkChangeTargets","resolvePromise","waitToChangeTargets","isBrowser","updateSelectorMap","selectorTarget","onChangeTargets","__decorate","withMethods","Moveable","makeMoveable"],"sources":["F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\AbleManager.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\consts.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\gesto\\CustomGesto.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\utils\\calculateElementPosition.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\gesto\\GestoUtils.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\gesto\\GestoData.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\utils\\getMatrixStackInfo.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\store\\Store.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\groupUtils.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\renderDirections.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\snappable\\bounds.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\snappable\\utils.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\snappable\\names.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\snappable\\snap.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\snappable\\innerBounds.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\snappable\\snapBounds.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Draggable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\utils\\getFixedDirection.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Resizable.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Rotatable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\snappable\\render.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\snappable\\getTotalGuidelines.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Snappable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\utils.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Pinchable.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Scalable.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Warpable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\classNames.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\DragArea.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Origin.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Scrollable.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Default.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Padding.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\roundable\\borderRadius.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\clippable\\utils.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Clippable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\OriginDraggable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Roundable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\BeforeRenderable.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Renderable.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\gesto\\getAbleGesto.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\EventManager.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\utils\\calculateMatrixStack.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\utils\\getElementInfo.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\utils\\getMoveableTargetInfo.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\utils\\persist.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\MoveableManager.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Groupable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\Clickable.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\edgeDraggable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\IndividualGroupable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\ables\\consts.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\Snappable\\utils.ts","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\MoveableGroup.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\MoveableIndividualGroup.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\InitialMoveable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\Moveable.tsx","F:\\同济实习\\cutting\\node_modules\\react-moveable\\src\\makeMoveable.ts"],"sourcesContent":["import { Able } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: [] as AbleObject[\"events\"] extends readonly any[] ? AbleObject[\"events\"] : readonly [],\n        props: [] as AbleObject[\"props\"] extends readonly any[] ? AbleObject[\"props\"] : readonly [],\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\n\nexport const DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\n\nconst browserName = agent.browser.name;\nconst browserVersion = parseInt(agent.browser.version, 10);\nconst IS_CHROME = browserName === \"chrome\";\nconst IS_CHROMIUM = agent.browser.chromium;\nconst chromiumVersion = parseInt(agent.browser.chromiumVersion, 10) || 0;\n\nexport const IS_CHROMIUM109 = (IS_CHROME && browserVersion >= 109)\n    || (IS_CHROMIUM && chromiumVersion >= 109);\nexport const IS_FIREFOX = browserName === \"firefox\";\nexport const IS_SAFARI_ABOVE15\n    = parseInt(agent.browser.webkitVersion, 10) >= 612\n    || browserVersion >= 15;\n\nexport const PREFIX = \"moveable-\";\n\n\nconst directionCSS = DIRECTIONS.map(dir => {\n    let top = \"\";\n    let left = \"\";\n    let originX = \"center\";\n    let originY = \"center\";\n    const offset =  `calc(var(--moveable-control-padding, 20) * -1px)`;\n\n    if (dir.indexOf(\"n\") > -1) {\n        top = `top: ${offset};`;\n        originY = `bottom`;\n    }\n    if (dir.indexOf(`s`) > -1) {\n        top = `top: 0px;`;\n        originY = `top`;\n    }\n    if (dir.indexOf(`w`) > -1) {\n        left = `left: ${offset};`;\n        originX = `right`;\n    }\n    if (dir.indexOf(`e`) > -1) {\n        left = `left: 0px;`;\n        originX = `left`;\n    }\n    return `.around-control[data-direction*=\"${dir}\"] {\n        ${left}${top}\n        transform-origin: ${originX} ${originY};\n    }`;\n}).join(\"\\n\");\n\nexport const MOVEABLE_CSS = `\n{\nposition: absolute;\nwidth: 1px;\nheight: 1px;\nleft: 0;\ntop: 0;\nz-index: 3000;\n--moveable-color: #4af;\n--zoom: 1;\n--zoompx: 1px;\n--moveable-line-padding: 0;\n--moveable-control-padding: 0;\nwill-change: transform;\noutline: 1px solid transparent;\n}\n.control-box {\nz-index: 0;\n}\n.line, .control {\nposition: absolute;\nleft: 0;\ntop: 0;\nwill-change: transform;\n}\n.control {\nwidth: 14px;\nheight: 14px;\nborder-radius: 50%;\nborder: 2px solid #fff;\nbox-sizing: border-box;\nbackground: #4af;\nbackground: var(--moveable-color);\nmargin-top: -7px;\nmargin-left: -7px;\nborder: 2px solid #fff;\nz-index: 10;\n}\n.around-control {\nposition: absolute;\nwill-change: transform;\nwidth: calc(var(--moveable-control-padding, 20) * 1px);\nheight: calc(var(--moveable-control-padding, 20) * 1px);\nleft: calc(var(--moveable-control-padding, 20) * -0.5px);\ntop: calc(var(--moveable-control-padding, 20) * -0.5px);\nbox-sizing: border-box;\nbackground: transparent;\nz-index: 8;\ncursor: alias;\ntransform-origin: center center;\n}\n${directionCSS}\n.padding {\nposition: absolute;\ntop: 0px;\nleft: 0px;\nwidth: 100px;\nheight: 100px;\ntransform-origin: 0 0;\n}\n.line {\nwidth: 1px;\nheight: 1px;\nbackground: #4af;\nbackground: var(--moveable-color);\ntransform-origin: 0px 50%;\n}\n.line.edge {\nz-index: 1;\nbackground: transparent;\n}\n.line.dashed {\nbox-sizing: border-box;\nbackground: transparent;\n}\n.line.dashed.horizontal {\nborder-top: 1px dashed #4af;\nborder-top-color: #4af;\nborder-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\nborder-left: 1px dashed #4af;\nborder-left-color: #4af;\nborder-left-color: var(--moveable-color);\n}\n.line.vertical {\ntransform: translateX(-50%);\n}\n.line.horizontal {\ntransform: translateY(-50%);\n}\n.line.vertical.bold {\nwidth: 2px;\n}\n.line.horizontal.bold {\nheight: 2px;\n}\n\n.control.origin {\nborder-color: #f55;\nbackground: #fff;\nwidth: 12px;\nheight: 12px;\nmargin-top: -6px;\nmargin-left: -6px;\npointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"], :global .view-control-rotation${degree} {\n${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n\n.line.direction:before {\ncontent: \"\";\nposition: absolute;\nwidth: 100%;\nheight: calc(var(--moveable-line-padding, 0) * 1px);\nbottom: 0;\nleft: 0;\n}\n.group {\nz-index: -1;\n}\n.area {\nposition: absolute;\n}\n.area-pieces {\nposition: absolute;\ntop: 0;\nleft: 0;\ndisplay: none;\n}\n.area.avoid, .area.pass {\npointer-events: none;\n}\n.area.avoid+.area-pieces {\ndisplay: block;\n}\n.area-piece {\nposition: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\ncontent:\"\";\ntransform-origin: inherit;\n}` : \"\"}\n`;\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTION_REGION_TO_DIRECTION: Record<string, number[]> = {\n    n: [0, -1],\n    e: [1, 0],\n    s: [0, 1],\n    w: [-1, 0],\n    nw: [-1, -1],\n    ne: [1, -1],\n    sw: [-1, 1],\n    se: [1, 1],\n};\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    e: [1, 3],\n    s: [3, 2],\n    w: [2, 0],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n    \"waitToChangeTarget\",\n    \"updateSelectors\",\n    \"getTargets\",\n    \"stopDrag\",\n    \"getControlBoxElement\",\n    \"getMoveables\",\n    \"getDragElement\",\n];\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n    ableName = \"draggable\",\n) {\n    const result = state.gestos[ableName]?.move(delta, e.inputEvent) ?? {};\n    const datas = result.originalDatas || result.datas;\n    const ableDatas = datas[ableName] || (datas[ableName] = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: ableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n    constructor(private ableName = \"draggable\") {\n        this.datas = {\n            [ableName]: {},\n        };\n    }\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas[this.ableName]) {\n            originalDatas[this.ableName] = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        let isFirstDrag = false;\n\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n            const isPrevDrag = this.isDrag;\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n\n            if (delta[0] || delta[1]) {\n                this.isDrag = true;\n            }\n\n            if (!isPrevDrag && this.isDrag) {\n                isFirstDrag = true;\n            }\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isFirstDrag,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas[this.ableName],\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","import { MoveablePosition } from \"../types\";\nimport { calculatePoses, calculatePosition, sign } from \"../utils\";\n\nexport function calculateElementPosition(\n    matrix: number[],\n    origin: number[],\n    width: number,\n    height: number,\n): MoveablePosition {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n\n    const sx = matrix[0];\n    const sy = matrix[n + 1];\n    const direction = sign(sx * sy);\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, convertTransformInfo, fillCSSObject,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, findIndex, dot, find, isString } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\nimport { Draggable } from \"../index.esm\";\nimport { calculateElementPosition } from \"../utils/calculateElementPosition\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\n\nexport function getTransformDirection(e: any) {\n    return calculateElementPosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\n\n\nexport interface OriginalDataTransformInfos {\n    startTransforms: string[];\n    nextTransforms: string[];\n    nextTransformAppendedIndexes: number[];\n}\n\nexport function resolveTransformEvent(moveable: MoveableManagerInterface, event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n\n    const nextTransforms = originalDatas.nextTransforms as string[];\n    const length = nextTransforms.length;\n    const nextTransformAppendedIndexes: any[] = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = -1;\n\n    if (index === -1) {\n        // translate => rotate => scale\n        if (functionName === \"translate\") {\n            nextIndex = 0;\n        } else if (functionName === \"rotate\") {\n            nextIndex = findIndex(nextTransforms, text => text.match(/scale\\(/g,));\n        }\n        if (nextIndex === -1) {\n            nextIndex = nextTransforms.length;\n        }\n        datas.transformIndex = nextIndex;\n    } else if (find(nextTransformAppendedIndexes, info => info.index === index && info.functionName === functionName)) {\n        nextIndex = index;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter(info => info.index < index).length;\n    }\n\n    const result = convertTransformInfo(nextTransforms, moveable.state, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else if (length > nextIndex) {\n        datas.isAppendTransform = true;\n\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, {\n            functionName,\n            index: nextIndex,\n            isAppend: true,\n        }];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\n\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\n\nexport function getPosBySingleDirection(\n    poses: number[][],\n    direction: number,\n) {\n    const ratio = (direction + 1) / 2;\n    return [\n        dot(poses[0][0], poses[1][0], ratio, 1 - ratio),\n        dot(poses[0][1], poses[1][1], ratio, 1 - ratio),\n    ];\n}\n\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    const top = getPosBySingleDirection([poses[0], poses[1]], direction[0]);\n    const bottom = getPosBySingleDirection([poses[2], poses[3]], direction[0]);\n\n    return getPosBySingleDirection([top, bottom], direction[1]);\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string | number[],\n    isAllTransform?: boolean,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    let targetTransform!: number[];\n\n    if (isString(transform)) {\n        const {\n            beforeTransform,\n            afterTransform,\n        } = datas;\n\n        if (isAllTransform) {\n            targetTransform = convertDimension(parseMat(transform), 4, n);\n        } else {\n            targetTransform = convertDimension(\n                multiply(multiply(beforeTransform, parseMat([transform]), 4), afterTransform, 4),\n                4, n,\n            );\n        }\n    } else {\n        targetTransform = transform;\n    }\n\n    return getNextMatrix(\n        offsetMatrix,\n        targetTransform,\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: any,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n        targetAllTransform,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetAllTransform || targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(moveable: MoveableManagerInterface, e: any): OnTransformStartEvent {\n    const originalDatas = getBeforeRenderableDatas(e);\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(moveable, e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(moveable, e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(moveable: MoveableManagerInterface, e: any, property: string) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(moveable, e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(moveable: MoveableManagerInterface, e: any, index: number) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const state = moveable.state;\n    const info = parse([transform], {\n        \"x%\": v => v / 100 * state.offsetWidth,\n        \"y%\": v => v / 100 * state.offsetHeight,\n    });\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = getBeforeRenderableDatas(e);\n\n    originalDatas.nextTransforms = splitSpace(transform);\n    // originalDatas.nextTargetMatrix = parseMat(transform);\n}\nexport function getBeforeRenderableDatas(e: any) {\n    return e.originalDatas.beforeRenderable;\n}\nexport function getNextTransforms(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms as string[];\n}\nexport function getNextTransformText(e: any) {\n    return (getNextTransforms(e) || []).join(\" \");\n}\n\nexport function getNextStyle(e: any) {\n    return getBeforeRenderableDatas(e).nextStyle;\n}\n\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n\n    const drag = Draggable.drag!(\n        moveable,\n        setCustomDrag(e, moveable.state, delta, isPinch, false),\n    ) as OnDrag;\n    const afterTransform = drag ? drag.transform : nextTransform;\n    return {\n        transform: nextTransform,\n        drag: drag as OnDrag,\n        ...fillCSSObject({\n            transform: afterTransform,\n        }, e),\n        afterTransform,\n    };\n}\n\nexport function getTranslateFixedPosition(\n    moveable: MoveableManagerInterface<any>,\n    transform: string | number[],\n    fixedDirection: number[],\n    fixedOffset: number[],\n    datas: any,\n    isAllTransform?: boolean,\n) {\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform, isAllTransform);\n    const nextFixedPosition = getDirectionOffset(\n        moveable,\n        fixedDirection,\n        fixedOffset,\n        nextMatrix,\n    );\n\n    return nextFixedPosition;\n}\n\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    fixedOffset: number[],\n    datas: any,\n    isAllTransform?: boolean,\n) {\n    const nextFixedPosition = getTranslateFixedPosition(\n        moveable,\n        transform,\n        fixedDirection,\n        fixedOffset,\n        datas,\n        isAllTransform,\n    );\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const dist = minus(fixedPosition, nextFixedPosition);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    fixedOffset: number[],\n    datas: any,\n    isAllTransform?: boolean,\n) {\n    const dist = getTranslateDist(\n        moveable,\n        transform,\n        fixedDirection,\n        fixedPosition,\n        fixedOffset,\n        datas,\n        isAllTransform,\n    );\n\n    return dist;\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionByPos(\n    pos: number[],\n    width: number,\n    height: number,\n) {\n    return [\n        width ? -1 + pos[0] / (width / 2) : 0,\n        height ? -1 + pos[1] / (height / 2) : 0,\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface,\n    fixedDirection: number[],\n    fixedOffset: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const fixedOffsetPosition = [\n        width / 2 * (1 + fixedDirection[0]) + fixedOffset[0],\n        height / 2 * (1 + fixedDirection[1]) + fixedOffset[1],\n    ];\n    return calculatePosition(nextMatrix, fixedOffsetPosition, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    datas: any,\n) {\n    const fixedDirection = datas.fixedDirection;\n    const fixedPosition = datas.fixedPosition;\n    const fixedOffset = datas.fixedOffset;\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        fixedOffset,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedPosition: number[],\n    transformOrigin: string[],\n    datas: any,\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const state = moveable.state;\n    const {\n        transformOrigin: prevOrigin,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = state;\n    const fixedDirection = datas.fixedDirection;\n    const targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { MoveableManagerInterface } from \"../types\";\n\nexport function getGestoData(moveable: MoveableManagerInterface, ableName: string) {\n    const targetGesto = moveable.targetGesto;\n    const controlGesto = moveable.controlGesto;\n    let data!: Record<string, any>;\n\n    if (targetGesto?.isFlag()) {\n        data = targetGesto.getEventData()[ableName];\n    }\n\n    if (!data && controlGesto?.isFlag()) {\n        data = controlGesto.getEventData()[ableName];\n    }\n\n    return data || {};\n}\n","import {\n    convertCSStoMatrix, convertDimension,\n    createIdentityMatrix, createOriginMatrix, createScaleMatrix,\n} from \"@scena/matrix\";\nimport { getCachedStyle } from \"../store/Store\";\nimport { IS_WEBKIT, IS_SAFARI_ABOVE15, IS_FIREFOX, IS_CHROMIUM109 } from \"../consts\";\nimport { MatrixInfo } from \"../types\";\nimport {\n    getOffsetInfo, getElementTransform,\n    getTransformMatrix, getPositionFixedInfo,\n    convert3DMatrixes, getOffsetPosInfo,\n    getSVGMatrix, getBodyOffset, getAbsoluteMatrix,\n} from \"../utils\";\nimport { getDocumentBody, getDocumentElement } from \"@daybrush/utils\";\nimport { parseMat } from \"css-to-mat\";\n\n\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\n\n\nfunction getIndividualTransforms(getStyle: (property: string) => any) {\n    const scale = getStyle(\"scale\") as string;\n    const rotate = getStyle(\"rotate\") as string;\n    const translate = getStyle(\"translate\") as string;\n    const individualTransforms: string[] = [];\n\n    if (translate && translate !== \"0px\" && translate !== \"none\") {\n        individualTransforms.push(`translate(${translate.split(/\\s+/).join(\",\")})`);\n    }\n    if (rotate && rotate !== \"1\" && rotate !== \"none\") {\n        individualTransforms.push(`rotate(${rotate})`);\n    }\n    if (scale && scale !== \"1\" && scale !== \"none\") {\n        individualTransforms.push(`scale(${scale.split(/\\s+/).join(\",\")})`);\n    }\n    return individualTransforms;\n}\n\nexport interface MatrixStackInfo {\n    zoom: number;\n    offsetContainer: HTMLElement;\n    matrixes: MatrixInfo[];\n    targetMatrix: number[];\n    transformOrigin: number[];\n    targetOrigin: number[];\n    is3d: boolean;\n    hasFixed: boolean;\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n): MatrixStackInfo {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    const documentElement = getDocumentElement(target) || getDocumentBody(target);\n    let requestEnd = !checkContainer && target === container || target === documentElement;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    let hasFixed = false;\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n    let zoom = 1;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const getStyle = getCachedStyle(el);\n        const position = getStyle(\"position\");\n        const transform = getElementTransform(el);\n        const isFixed = position === \"fixed\";\n        const individualTransforms = getIndividualTransforms(getStyle);\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\n        let offsetParent: HTMLElement;\n        let isOffsetEnd = false;\n        let isStatic = false;\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n        let fixedClientLeft = 0;\n        let fixedClientTop = 0;\n        let fixedInfo: {\n            hasTransform: boolean;\n            fixedContainer: HTMLElement | null;\n        } = {\n            hasTransform: false,\n            fixedContainer: null,\n        };\n\n        if (isFixed) {\n            hasFixed = true;\n            fixedInfo = getPositionFixedInfo(el);\n            offsetContainer = fixedInfo.fixedContainer!;\n        }\n\n        // convert 3 to 4\n        const length = matrix.length;\n\n        if (!is3d && (length === 16 || individualTransforms.length)) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, target);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n\n        // no target with svg\n        if (tagName === \"svg\" && !(el as SVGSVGElement).ownerSVGElement && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        }\n\n\n        const targetZoom = parseFloat(getStyle(\"zoom\")) || 1;\n\n        if (isFixed) {\n            offsetParent = fixedInfo.fixedContainer!;\n            isOffsetEnd = true;\n        } else {\n            const offsetInfo = getOffsetInfo(el, container, false, true, getStyle);\n            const offsetZoom = offsetInfo.offsetZoom;\n\n            offsetParent = offsetInfo.offsetParent;\n            isOffsetEnd = offsetInfo.isEnd;\n            isStatic = offsetInfo.isStatic;\n            zoom *= offsetZoom;\n\n            if ((offsetInfo.isCustomElement || offsetZoom !== 1) && isStatic) {\n                offsetLeft -= offsetParent.offsetLeft;\n                offsetTop -= offsetParent.offsetTop;\n            } else if (IS_FIREFOX || IS_CHROMIUM109) {\n                const parentSlotElement = offsetInfo.parentSlotElement;\n\n                if (parentSlotElement) {\n                    let customOffsetParent: HTMLElement | null = offsetParent;\n                    let customOffsetLeft = 0;\n                    let customOffsetTop = 0;\n\n                    while (customOffsetParent) {\n                        if (!getShadowRoot(customOffsetParent)) {\n                            break;\n                        }\n                        customOffsetLeft += customOffsetParent.offsetLeft;\n                        customOffsetTop += customOffsetParent.offsetTop;\n                        customOffsetParent = customOffsetParent.offsetParent as HTMLElement;\n                    }\n                    offsetLeft -= customOffsetLeft;\n                    offsetTop -= customOffsetTop;\n                }\n            }\n        }\n\n        if (\n            IS_WEBKIT && !IS_SAFARI_ABOVE15\n            && hasOffset && !isSVG && isStatic\n            && (position === \"relative\" || position === \"static\")\n        ) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n\n\n        if (isFixed) {\n            if (hasOffset && fixedInfo.hasTransform) {\n                // border\n                fixedClientLeft = offsetParent.clientLeft;\n                fixedClientTop = offsetParent.clientTop;\n            }\n        } else {\n            if (hasOffset && offsetContainer !== offsetParent) {\n                // border\n                parentClientLeft = offsetParent.clientLeft;\n                parentClientTop = offsetParent.clientTop;\n            }\n            if (hasOffset && offsetParent === documentElement) {\n                const margin = getBodyOffset(el, false);\n\n                offsetLeft += margin[0];\n                offsetTop += margin[1];\n            }\n        }\n\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n\n        if (individualTransforms.length) {\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getAbsoluteMatrix(parseMat(individualTransforms), n, origin),\n            });\n        }\n        if (hasOffset) {\n            const isElementTarget = el === target;\n            const scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n            const scrollTop = isElementTarget ? 0 : el.scrollTop;\n\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft,\n                    offsetTop - scrollTop + parentClientTop - fixedClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\n        if (targetZoom !== 1) {\n            matrixes.push({\n                type: \"zoom\",\n                target: el,\n                matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0]),\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === documentElement) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        zoom,\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n        hasFixed,\n    };\n}\n","import { find, getWindow } from \"@daybrush/utils\";\nimport { getClientRect } from \"../utils\";\nimport { MoveableClientRect } from \"../types\";\nimport { getMatrixStackInfo, MatrixStackInfo } from \"../utils/getMatrixStackInfo\";\n\nlet cacheStyleMap: Map<Element, {\n    style: CSSStyleDeclaration;\n    cached: Record<string, any>;\n}> | null = null;\nlet clientRectStyleMap: Map<Element, MoveableClientRect> | null = null;\n\nlet matrixContainerInfos: Array<[\n    [SVGElement | HTMLElement, SVGElement | HTMLElement | null | undefined],\n    MatrixStackInfo\n]> | null = null;\n\nexport type GetStyle = (propertyName: string) => any;\nexport function setStoreCache(useCache?: boolean) {\n    if (useCache) {\n        if (window.Map) {\n            cacheStyleMap = new Map();\n            clientRectStyleMap = new Map();\n        }\n        matrixContainerInfos = [];\n    } else {\n        cacheStyleMap = null;\n        matrixContainerInfos = null;\n        clientRectStyleMap = null;\n    }\n}\n\nexport function getCachedClientRect(el: HTMLElement | SVGElement): MoveableClientRect {\n    const clientRect = clientRectStyleMap?.get(el);\n\n    if (clientRect) {\n        return clientRect;\n    }\n    const nextClientRect = getClientRect(el, true);\n\n    if (clientRectStyleMap) {\n        clientRectStyleMap.set(el, nextClientRect);\n    }\n    return nextClientRect;\n}\n\nexport function getCachedMatrixContainerInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n) {\n    if (matrixContainerInfos) {\n        const result = find(matrixContainerInfos, info => info[0][0] == target && info[0][1] == container);\n\n        if (result) {\n            return result[1];\n        }\n    }\n    const result = getMatrixStackInfo(target, container, true);\n\n    if (matrixContainerInfos) {\n        matrixContainerInfos.push([[target, container], result]);\n    }\n    return result;\n}\nexport function getCachedStyle(element: Element): GetStyle {\n    let cache = cacheStyleMap?.get(element);\n\n    if (!cache) {\n        const nextStyle = getWindow(element).getComputedStyle(element);\n\n        if (!cacheStyleMap) {\n            return (property: string) => {\n                return (nextStyle as any)[property];\n            };\n        }\n        cache = {\n            style: nextStyle,\n            cached: {},\n        };\n        cacheStyleMap.set(element, cache);\n    }\n    const cached = cache.cached;\n    const style = cache.style;\n\n    return (property: string) => {\n        if (!(property in cached)) {\n            cached[property] = (style as any)[property];\n        }\n        return cached[property];\n    };\n}\n","import { Able, MoveableGroupInterface, MoveableManagerInterface, MoveableManagerState } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\nimport { getAbsolutePosesByState } from \"./utils\";\nimport { calculate, createRotateMatrix } from \"@scena/matrix\";\nimport { getPosByDirection } from \"./gesto/GestoUtils\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            isRequestChild: true,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n    ableName: string,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n\n    const childEvents: any[] = [];\n    const eventParams = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        const state = childMoveable.state as MoveableManagerState<any>;\n        const gestos = state.gestos;\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n            childEvents.push(childEvent);\n        } else {\n            if (!gestos[ableName]) {\n                gestos[ableName] = datas.childGestos[i];\n            }\n            if (!gestos[ableName]) {\n                return;\n            }\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n            childEvents.push(childEvent);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            gestos[ableName] = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gestos[ableName]);\n    }\n    return {\n        eventParams,\n        childEvents,\n    };\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gestos = {};\n        }\n        return result;\n    });\n\n    return childs;\n}\n\n\nexport function startChildDist(\n    moveable: MoveableGroupInterface,\n    child: MoveableManagerInterface,\n    parentDatas: any,\n    childEvent: any,\n) {\n    const fixedDirection = parentDatas.fixedDirection;\n    const fixedPosition = parentDatas.fixedPosition;\n\n    const startPositions = childEvent.datas.startPositions || getAbsolutePosesByState(child.state);\n    const pos = getPosByDirection(startPositions, fixedDirection);\n    const [originalX, originalY] = calculate(\n        createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n        [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n        3,\n    );\n    childEvent.datas.originalX = originalX;\n    childEvent.datas.originalY = originalY;\n\n    return childEvent;\n}\n","import { prefix, getControlTransform, getLineStyle, getProps, sign } from \"./utils\";\nimport {\n    Renderer, MoveableManagerInterface,\n    RenderDirections,\n} from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS, DIRECTIONS4 } from \"./consts\";\nimport { IObject, throttle, getRad, getKeys } from \"@daybrush/utils\";\nimport { absDegree } from \"./ables/Snappable\";\n\nexport interface DirectionControlInfo {\n    data: Record<string, any>;\n    classNames: string[];\n    dir: string;\n}\n\n\nexport function renderDirectionControlsByInfos(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    renderDirections: DirectionControlInfo[],\n    React: Renderer,\n): any[] {\n\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n\n    const {\n        zoom,\n    } = getProps(moveable.props, ableName as any);\n\n    const degRotation = absDegree(rotationRad / Math.PI * 180);\n    const directionMap: IObject<boolean> = {};\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    renderDirections.forEach(({ dir }) => {\n        directionMap[dir] = true;\n    });\n\n    const directionSign = sign(direction);\n    return renderDirections.map(({ data, classNames, dir }) => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        renderDirectionMap[dir] = true;\n        const directionRotation = (throttle(degRotation, 15) + directionSign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        const dataAttrs: Record<string, string> = {};\n\n        getKeys(data).forEach(name => {\n            dataAttrs[`data-${name}`] = data[name];\n        });\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, ableName, ...classNames)}\n                data-rotation={directionRotation}\n                data-direction={dir}\n                {...dataAttrs}\n                key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    ableName: string,\n    React: Renderer,\n): any[] {\n    const {\n        renderDirections: directions = defaultDirections,\n        displayAroundControls,\n    } = getProps(moveable.props, ableName as any);\n\n    if (!directions) {\n        return [];\n    }\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n\n    return [\n        ...(displayAroundControls ? renderAroundControls(moveable, React, ableName, renderDirections) : []),\n        ...renderDirectionControlsByInfos(\n            moveable,\n            ableName,\n            renderDirections.map(dir => {\n                return {\n                    data: {},\n                    classNames: [],\n                    dir,\n                };\n            }),\n            React,\n        ),\n    ];\n}\n\nexport function renderLine(\n    React: Renderer,\n    direction: string,\n    pos1: number[],\n    pos2: number[],\n    zoom: number,\n    key: number | string,\n    ...classNames: string[]\n): any {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line-${key}`}\n        className={prefix(\"line\", \"direction\", direction ? \"edge\" : \"\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-key={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\n\nexport function renderEdgeLines(\n    React: Renderer,\n    ableName: string,\n    edge: true | string[],\n    poses: number[][],\n    zoom: number,\n): any[] {\n    const directions = edge === true ? DIRECTIONS4 : edge;\n\n    return directions.map((direction, i) => {\n        const [index1, index2] = DIRECTION_INDEXES[direction];\n\n        if (index2 == null) {\n            return;\n        }\n        return renderLine(React, direction, poses[index1], poses[index2], zoom, `${ableName}Edge${i}`, ableName);\n    }).filter(Boolean);\n}\n\nexport function getRenderDirections(ableName: string) {\n    return (\n        moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n        React: Renderer,\n    ) => {\n        const edge = getProps(moveable.props, ableName as any).edge;\n\n        if (edge && (edge === true || edge.length)) {\n            return [\n                ...renderEdgeLines(\n                    React,\n                    ableName,\n                    edge,\n                    moveable.getState().renderPoses,\n                    moveable.props.zoom!,\n                ),\n                ...renderDiagonalDirections(moveable, ableName, React),\n            ];\n        }\n        return renderAllDirections(moveable, ableName, React);\n    };\n}\n\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\n\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\n\nexport function renderAroundControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n    ableName?: string,\n    renderDirections?: string[],\n): any[] {\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    const {\n        zoom,\n    } = moveable.props;\n    const directionSign = sign(direction);\n    const degRotation = rotationRad / Math.PI * 180;\n\n    return (renderDirections || getKeys(renderDirectionMap)).map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + directionSign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        const classNames: string[] = [\"around-control\"];\n\n        if (ableName) {\n            classNames.push(\"direction\", ableName);\n        }\n        return (\n            <div\n                className={prefix(...classNames)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-around-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { abs, getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            direction: \"start\",\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            direction: \"end\",\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => abs(b.offset) - abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return abs(a - vec[index ? 0 : 1]) - abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { TINY_NUM } from \"@daybrush/utils\";\nimport { throttle } from \"@daybrush/utils\";\nimport {\n    MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculatePosition,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const SNAP_SKIP_NAMES_MAP = {\n    \"left\": \"start\",\n    \"right\": \"end\",\n    \"center\": \"center\",\n    \"top\": \"start\",\n    \"bottom\": \"end\",\n    \"middle\": \"center\",\n};\n\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\n\nexport function getInitialBounds() {\n    return {\n        left: false,\n        top: false,\n        right: false,\n        bottom: false,\n    };\n}\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\n\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontalNames,\n        verticalNames,\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\n    let dx = point2[0] - point1[0];\n    let dy = point2[1] - point1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n\n    // b > 0\n    // ax + by + c = 0\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (!dx) {\n        // -x + 1 = 0\n        a = -1;\n        c = point1[0];\n    } else if (!dy) {\n        // y - 1 = 0\n        b = 1;\n        c = -point1[1];\n    } else {\n        // y = -a(x - x1) + y1\n        // ax + y + a * x1 - y1 = 0\n        a = -dy / dx;\n        b = 1;\n        c = a * point1[0] - point1[1];\n    }\n\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\n}\n","export const NAME_snapRotationThreshold = \"snapRotationThreshold\";\nexport const NAME_snapRotationDegrees = \"snapRotationDegrees\";\nexport const NAME_snapHorizontalThreshold = \"snapHorizontalThreshold\";\nexport const NAME_snapVerticalThreshold = \"snapVerticalThreshold\";\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses, SnapDirectionInfo,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist, abs,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\nimport { NAME_snapHorizontalThreshold, NAME_snapVerticalThreshold } from \"./names\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    dirXs: string[] = [],\n    dirYs: string[] = [],\n    customSnapVerticalThreshold: number | undefined,\n    customSnapHorizontalThreshold: number | undefined,\n) {\n    const props = moveable.props;\n    const snapThresholdMultiples = moveable.state.snapThresholdInfo?.multiples || [1, 1];\n    const snapHorizontalThreshold = selectValue<number>(\n        customSnapHorizontalThreshold,\n        props[NAME_snapHorizontalThreshold],\n        5,\n    );\n    const snapVerticalThreshold = selectValue<number>(\n        customSnapVerticalThreshold,\n        props[NAME_snapVerticalThreshold],\n        5,\n    );\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        dirXs,\n        dirYs,\n        snapHorizontalThreshold,\n        snapVerticalThreshold,\n        snapThresholdMultiples,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    dirXs: string[],\n    dirYs: string[],\n    snapHorizontalThreshold: number,\n    snapVerticalThreshold: number,\n    multiples: number[],\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapVerticalThreshold * multiples[0], dirXs),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapHorizontalThreshold * multiples[1], dirYs),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(\n        moveable,\n        dx ? [endX] : [],\n        dy ? [endY] : [],\n        [],\n        [],\n        undefined,\n        undefined,\n    );\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\n\nfunction getStringDirection(dir: number | string) {\n    let stringDirection = \"\";\n\n    if (dir === -1 || dir === \"top\" || dir === \"left\") {\n        stringDirection = \"start\";\n    } else if (dir === 0 || dir === \"center\" || dir === \"middle\") {\n        stringDirection = \"center\";\n    } else if (dir === 1 || dir === \"right\" || dir === \"bottom\") {\n        stringDirection = \"end\";\n    }\n    return stringDirection;\n}\n\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapVerticalThreshold: number | undefined,\n    customSnapHorizontalThreshold: number | undefined,\n): { vertical: SnapDirectionInfo; horizontal: SnapDirectionInfo } {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    const result = checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        poses.verticalNames.map(name => getStringDirection(name)),\n        poses.horizontalNames.map(name => getStringDirection(name)),\n        customSnapVerticalThreshold,\n        customSnapHorizontalThreshold,\n    );\n    const horizontalDirection = getStringDirection(poses.horizontalNames[result.horizontal.index]);\n    const verticalDirection = getStringDirection(poses.verticalNames[result.vertical.index]);\n\n    return {\n        vertical: {\n            ...result.vertical,\n            direction: verticalDirection,\n        },\n        horizontal: {\n            ...result.horizontal,\n            direction: horizontalDirection,\n        },\n    };\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n    dirs: string[] = [],\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            direction: \"\",\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const direction = dirs[index] || \"\";\n\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: abs(offset),\n                guideline,\n                direction,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n            direction,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        direction: snapPosInfos[0]?.direction ?? \"\",\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    // pos1 pos2 pos3 pos4\n    poses: number[][],\n    snapDirection: number[],\n    customSnapVerticalThreshold: number | undefined,\n    customSnapHorizontalThreshold: number | undefined,\n): { vertical: SnapDirectionInfo; horizontal: SnapDirectionInfo } {\n    let dirs: number[][] = [];\n\n    if (snapDirection[0] && snapDirection[1]) {\n        dirs = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ];\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        [\n            [-1, -1],\n            [1, -1],\n            [1, 1],\n            [-1, 1],\n        ].forEach((dir, i, arr) => {\n            const nextDir = (arr[i + 1] || arr[0]);\n            dirs.push(dir);\n            dirs.push([\n                (dir[0] + nextDir[0]) / 2,\n                (dir[1] + nextDir[1]) / 2,\n            ]);\n        });\n    } else {\n        if (moveable.props.keepRatio) {\n            dirs.push(\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            );\n        } else {\n            dirs.push(...getPosesByDirection([\n                [-1, -1],\n                [1, -1],\n                [-1, -1],\n                [1, 1],\n            ], snapDirection));\n\n            if (dirs.length > 1) {\n                dirs.push([\n                    (dirs[0][0] + dirs[1][0]) / 2,\n                    (dirs[0][1] + dirs[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    const nextPoses = dirs.map(dir => getPosByDirection(poses, dir));\n    const xs = nextPoses.map(pos => pos[0]);\n    const ys = nextPoses.map(pos => pos[1]);\n    const result = checkMoveableSnapPoses(\n        moveable,\n        xs, ys,\n        dirs.map(dir => getStringDirection(dir[0])),\n        dirs.map(dir => getStringDirection(dir[1])),\n        customSnapVerticalThreshold,\n        customSnapHorizontalThreshold,\n    );\n    const verticalDirection = getStringDirection(dirs.map(dir => dir[0])[result.vertical.index]);\n    const horizontalDirection = getStringDirection(dirs.map(dir => dir[1])[result.horizontal.index]);\n\n    return {\n        vertical: {\n            ...result.vertical,\n            direction: verticalDirection,\n        },\n        horizontal: {\n            ...result.horizontal,\n            direction: horizontalDirection,\n        },\n    };\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = abs(a.offset);\n    const bDist = abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    fixedDirection: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    // const fixedDirection = [-direction[0], -direction[1]];\n\n    if (keepRatio) {\n        if (abs(fixedDirection[0]) !== 1 || abs(fixedDirection[1]) !== 1) {\n            directions.push(\n                [fixedDirection, [-1, -1]],\n                [fixedDirection, [-1, 1]],\n                [fixedDirection, [1, -1]],\n                [fixedDirection, [1, 1]],\n            );\n        } else {\n            directions.push(\n                [fixedDirection, [direction[0], -direction[1]]],\n                [fixedDirection, [-direction[0], direction[1]]],\n            );\n        }\n        directions.push([fixedDirection, direction]);\n    } else {\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\n            const endDirection = direction[0] ? direction : [1, 1];\n\n            [1, -1].forEach(signX => {\n                [1, -1].forEach(signY => {\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\n\n                    if (\n                        fixedDirection[0] === nextDirection[0]\n                        && fixedDirection[1] === nextDirection[1]\n                    ) {\n                        return;\n                    }\n                    directions.push([fixedDirection, nextDirection]);\n                });\n            });\n        } else if (direction[0]) {\n            const signs = abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [fixedDirection[0], -1],\n                        [sign * direction[0], -1],\n                    ],\n                    [\n                        [fixedDirection[0], 0],\n                        [sign * direction[0], 0],\n                    ],\n                    [\n                        [fixedDirection[0], 1],\n                        [sign * direction[0], 1],\n                    ]\n                );\n            });\n        } else if (direction[1]) {\n            const signs = abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [-1, fixedDirection[1]],\n                        [-1, sign * direction[1]],\n                    ],\n                    [\n                        [0, fixedDirection[1]],\n                        [0, sign * direction[1]],\n                    ],\n                    [\n                        [1, fixedDirection[1]],\n                        [1, sign * direction[1]],\n                    ]\n                );\n            });\n        }\n    }\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses, abs } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\nimport { getInitialBounds, solveLineConstants } from \"./utils\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\n    return dots.every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    if (isSameStartLine([\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line, centerSign)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    // test vertical\n\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (abs(horizontalOffset) < abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    [a, b]: [number, number, number],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    // const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    const hasDx = b;\n    const hasDy = a;\n    const slope = - a / b;\n    // lineConstants\n    // ax + by + c = 0\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        // by + c = 0\n        if (isRender && !hasDy) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDx) {\n            // ax + by + c = 0\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            // ax + c = 0\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !hasDx) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDy) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lineInfos: InnerBoundLineInfo[],\n    datas: any,\n) {\n    return lineInfos.map(info => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, info);\n\n        const multiple = info.multiple;\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\n        return {\n            ...info,\n            multiple: info.multiple.map(dir => abs(dir) * 2),\n        };\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport interface InnerBoundLineInfo {\n    line: number[][];\n    multiple: number[];\n    horizontalSign: boolean;\n    verticalSign: boolean;\n    centerSign: boolean;\n    lineConstants: [number, number, number];\n}\nexport function getCheckInnerBoundLineInfos(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n): InnerBoundLineInfo[] {\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n    const center = getPosByDirection(virtualPoses, [0, 0]);\n\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\n        const virtualLine = [\n            getPosByDirection(virtualPoses, dir1),\n            getPosByDirection(virtualPoses, dir2),\n        ];\n        const lineConstants = solveLineConstants(virtualLine);\n        const {\n            vertical: verticalSign,\n            horizontal: horizontalSign,\n        } = isStartLine(center, virtualLine);\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\n\n        return {\n            multiple,\n            centerSign,\n            verticalSign,\n            horizontalSign,\n            lineConstants,\n            line: [\n                getPosByDirection(poses, dir1),\n                getPosByDirection(poses, dir2),\n            ],\n        };\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => {\n        const centerSign = hitTestLine(center, line) <= 0;\n\n        return !isSameStartLine(boundDots, line, centerSign);\n    });\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return abs(pos1[0]);\n    }\n    if (!dy) {\n        return abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n    const boundMap = getInitialBounds();\n\n    if (!innerBounds) {\n        return {\n            boundMap,\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n\n    lineInfos.forEach(lineInfo => {\n        const { line, lineConstants } = lineInfo;\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        boundMap,\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { abs, getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * abs(distX + offsetX)) / abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * abs(distY + offsetY)) / abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    abs(offsetX) > TINY_NUM &&\n                    abs(offsetX) < abs(verticalOffset)\n                ) {\n                    const scale = abs(verticalOffset) / abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    abs(offsetY) > TINY_NUM &&\n                    abs(offsetY) < abs(horizontalOffset)\n                ) {\n                    const scale =\n                        abs(horizontalOffset) / abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    ignoreSnap: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, ignoreSnap, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    ignoreSnap: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = ignoreSnap ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = abs(horizontalOffset);\n    const verticalDist = abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapHorizontalThreshold: number,\n    snapVerticalThreshold: number,\n    multiples = [1, 1],\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(\n        guideines, posesX, posesY, [], [],\n        snapHorizontalThreshold,\n        snapVerticalThreshold,\n        multiples,\n    );\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = abs(horizontalOffset);\n    const verticalDist = abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        let sizeOffset = [0, 0];\n\n        if (\n            !keepRatio\n            && abs(endDirection[0]) === 1\n            && abs(endDirection[1]) === 1\n            && startDirection[0] !== endDirection[0]\n            && startDirection[1] !== endDirection[1]\n        ) {\n            sizeOffset = getDragDist({\n                datas,\n                distX: -otherVerticalOffset,\n                distY: -otherHorizontalOffset,\n            });\n        } else {\n            sizeOffset = solveNextOffset(\n                otherStartPos,\n                otherEndPos,\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n                isVertical,\n                datas,\n            ).offset;\n        }\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = abs(horizontalOffset);\n    const verticalDist = abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (abs(deg - 360) < 2 || abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (abs(deg - 90) < 2 || abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams,\n    fillCSSObject,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: [\n        \"draggable\",\n        \"throttleDrag\",\n        \"throttleDragRotate\",\n        \"hideThrottleDragRotateLine\",\n        \"startDragRotate\",\n        \"edgeDraggable\",\n    ] as const,\n    events: [\n        \"dragStart\",\n        \"drag\",\n        \"dragEnd\",\n        \"dragGroupStart\",\n        \"dragGroup\",\n        \"dragGroupEnd\",\n    ] as const,\n    requestStyle(): string[] {\n        return [\"left\", \"top\", \"right\", \"bottom\"];\n    },\n    requestChildStyle(): string[] {\n        return [\"left\", \"top\", \"right\", \"bottom\"];\n    },\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { hideThrottleDragRotateLine, throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.getState();\n\n        if (hideThrottleDragRotateLine || !throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            gestos,\n            style,\n        } = state;\n\n        if (gestos.draggable) {\n            return false;\n        }\n        gestos.draggable = parentGesto || moveable.targetGesto;\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(moveable, e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(moveable, e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            gestos.draggable = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(moveable, e, \"translate\");\n\n        const {\n            datas, parentEvent,\n            parentFlag, isPinch, deltaOffset,\n            useSnap,\n            isRequest,\n            isGroup,\n            parentThrottleDrag,\n        } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n\n        if (deltaOffset) {\n            distX += deltaOffset[0];\n            distY += deltaOffset[1];\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = isGroup ? 0 : (props.throttleDrag || parentThrottleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let dragRotateRad = 0;\n        let isVerticalSnap = false;\n        let isVerticalBound = false;\n        let isHorizontalSnap = false;\n        let isHorizontalBound = false;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY,\n                throttleDragRotate,\n                (!useSnap && isRequest) || deltaOffset,\n                datas,\n            );\n            isVerticalSnap = verticalInfo.isSnap;\n            isVerticalBound = verticalInfo.isBound;\n            isHorizontalSnap = horizontalInfo.isSnap;\n            isHorizontalBound = horizontalInfo.isBound;\n\n            const verticalOffset = verticalInfo.offset;\n            const horizontalOffset = horizontalInfo.offset;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        throttleArray(translate, TINY_NUM);\n        throttleArray(beforeTranslate, TINY_NUM);\n\n        if (!throttleDragRotate) {\n            if (!isVerticalSnap && !isVerticalBound) {\n                translate[0] = throttle(translate[0], throttleDrag);\n                beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\n            }\n            if (!isHorizontalSnap && !isHorizontalBound) {\n                translate[1] = throttle(translate[1], throttleDrag);\n                beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\n            }\n        }\n\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n        } = datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            return this.drag(moveable, {...e, deltaOffset });\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const {\n            childEvents,\n            eventParams,\n        } = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false, \"draggable\");\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events: eventParams,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n\n        // find data.startValue and based on first child moveable\n        const startValue = childEvents[0]?.datas.startValue ?? [0, 0];\n\n\n        datas.throttleOffset = [startValue[0] % 1, startValue[1] % 1];\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, {\n            ...e,\n            parentThrottleDrag: moveable.props.throttleDrag,\n        });\n        const { passDelta } = e.datas;\n        const {\n            eventParams,\n        } = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\n\n        if (!params) {\n            return;\n        }\n\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events: eventParams,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const {\n            eventParams,\n        } = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events: eventParams,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n        let useSnap = false;\n\n        return {\n            isControl: false,\n            requestStart(e: Record<string, any>) {\n                useSnap = e.useSnap;\n                return { datas, useSnap };\n            },\n            request(e: Record<string, any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY, useSnap };\n            },\n            requestEnd() {\n                return { datas, isDrag: true, useSnap };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, Record<string, any>>) {\n        moveable.state.gestos.draggable = null;\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import { calculatePosition } from \"../utils\";\nimport { getDirectionByPos, getPosByDirection } from \"../gesto/GestoUtils\";\n\n\nexport function getFixedDirectionInfo(\n    startPositions: number[][],\n    fixedDirection: number[],\n) {\n    const fixedPosition = getPosByDirection(startPositions, fixedDirection);\n    const fixedOffset = [0, 0];\n\n    return {\n        fixedPosition,\n        fixedDirection,\n        fixedOffset,\n    };\n}\n\nexport function getOffsetFixedDirectionInfo(\n    state: {\n        allMatrix: number[];\n        is3d: boolean;\n        width: number;\n        height: number;\n    },\n    fixedDirection: number[],\n) {\n    // for start\n    const {\n        allMatrix,\n        is3d,\n        width,\n        height,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + fixedDirection[0]),\n        height / 2 * (1 + fixedDirection[1]),\n    ];\n    const fixedPosition = calculatePosition(allMatrix, nextFixedOffset, n);\n    const fixedOffset = [0, 0];\n\n    return {\n        fixedPosition,\n        fixedDirection,\n        fixedOffset,\n    };\n}\n\n\nexport function getOffsetFixedPositionInfo(\n    state: {\n        allMatrix: number[];\n        is3d: boolean;\n        width: number;\n        height: number;\n    },\n    offsetFixedPosition: number[],\n) {\n    // for start\n    const {\n        allMatrix,\n        is3d,\n        width,\n        height,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const fixedDirection = getDirectionByPos(offsetFixedPosition, width, height);\n    const nextFixedPosition = calculatePosition(allMatrix, offsetFixedPosition, n);\n    const fixedOffset = [\n        width ? 0 : offsetFixedPosition[0],\n        height ? 0 : offsetFixedPosition[1],\n    ];\n\n    return {\n        fixedPosition: nextFixedPosition,\n        fixedDirection,\n        fixedOffset,\n    };\n}\n","import {\n    triggerEvent,\n    fillParams,\n    fillEndParams,\n    getAbsolutePosesByState,\n    catchEvent,\n    getOffsetSizeDist,\n    getProps,\n    getDirectionCondition,\n    calculatePoses,\n    fillAfterTransform,\n    getDirectionViewClassName,\n    getTotalDirection,\n    abs,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getResizeDist,\n    getAbsolutePosition,\n    getNextMatrix,\n    getNextTransforms,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\n} from \"../types\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    startChildDist,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, convertDimension, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize,\n    isString, convertUnitSize,\n    throttle,\n    isNumber,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\nimport { parseMat } from \"css-to-mat\";\nimport { getFixedDirectionInfo, getOffsetFixedPositionInfo } from \"../utils/getFixedDirection\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nconst directionCondition = getDirectionCondition(\"resizable\");\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: [\n        \"resizable\",\n        \"throttleResize\",\n        \"renderDirections\",\n        \"displayAroundControls\",\n        \"keepRatio\",\n        \"resizeFormat\",\n        \"keepRatioFinally\",\n        \"edge\",\n        \"checkResizableError\",\n    ] as const,\n    events: [\n        \"resizeStart\",\n        \"beforeResize\",\n        \"resize\",\n        \"resizeEnd\",\n        \"resizeGroupStart\",\n        \"beforeResizeGroup\",\n        \"resizeGroup\",\n        \"resizeGroupEnd\",\n    ] as const,\n    render: getRenderDirections(\"resizable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"resizable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            isGroup,\n            parentDirection,\n            parentGesto,\n            datas,\n            parentFixedDirection,\n            parentEvent,\n        } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n\n        const state = moveable.state;\n        const { target, width, height, gestos } = state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (gestos.resizable) {\n            return false;\n        }\n        gestos.resizable = parentGesto || moveable.controlGesto;\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n\n        datas.minSize = [0, 0];\n\n\n        datas.startWidth = state.inlineCSSWidth || state.cssWidth;\n        datas.startHeight = state.inlineCSSHeight || state.cssHeight;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!isGroup) {\n            datas.minSize = [\n                state.minOffsetWidth,\n                state.minOffsetHeight,\n            ];\n            datas.maxSize = [\n                state.maxOffsetWidth,\n                state.maxOffsetHeight,\n            ];\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.startOffsetMatrix = state.offsetMatrix;\n        datas.startTransformOrigin = state.transformOrigin;\n\n        datas.isWidth = e?.parentIsWidth ?? ((!direction[0] && !direction[1]) || direction[0] || !direction[1]);\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n\n        function setFixedDirection(fixedDirection: number[]) {\n            const result = getFixedDirectionInfo(datas.startPositions, fixedDirection);\n\n            datas.fixedDirection = result.fixedDirection;\n            datas.fixedPosition = result.fixedPosition;\n            datas.fixedOffset = result.fixedOffset;\n        }\n        function setFixedPosition(fixedPosition: number[]) {\n            const result = getOffsetFixedPositionInfo(moveable.state, fixedPosition);\n\n            datas.fixedDirection = result.fixedDirection;\n            datas.fixedPosition = result.fixedPosition;\n            datas.fixedOffset = result.fixedOffset;\n        }\n        function setMin(minSize: Array<string | number>)  {\n            datas.minSize = [\n                convertUnitSize(`${minSize[0]}`, 0) || 0,\n                convertUnitSize(`${minSize[1]}`, 0) || 0,\n            ];\n        }\n        function setMax(maxSize: Array<string | number>) {\n            const nextMaxSize = [\n                maxSize[0] || Infinity,\n                maxSize[1] || Infinity,\n            ];\n            if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n                nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\n            }\n            if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n                nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\n            }\n            datas.maxSize = nextMaxSize;\n        }\n\n        setRatio(width / height);\n        setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n\n        datas.setFixedDirection = setFixedDirection;\n        datas.setFixedPosition = setFixedPosition;\n        datas.setMin = setMin;\n        datas.setMax = setMax;\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            startRatio: datas.ratio,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin,\n            setMax,\n            setRatio,\n            setFixedDirection,\n            setFixedPosition,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n        datas.startFixedPosition = datas.fixedPosition;\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            parentFlag,\n            isPinch,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            useSnap,\n            isRequest,\n            isGroup,\n            parentEvent,\n            resolveMatrix,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            startOffsetWidth,\n            startOffsetHeight,\n            isWidth,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        if (resolveMatrix) {\n            const {\n                is3d,\n            } = moveable.state;\n            const {\n                startOffsetMatrix,\n                startTransformOrigin,\n            } = datas;\n            const n = is3d ? 4 : 3;\n            let targetMatrix = parseMat(getNextTransforms(e));\n            const targetN = Math.sqrt(targetMatrix.length);\n\n            if (n !== targetN) {\n                targetMatrix = convertDimension(targetMatrix, targetN, n);\n            }\n\n            const nextAllMatrix = getNextMatrix(\n                startOffsetMatrix,\n                targetMatrix,\n                startTransformOrigin,\n                n,\n            );\n            const poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n\n            datas.startPositions = poses;\n            datas.nextTargetMatrix = targetMatrix;\n            datas.nextAllMatrix = nextAllMatrix;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n        const {\n            resizeFormat,\n            throttleResize = parentFlag ? 0 : 1,\n            parentMoveable,\n            keepRatioFinally,\n        } = props;\n        const direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n\n        function getNextBoundingSize() {\n            const fixedDirection = datas.fixedDirection;\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n            distWidth = nextSize.distWidth;\n            distHeight = nextSize.distHeight;\n\n            let nextWidth = (sizeDirection[0] - fixedDirection[0]) || keepRatio\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n            let nextHeight = (sizeDirection[1] - fixedDirection[1]) || keepRatio\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n                if (isWidth) {\n                    nextHeight = nextWidth / ratio;\n                } else {\n                    nextWidth = nextHeight * ratio;\n                }\n            }\n            return [nextWidth, nextHeight];\n        }\n\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n        if (!parentEvent) {\n            datas.setFixedDirection(datas.fixedDirection);\n\n            triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\n                startFixedDirection: datas.startFixedDirection,\n                startFixedPosition: datas.startFixedPosition,\n                setFixedDirection(nextFixedDirection: number[]) {\n                    datas.setFixedDirection(nextFixedDirection);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                setFixedPosition(nextFixedPosition: number[]) {\n                    datas.setFixedPosition(nextFixedPosition);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                boundingWidth,\n                boundingHeight,\n                setSize(size: number[]) {\n                    [boundingWidth, boundingHeight] = size;\n                },\n            }, true));\n        }\n\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable,\n                boundingWidth,\n                boundingHeight,\n                direction,\n                fixedPosition,\n                !useSnap && isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n\n        function computeSize() {\n            if (resizeFormat) {\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\n            }\n            boundingWidth = throttle(boundingWidth, throttleResize!);\n            boundingHeight = throttle(boundingHeight, throttleResize!);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (abs(snapDist[0]) > abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                // pre-compute before maintaining the ratio\n                computeSize();\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                boundingWidth += snapDist[0];\n                boundingHeight = boundingWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                boundingHeight += snapDist[1];\n                boundingWidth = boundingHeight * ratio;\n            }\n        } else {\n            boundingWidth += snapDist[0];\n            boundingHeight += snapDist[1];\n\n            boundingWidth = Math.max(0, boundingWidth);\n            boundingHeight = Math.max(0, boundingHeight);\n        }\n\n        [boundingWidth, boundingHeight] = calculateBoundSize(\n            [boundingWidth, boundingHeight],\n            minSize,\n            maxSize,\n            keepRatio ? ratio : false,\n        );\n        computeSize();\n\n        if (keepRatio && (isGroup || keepRatioFinally)) {\n            if (isWidth) {\n                boundingHeight = boundingWidth / ratio;\n            } else {\n                boundingWidth = boundingHeight * ratio;\n            }\n        }\n        distWidth = boundingWidth - startOffsetWidth;\n        distHeight = boundingHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            boundingWidth,\n            boundingHeight,\n            fixedPosition,\n            transformOrigin,\n            datas,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const drag = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"),\n        ) as OnDrag;\n        const transform = drag.transform;\n\n        const nextWidth = startWidth + distWidth;\n        const nextHeight = startHeight + distHeight;\n\n        const params = fillParams<OnResize>(moveable, e, {\n            width: nextWidth,\n            height: nextHeight,\n            offsetWidth: Math.round(boundingWidth),\n            offsetHeight: Math.round(boundingHeight),\n            startRatio: ratio,\n            boundingWidth,\n            boundingHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag,\n            ...fillAfterTransform({\n                style: {\n                    width: `${nextWidth}px`,\n                    height: `${nextHeight}px`,\n                },\n                transform,\n            }, drag, e),\n        });\n        !parentEvent && triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize || moveable.props.checkResizableError === false) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = abs(errorWidth) > 3;\n        const isErrorHeight = abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, parentEvent } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        const {\n            startOffsetWidth: parentStartOffsetWidth,\n            startOffsetHeight: parentStartOffsetHeight,\n        } = datas;\n\n        function updateGroupMin() {\n            const originalMinSize = datas.minSize;\n            originalEvents.forEach(ev => {\n                const {\n                    minSize: childMinSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMinWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n                const parentMinHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n\n                originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n                originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n            });\n        }\n\n        function updateGroupMax() {\n            const originalMaxSize = datas.maxSize;\n            originalEvents.forEach(ev => {\n                const {\n                    maxSize: childMaxSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMaxWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n                const parentMaxHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n\n                originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n                originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n            });\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return startChildDist(moveable, child, datas, ev);\n            },\n        );\n\n\n        updateGroupMin();\n        updateGroupMax();\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                startChildDist(moveable, ev.moveable, datas, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events: events.map(ev => {\n                return {\n                    ...ev,\n                    setMin: (minSize: Array<number | string>) => {\n                        ev.setMin(minSize);\n                        updateGroupMin();\n                    },\n                    setMax: (maxSize: Array<number | string>) => {\n                        ev.setMax(maxSize);\n                        updateGroupMax();\n                    },\n                };\n            }),\n            setFixedDirection,\n            setMin: (minSize: Array<number | string>) => {\n                params.setMin(minSize);\n                updateGroupMin();\n            },\n            setMax: (maxSize: Array<number | string>) => {\n                params.setMax(maxSize);\n                updateGroupMax();\n            },\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\n                ...parentEvent,\n                targets: props.targets!,\n            }, true));\n        });\n\n\n        const params = this.dragControl(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return;\n        }\n        const {\n            boundingWidth,\n            boundingHeight,\n            dist,\n        } = params;\n\n        const keepRatio = props.keepRatio;\n\n        const parentScale = [\n            boundingWidth / (boundingWidth - dist[0]),\n            boundingHeight / (boundingHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas: Record<string, any> = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        let useSnap = false;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: ResizableRequestParam) {\n                useSnap = e.useSnap!;\n\n                return {\n                    datas, parentDirection: e.direction || [1, 1],\n                    parentIsWidth: e?.horizontal ?? true,\n                    useSnap,\n                };\n            },\n            request(e: ResizableRequestParam) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth!;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight!;\n                }\n\n\n                return {\n                    datas,\n                    parentDist: [distWidth, distHeight],\n                    parentKeepRatio: e.keepRatio,\n                    useSnap,\n                };\n            },\n            requestEnd() {\n                return { datas, isDrag: true, useSnap };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, {}>) {\n        moveable.state.gestos.resizable = null;\n    },\n};\n\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n    catchEvent, getProps, calculateMoveableClientPositions,\n    fillAfterTransform,\n    getTotalOrigin,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n    getDist,\n    getKeys,\n    isArray,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnBeforeRotate,\n    OnBeforeRotateGroup,\n    OnResizeStart,\n    OnResize,\n    TransformObject,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport { calculate, convertPositionMatrix, getOrigin, minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n    getPosByDirection,\n    getTranslateFixedPosition,\n} from \"../gesto/GestoUtils\";\nimport { DirectionControlInfo, renderAroundControls, renderDirectionControlsByInfos } from \"../renderDirections\";\nimport { DIRECTION_REGION_TO_DIRECTION } from \"../consts\";\nimport Resizable from \"./Resizable\";\nimport Draggable from \"./Draggable\";\nimport { getOffsetFixedDirectionInfo, getOffsetFixedPositionInfo } from \"../utils/getFixedDirection\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number,\n    rect: MoveableClientRect,\n) {\n    const groupable = moveable.props.groupable;\n    const state = moveable.state;\n    const n = state.is3d ? 4 : 3;\n    const origin = datas.origin;\n    const nextOrigin = calculatePosition(\n        moveable.state.rootMatrix,\n        // TO-DO #710\n        minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]),\n        n,\n    );\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.defaultDeg = datas.prevDeg;\n    datas.prevSnapDeg = 0;\n    datas.loop = 0;\n    datas.startDist = getDist(startAbsoluteOrigin, [clientX, clientY]);\n}\n\nfunction getAbsoluteDist(\n    deg: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    const {\n        defaultDeg,\n        prevDeg,\n    } = datas;\n\n\n    let normalizedPrevDeg = prevDeg % 360;\n    let loop = Math.floor(prevDeg / 360);\n\n    if (normalizedPrevDeg < 0) {\n        normalizedPrevDeg += 360;\n    }\n\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++loop;\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --loop;\n    }\n    const dist = direction * (loop * 360 + deg - defaultDeg);\n\n    datas.prevDeg = defaultDeg + dist;\n\n    return dist;\n}\nfunction getAbsoluteDistByClient(\n    clientX: number, clientY: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    return getAbsoluteDist(\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        datas,\n    );\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    dist: number,\n    startValue: number,\n    checkSnap?: boolean,\n) {\n    const {\n        throttleRotate = 0,\n    } = moveable.props;\n    const prevSnapDeg = datas.prevSnapDeg;\n    let snapRotation = 0;\n    let isSnap = false;\n\n    if (checkSnap) {\n        const result = checkSnapRotate(\n            moveable,\n            moveableRect,\n            dist,\n            startValue + dist,\n        );\n\n        isSnap = result.isSnap;\n        snapRotation = startValue + result.dist;\n    }\n\n    if (!isSnap) {\n        snapRotation = throttle(startValue + dist, throttleRotate);\n    }\n    const snapDeg = snapRotation - startValue;\n\n    datas.prevSnapDeg = snapDeg;\n\n    return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n\n\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n): [number[], number][] {\n    if (rotationPosition === \"none\") {\n        return [];\n    }\n    if (isArray(rotationPosition)) {\n        return rotationPosition.map(child => getRotationPositions(\n            child,\n            [pos1, pos2, pos3, pos4],\n            direction,\n        )[0]);\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [[pos, rad]];\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (\n        hasClass(target, prefix(\"rotation-control\"))\n        || (moveable.props.rotateAroundControls && hasClass(target, prefix(\"around-control\")))\n        || (hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\")))\n    ) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nconst css = `.rotation {\nposition: absolute;\nheight: 40px;\nwidth: 1px;\ntransform-origin: 50% 100%;\nheight: calc(40px * var(--zoom));\ntop: auto;\nleft: 0;\nbottom: 100%;\nwill-change: transform;\n}\n.rotation .rotation-line {\ndisplay: block;\nwidth: 100%;\nheight: 100%;\ntransform-origin: 50% 50%;\n}\n.rotation .rotation-control {\nborder-color: #4af;\nborder-color: var(--moveable-color);\nbackground:#fff;\ncursor: alias;\n}\n:global .view-rotation-dragging, .rotatable.direction.control {\ncursor: alias;\n}\n.rotatable.direction.control.move {\ncursor: move;\n}\n`;\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: [\n        \"rotatable\",\n        \"rotationPosition\",\n        \"throttleRotate\",\n        \"renderDirections\",\n        \"rotationTarget\",\n        \"rotateAroundControls\",\n        \"edge\",\n        \"resolveAblesWithRotatable\",\n        \"displayAroundControls\",\n    ] as const,\n    events: [\n        \"rotateStart\",\n        \"beforeRotate\",\n        \"rotate\",\n        \"rotateEnd\",\n        \"rotateGroupStart\",\n        \"beforeRotateGroup\",\n        \"rotateGroup\",\n        \"rotateGroupEnd\",\n    ] as const,\n    css: [css],\n    viewClassName(moveable: MoveableManagerInterface<RotatableProps>) {\n        if (!moveable.isDragging(\"rotatable\")) {\n            return \"\";\n        }\n        return prefix(\"view-rotation-dragging\");\n    },\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n            rotateAroundControls,\n            resolveAblesWithRotatable,\n        } = getProps(moveable.props, \"rotatable\");\n        const {\n            renderPoses,\n            direction,\n        } = moveable.getState();\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n        const jsxs: any[] = [];\n\n        positions.forEach(([pos, rad], i) => {\n            jsxs.push(\n                <div key={`rotation${i}`} className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        });\n        if (renderDirections) {\n            const ables = getKeys(resolveAblesWithRotatable || {});\n            const resolveMap: Record<string, string> = {};\n\n            ables.forEach(name => {\n                resolveAblesWithRotatable![name]!.forEach(direction => {\n                    resolveMap[direction] = name;\n                });\n            });\n\n            let directionControlInfos: DirectionControlInfo[] = [];\n\n            if (isArray(renderDirections)) {\n                directionControlInfos = renderDirections.map(dir => {\n                    const able = resolveMap[dir];\n\n                    return {\n                        data: able ? { resolve: able } : {},\n                        classNames: able ? [`move`] : [],\n                        dir,\n                    };\n                });\n            }\n\n            jsxs.push(...renderDirectionControlsByInfos(\n                moveable,\n                \"rotatable\",\n                directionControlInfos,\n                React,\n            ));\n        }\n        if (rotateAroundControls) {\n            jsxs.push(...renderAroundControls(moveable, React));\n        }\n\n        return jsxs;\n    },\n    dragControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const state = moveable.state;\n        const {\n            target, left, top,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n            offsetMatrix,\n            targetMatrix,\n            allMatrix,\n            width,\n            height,\n        } = state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        let setFixedPosition = (fixedPosition: number[]) => {\n            const result = getOffsetFixedPositionInfo(moveable.state, fixedPosition);\n\n            datas.fixedDirection = result.fixedDirection;\n            datas.fixedOffset = result.fixedOffset;\n            datas.fixedPosition = result.fixedPosition;\n\n\n            if (resizeStart) {\n                resizeStart.setFixedPosition(fixedPosition);\n            }\n        };\n        let setFixedDirection: OnRotateStart[\"setFixedDirection\"] = (fixedDirection: number[]) => {\n            const result = getOffsetFixedDirectionInfo(moveable.state, fixedDirection);\n\n            datas.fixedDirection = result.fixedDirection;\n            datas.fixedOffset = result.fixedOffset;\n            datas.fixedPosition = result.fixedPosition;\n\n            if (resizeStart) {\n                resizeStart.setFixedDirection(fixedDirection);\n            }\n        };\n        let startClientX = clientX;\n        let startClientY = clientY;\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                defaultDeg: externalRotate,\n                prevSnapDeg: 0,\n                startDist: 0,\n            };\n            datas.afterInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n            };\n            datas.absoluteInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n                startValue: externalRotate,\n            };\n        } else {\n            const inputTarget = e.inputEvent?.target;\n\n            if (inputTarget) {\n                const regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n                const controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n\n                if (controlDirection) {\n                    datas.isControl = true;\n                    datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n                    datas.controlDirection = controlDirection;\n                    const resolve = inputTarget.getAttribute(\"data-resolve\");\n\n                    if (resolve) {\n                        datas.resolveAble = resolve;\n                    }\n\n                    const clientPoses = calculateMoveableClientPositions(\n                        state.rootMatrix,\n                        state.renderPoses,\n                        moveableClientRect,\n                    );\n\n\n                    [startClientX, startClientY] = getPosByDirection(clientPoses, controlDirection);\n                }\n            }\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n            datas.absoluteInfo = {\n                origin: rect.origin,\n                startValue: rect.rotation,\n            };\n\n            const originalFixedPosition = setFixedPosition;\n\n            setFixedPosition = (fixedPosition: number[]) => {\n                const n = state.is3d ? 4 : 3;\n                const [originX, originY] = plus(getOrigin(targetMatrix, n), fixedPosition);\n                const fixedBeforeOrigin = calculate(\n                    offsetMatrix,\n                    convertPositionMatrix([originX, originY], n),\n                );\n                const fixedAfterOrigin = calculate(\n                    allMatrix,\n                    convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n),\n                );\n                originalFixedPosition(fixedPosition);\n                const posDelta = state.posDelta;\n\n                datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\n                datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\n                datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\n\n                setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n            };\n            setFixedDirection = (fixedDirection: number[]) => {\n                const fixedPosition = getPosByDirection([\n                    [0, 0],\n                    [width, 0],\n                    [0, height],\n                    [width, height],\n                ], fixedDirection);\n\n                setFixedPosition(fixedPosition);\n            };\n        }\n\n        datas.startClientX = startClientX;\n        datas.startClientY = startClientY;\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(moveable, e, \"rotate\");\n\n        let dragStart: OnDragStart | false = false;\n        let resizeStart: OnResizeStart | false = false;\n\n        if (datas.isControl && datas.resolveAble) {\n            const resolveAble = datas.resolveAble;\n\n            if (resolveAble === \"resizable\") {\n                resizeStart = Resizable.dragControlStart(moveable, {\n                    ...(new CustomGesto(\"resizable\").dragStart([0, 0], e)),\n                    parentPosition: datas.controlPosition,\n                    parentFixedPosition: datas.fixedPosition,\n                });\n            }\n        }\n\n        if (!resizeStart) {\n            dragStart = Draggable.dragStart!(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            );\n        }\n\n        setFixedPosition(getTotalOrigin(moveable));\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            setFixedDirection,\n            setFixedPosition,\n            ...fillTransformStartEvent(moveable, e),\n            dragStart,\n            resizeStart,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const {\n            datas, clientDistX, clientDistY,\n            parentRotate, parentFlag, isPinch, groupDelta,\n            resolveMatrix,\n        } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n            startClientX,\n            startClientY,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(moveable, e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            parentMoveable,\n        } = moveable.props;\n\n\n        let beforeDelta = 0;\n        let beforeDist: number;\n        let beforeRotation: number;\n\n        let delta = 0;\n        let dist: number;\n        let rotation: number;\n\n        let absoluteDelta = 0;\n        let absoluteDist: number;\n        let absoluteRotation: number;\n\n        const startRotation = 180 / Math.PI * startValue;\n        const absoluteStartRotation = absoluteInfo.startValue;\n        let isSnap = false;\n        const nextClientX = startClientX + clientDistX;\n        const nextClientY = startClientY + clientDistY;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            beforeDist = parentDist;\n            dist = parentDist;\n            absoluteDist = parentDist;\n        } else if (isPinch || parentFlag) {\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n        } else {\n            beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n            dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n            absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n            isSnap = true;\n        }\n        beforeRotation = startRotation + beforeDist;\n        rotation = startRotation + dist;\n        absoluteRotation = absoluteStartRotation + absoluteDist;\n\n\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\n            beforeRotation,\n            rotation,\n            absoluteRotation,\n            setRotation(nextRotation: number) {\n                dist = nextRotation - startRotation;\n                beforeDist = dist;\n                absoluteDist = dist;\n            },\n        }, true));\n\n        [\n            beforeDelta,\n            beforeDist,\n            beforeRotation,\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\n\n        [\n            delta,\n            dist,\n            rotation,\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\n\n        [\n            absoluteDelta,\n            absoluteDist,\n            absoluteRotation,\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable && !resolveMatrix) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\n        );\n        if (resolveMatrix) {\n            datas.fixedPosition = getTranslateFixedPosition(\n                moveable,\n                datas.targetAllTransform,\n                datas.fixedDirection,\n                datas.fixedOffset,\n                datas,\n            );\n        }\n\n        const inverseDist = getRotateDist(moveable, dist, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n        datas.requestValue = null;\n\n        const dragEvent = fillTransformEvent(\n            moveable,\n            nextTransform,\n            inverseDelta,\n            isPinch,\n            e,\n        );\n\n        let transformEvent: TransformObject = dragEvent;\n        const parentDistance = getDist(\n            [nextClientX, nextClientY],\n            absoluteInfo.startAbsoluteOrigin,\n        ) - absoluteInfo.startDist;\n\n        let resize: OnResize | undefined = undefined;\n\n        if (datas.resolveAble === \"resizable\") {\n            const resizeEvent = Resizable.dragControl(\n                moveable,\n                {\n                    ...setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\"),\n                    resolveMatrix: true,\n                    parentDistance,\n                },\n            );\n\n            if (resizeEvent) {\n                resize = resizeEvent;\n                transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n            }\n        }\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate: rotation,\n            rotation,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate: beforeRotation,\n            beforeRotation,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate: absoluteRotation,\n            absoluteRotation,\n\n            isPinch: !!isPinch,\n            resize,\n            ...dragEvent,\n            ...transformEvent,\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.startGroupClient = childClient;\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const rad = parentRotate / 180 * Math.PI;\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const startGroupClient = ev.datas.startGroupClient;\n                const [prevClientX, prevClientY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix(startGroupClient, rad * direction);\n                const delta = [clientX - prevClientX, clientY - prevClientY];\n\n                ev.datas.groupClient = [clientX, clientY];\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotation;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            setGroupRotation(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n): any[] {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element, className } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n): any {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number, type: \"vertical\" | \"horizontal\") => {\n            // Type can be used render different values.\n            if (type === 'vertical') {\n                return v;\n            }\n            return v;\n        },\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                    direction: \"\",\n                    elementDirection: \"end\",\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                    direction: \"\",\n                    elementDirection: \"start\",\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n): any[] {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type).slice(0, 1);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect, className }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { convertUnitSize, dot, flat, isNumber, isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport {\n    MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapGuideline, SnapDirectionPoses,\n    PosGuideline, ElementGuidelineValue,\n    SnapElementRect,\n    NumericPosGuideline,\n} from \"../../types\";\nimport { getRect, getAbsolutePosesByState, getRefTarget, calculateInversePosition, prefix, abs } from \"../../utils\";\nimport {\n    splitSnapDirectionPoses, getSnapDirections,\n    HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP, calculateContainerPos, SNAP_SKIP_NAMES_MAP,\n} from \"./utils\";\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        hasFixed,\n    } = state;\n    const {\n        overflow,\n        scrollHeight: containerHeight,\n        scrollWidth: containerWidth,\n        clientHeight: containerClientHeight,\n        clientWidth: containerClientWidth,\n        clientLeft,\n        clientTop,\n    } = containerClientRect;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        maxSnapElementGuidelineDistance = Infinity,\n        isDisplayGridGuidelines,\n    } = moveable.props;\n    const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n    const targetRect = { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 };\n    const elementGuidelines = getElementGuidelines(moveable);\n    let totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    const snapThresholdMultiples = (state.snapThresholdInfo?.multiples ?? [1, 1]).map(n => n * snapThreshold);\n\n    if (snapGap) {\n        totalGuidelines.push(...getGapGuidelines(\n            moveable,\n            targetRect,\n            snapThresholdMultiples,\n        ));\n    }\n    const snapOffset = {\n        ...(state.snapOffset || {\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n        }),\n    };\n\n    totalGuidelines.push(...getGridGuidelines(\n        moveable,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n        isDisplayGridGuidelines,\n    ));\n\n\n    if (hasFixed) {\n        const { left, top } = containerClientRect;\n\n        snapOffset.left += left;\n        snapOffset.top += top;\n        snapOffset.right += left;\n        snapOffset.bottom += top;\n    }\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    totalGuidelines = totalGuidelines.filter(({ element, elementRect, type }) => {\n        if (!element || !elementRect) {\n            return true;\n        }\n        const rect = elementRect.rect;\n\n        return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n    });\n\n    return totalGuidelines;\n}\n\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThresholds: number[],\n) {\n    const {\n        maxSnapElementGuidelineDistance = Infinity,\n        maxSnapElementGapDistance = Infinity,\n    } = moveable.props;\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        const snapThresholdMap = {\n            left: snapThresholds[0],\n            top: snapThresholds[1],\n        };\n\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n            const snapThreshold = snapThresholdMap[mainNames.start];\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            const snapThreshold = snapThresholdMap[mainNames.start];\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n                return;\n            }\n            if (gap > maxSnapElementGapDistance) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n                direction: \"\",\n                elementDirection: \"\",\n            });\n        });\n    });\n    return gapGuidelines;\n}\n\nexport function startGridGroupGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    clientLeft: number,\n    clientTop: number,\n    snapOffset: { left: number, top: number, right: number, bottom: number },\n) {\n    const props = moveable.props;\n    const state = moveable.state;\n    const {\n        snapGridAll,\n    } = props;\n    const {\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n    } = props;\n    const {\n        snapRenderInfo,\n    } = state;\n    const hasDirection = snapRenderInfo && (snapRenderInfo.direction?.[0] || snapRenderInfo.direction?.[1]);\n    const moveables = moveable.moveables;\n    const ignores = [false, false];\n\n    // snap group's all child to grid.\n    if (\n        snapGridAll\n        && moveables\n        && hasDirection\n        && (snapGridWidth || snapGridHeight)\n    ) {\n        if (state.snapThresholdInfo) {\n            return;\n        }\n        state.snapThresholdInfo = {\n            multiples: [1, 1],\n            offset: [0, 0],\n        };\n\n        const rect = moveable.getRect();\n        const children = rect.children;\n        const direction = snapRenderInfo.direction!;\n\n\n        if (children) {\n            const result = direction.map((dir, i) => {\n                const {\n                    snapSize,\n                    posName,\n                    sizeName,\n                    clientOffset,\n                } = i === 0 ? {\n                    snapSize: snapGridWidth,\n                    posName: \"left\",\n                    sizeName: \"width\",\n                    clientOffset: snapOffset.left - clientLeft,\n                } as const : {\n                    snapSize: snapGridHeight,\n                    posName: \"top\",\n                    sizeName: \"height\",\n                    clientOffset: snapOffset.top - clientTop,\n                } as const;\n\n                if (!snapSize) {\n                    return {\n                        dir,\n                        multiple: 1,\n                        snapSize,\n                        snapOffset: 0,\n                    };\n                }\n                const rectSize = rect[sizeName];\n                const rectPos = rect[posName];\n\n                // 사이즈보다 만약 작다면 어떻게 해야되죠?\n                const childSizes = flat(children.map(child => {\n                    return [\n                        (child[posName] - rectPos),\n                        (child[sizeName]),\n                        (rectSize - child[sizeName] - child[posName] + rectPos),\n                    ];\n                })).filter(v => v).sort((a, b) => {\n                    return a - b;\n                });\n\n                const firstChildSize = childSizes[0];\n                const childSnapSizes = childSizes.map(size => throttle(size / firstChildSize, 0.1) * snapSize);\n                let n = 1;\n\n                const rectRatio = throttle(rectSize / firstChildSize, 0.1);\n\n                for (n = 1; n <= 10; ++n) {\n                    if (childSnapSizes.every(childSize => {\n                        return childSize * n % 1 === 0;\n                    })) {\n                        break;\n                    }\n                }\n\n                // dir 1 (fixed -1)\n                // dir 0 (fixed 0)\n                // dir -1 (fixed 1)\n\n                const ratio = (-dir + 1) / 2;\n                const offsetPos = dot(\n                    rectPos - clientOffset,\n                    rectPos - clientOffset + rectSize,\n                    ratio, 1 - ratio,\n                );\n\n                return {\n                    multiple: rectRatio * n,\n                    dir,\n                    snapSize,\n                    snapOffset: Math.round(offsetPos / snapSize),\n                };\n            });\n\n            const multiples = result.map(r => r.multiple || 1);\n            state.snapThresholdInfo.multiples = multiples;\n            state.snapThresholdInfo.offset = result.map(r => r.snapOffset);\n\n            result.forEach((r, i) => {\n                if (r.snapSize) {\n                    ignores[i] = true;\n                }\n            });\n        }\n    } else {\n        state.snapThresholdInfo = null;\n    }\n}\n\n\nexport function getGridGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset: { left: number, top: number, right: number, bottom: number },\n    isDisplayGridGuidelines?: boolean,\n): SnapGuideline[] {\n    const props = moveable.props;\n    const state = moveable.state;\n    let {\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n    } = props;\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n    } = snapOffset;\n    let startOffset = [0, 0];\n\n    startGridGroupGuidelines(\n        moveable,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    );\n\n    const snapThresholdInfo = state.snapThresholdInfo;\n    const defaultSnapGridWidth = snapGridWidth;\n    const defaultSnapGridHeight = snapGridHeight;\n\n    if (snapThresholdInfo) {\n        snapGridWidth *= snapThresholdInfo.multiples[0] || 1;\n        snapGridHeight *= snapThresholdInfo.multiples[1] || 1;\n        startOffset = snapThresholdInfo.offset;\n    }\n\n    if (snapGridHeight) {\n        const pushGuideline = (pos: number) => {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [\n                    snapOffsetLeft,\n                    throttle(startOffset[1] * defaultSnapGridHeight + pos - clientTop + snapOffsetTop, 0.1),\n                ],\n                className: prefix(\"grid-guideline\"),\n                size: containerWidth!,\n                hide: !isDisplayGridGuidelines,\n                direction: \"\",\n                grid: true,\n            });\n        };\n        for (let pos = 0; pos <= containerHeight * 2; pos += snapGridHeight) {\n            pushGuideline(pos);\n        }\n        for (let pos = -snapGridHeight; pos >= -containerHeight; pos -= snapGridHeight) {\n            pushGuideline(pos);\n        }\n    }\n\n    if (snapGridWidth) {\n        const pushGuideline = (pos: number) => {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [\n                    throttle(startOffset[0] * defaultSnapGridWidth + pos - clientLeft + snapOffsetLeft, 0.1),\n                    snapOffsetTop,\n                ],\n                className: prefix(\"grid-guideline\"),\n                size: containerHeight!,\n                hide: !isDisplayGridGuidelines,\n                direction: \"\",\n                grid: true,\n            });\n        };\n        for (let pos = 0; pos <= containerWidth * 2; pos += snapGridWidth) {\n            pushGuideline(pos);\n        }\n        for (let pos = -snapGridWidth; pos >= -containerWidth; pos -= snapGridWidth) {\n            pushGuideline(pos);\n        }\n    }\n\n    return guidelines;\n}\n\nexport function checkBetweenRects(\n    rect1: SnapDirectionPoses,\n    rect2: SnapDirectionPoses,\n    type: \"horizontal\" | \"vertical\",\n    distance: number,\n) {\n    if (type === \"horizontal\") {\n        return abs(rect1.right! - rect2.left!) <= distance\n            || abs(rect1.left! - rect2.right!) <= distance\n            || rect1.left! <= rect2.right! && rect2.left! <= rect1.right!;\n    } else if (type === \"vertical\") {\n        return abs(rect1.bottom! - rect2.top!) <= distance\n            || abs(rect1.top! - rect2.bottom!) <= distance\n            || rect1.top! <= rect2.bottom! && rect2.top! <= rect1.bottom!;\n    }\n    return true;\n}\n\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return {\n                ...el,\n                element: getRefTarget(el.element, true)!,\n            };\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n            horizontalNames,\n            verticalNames,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach((pos, i) => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n                elementDirection: SNAP_SKIP_NAMES_MAP[verticalNames[i]] || verticalNames[i],\n                direction: \"\",\n            });\n        });\n        horizontal.forEach((pos, i) => {\n            nextGuidelines.push({\n                type: \"horizontal\",\n                element,\n                pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ],\n                size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n                elementDirection: SNAP_SKIP_NAMES_MAP[horizontalNames[i]] || horizontalNames[i],\n                direction: \"\",\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\n\nfunction getObjectGuidelines(\n    guidelines: Array<PosGuideline | number | string> | false,\n    containerSize: number,\n): NumericPosGuideline[] {\n    return guidelines ? guidelines.map(info => {\n        const posGuideline = isObject(info) ? info : { pos: info };\n        const pos = posGuideline.pos;\n\n        if (isNumber(pos)) {\n            return posGuideline as NumericPosGuideline;\n        } else {\n            return {\n                ...posGuideline,\n                pos: convertUnitSize(pos, containerSize),\n            };\n        }\n    }) : [];\n}\n\nexport function getDefaultGuidelines(\n    horizontalGuidelines: Array<PosGuideline | number | string> | false,\n    verticalGuidelines: Array<PosGuideline | number | string> | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    getObjectGuidelines(horizontalGuidelines, snapHeight).forEach(posInfo => {\n        guidelines.push({\n            type: \"horizontal\",\n            pos: [\n                snapOffsetLeft,\n                throttle(posInfo.pos - clientTop + snapOffsetTop, 0.1),\n            ],\n            size: snapWidth,\n            className: posInfo.className,\n            direction: \"\",\n        });\n    });\n    getObjectGuidelines(verticalGuidelines, snapWidth).forEach(posInfo => {\n        guidelines.push({\n            type: \"vertical\",\n            pos: [\n                throttle(posInfo.pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ],\n            size: snapHeight,\n            className: posInfo.className,\n            direction: \"\",\n        });\n    });\n    return guidelines;\n}\n\n\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const groupable = moveable.props.groupable;\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        // targetClientRect: {\n        //     top: clientTop,\n        //     left: clientLeft,\n        // },\n        rootMatrix,\n        is3d,\n        offsetDelta,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    // const poses = getAbsolutePosesByState(state);\n    // const {\n    //     minX: targetLeft,\n    //     minY: targetTop,\n    // } = getMinMaxs(poses);\n    // const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n    //     clientLeft - containerLeft,\n    //     clientTop - containerTop,\n    // ], n)).map(pos => roundSign(pos));\n\n    const offsetLeft = groupable ? 0 : offsetDelta[0];\n    const offsetTop = groupable ? 0 : offsetDelta[1];\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft - offsetLeft;\n        const top = rect.top - containerTop - offsetTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft,\n                right: elementRight,\n                top: elementTop,\n                bottom: elementBottom,\n                center: (elementLeft + elementRight) / 2,\n                middle: (elementTop + elementBottom) / 2,\n            },\n        };\n    });\n}\n\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n    SnapDirectionInfo,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n    getDirectionCondition,\n    abs,\n    watchValue,\n} from \"../utils\";\nimport {\n    find,\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLineInfos,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    getInitialBounds,\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\nimport { getTotalGuidelines } from \"./snappable/getTotalGuidelines\";\nimport {\n    NAME_snapRotationThreshold, NAME_snapRotationDegrees,\n    NAME_snapHorizontalThreshold, NAME_snapVerticalThreshold,\n} from \"./snappable/names\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function checkSnapInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n    const container = state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\n        return false;\n    }\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n\n            snapOffset.left = throttle(offset1[0], 0.00001);\n            snapOffset.top = throttle(offset1[1], 0.00001);\n            snapOffset.right = throttle(offset2[0], 0.00001);\n            snapOffset.bottom = throttle(offset2[1], 0.00001);\n        }\n    }\n\n    state.snapContainer = snapContainer;\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n    return true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPos: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / abs(value) : 0;\n}\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const { fixedDirection } = datas;\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            innerBoundLineInfos,\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\n\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (throttle(verticalOffset, FLOAT_POINT_NUM) || throttle(horizontalOffset, FLOAT_POINT_NUM)) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\n\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (!keepRatio && direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function absDegree(deg: number) {\n    if (deg < 0) {\n        deg = deg % 360 + 360;\n    }\n    deg %= 360;\n    return deg;\n}\n\nexport function bumpDegree(baseDeg: number, snapDeg: number) {\n    // baseDeg -80\n    // snapDeg 270\n    // return -90\n    snapDeg = absDegree(snapDeg);\n\n    const count = Math.floor(baseDeg / 360);\n\n\n    const deg1 = count * 360 + 360 - snapDeg;\n    const deg2 = count * 360 + snapDeg;\n\n    return abs(baseDeg - deg1) < abs(baseDeg - deg2) ? deg1 : deg2;\n}\n\nexport function getMinDegreeDistance(deg1: number, deg2: number) {\n    deg1 = absDegree(deg1);\n    deg2 = absDegree(deg2);\n\n    const deg3 = absDegree(deg1 - deg2);\n\n    return Math.min(deg3, 360 - deg3);\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    dist: number,\n    rotation: number,\n) {\n    const props = moveable.props;\n    const snapRotationThreshold = props[NAME_snapRotationThreshold] ?? 5;\n    const snapRotationDegrees = props[NAME_snapRotationDegrees];\n\n    if (hasGuidelines(moveable, \"rotatable\")) {\n        const { pos1, pos2, pos3, pos4, origin: origin2 } = rect;\n        const rad = (dist * Math.PI) / 180;\n        const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin2));\n        const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n        // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n        // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n        const result = [\n            ...checkRotateBounds(moveable, prevPoses, nextPoses, origin2, dist),\n            ...checkRotateInnerBounds(\n                moveable,\n                prevPoses,\n                nextPoses,\n                origin2,\n                dist\n            ),\n        ];\n        result.sort((a, b) => abs(a - dist) - abs(b - dist));\n        const isSnap = result.length > 0;\n\n        if (isSnap) {\n            return {\n                isSnap,\n                dist: isSnap ? result[0] : dist,\n            };\n        }\n    }\n    if (snapRotationDegrees?.length && snapRotationThreshold) {\n\n\n        const sorted = snapRotationDegrees.slice().sort((a, b) => {\n            return getMinDegreeDistance(a, rotation) - getMinDegreeDistance(b, rotation);\n        });\n        const firstDegree = sorted[0];\n\n        if (getMinDegreeDistance(firstDegree, rotation) <= snapRotationThreshold) {\n\n            return {\n                isSnap: true,\n                dist: dist + bumpDegree(rotation, firstDegree) - rotation,\n            };\n        }\n    }\n    return {\n        isSnap: false,\n        dist,\n    };\n\n}\n\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { fixedDirection, nextAllMatrix } = datas;\n    const { allMatrix, is3d } = moveable.state;\n\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                nextAllMatrix || allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\n                ),\n                startOffsetWidth,\n                startOffsetHeight,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        startOffsetWidth,\n        startOffsetHeight,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: Array<{ guideline: SnapGuideline, posInfo: SnapPosInfo }> = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (find(guidelines, info => info.guideline === guideline)) {\n                return;\n            }\n            guideline.direction = \"\";\n            guidelines.push({ guideline, posInfo });\n        });\n    });\n\n    return guidelines.map(({ guideline, posInfo }) => {\n        return {\n            ...guideline,\n            direction: posInfo.direction,\n        };\n    });\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n\n    const boundMap = getInitialBounds();\n\n\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            if (info.direction === \"start\") {\n                boundMap.left = true;\n            }\n            if (info.direction === \"end\") {\n                boundMap.right = true;\n            }\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            if (info.direction === \"start\") {\n                boundMap.top = true;\n            }\n            if (info.direction === \"end\") {\n                boundMap.bottom = true;\n            }\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        boundMap: innerBoundMap,\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    return {\n        boundMap,\n        innerBoundMap,\n    };\n}\n\nconst directionCondition = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n\n\n\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: [\n        \"snappable\",\n        \"snapContainer\",\n        \"snapDirections\",\n        \"elementSnapDirections\",\n        \"snapGap\",\n        \"snapGridWidth\",\n        \"snapGridHeight\",\n        \"isDisplaySnapDigit\",\n        \"isDisplayInnerSnapDigit\",\n        \"isDisplayGridGuidelines\",\n        \"snapDigit\",\n        \"snapThreshold\",\n        \"snapRenderThreshold\",\n        \"snapGridAll\",\n        NAME_snapRotationThreshold,\n        NAME_snapRotationDegrees,\n        NAME_snapHorizontalThreshold,\n        NAME_snapVerticalThreshold,\n        \"horizontalGuidelines\",\n        \"verticalGuidelines\",\n        \"elementGuidelines\",\n        \"bounds\",\n        \"innerBounds\",\n        \"snapDistFormat\",\n        \"maxSnapElementGuidelineDistance\",\n        \"maxSnapElementGapDistance\",\n    ] as const,\n    events: [\"snap\", \"bound\"] as const,\n    css: [\n        `:host {\n--bounds-color: #d66;\n}\n.guideline {\npointer-events: none;\nz-index: 2;\n}\n.guideline.bounds {\nbackground: #d66;\nbackground: var(--bounds-color);\n}\n.guideline-group {\nposition: absolute;\ntop: 0;\nleft: 0;\n}\n.guideline-group .size-value {\nposition: absolute;\ncolor: #f55;\nfont-size: 12px;\nfont-size: calc(12px * var(--zoom));\nfont-weight: bold;\n}\n.guideline-group.horizontal .size-value {\ntransform-origin: 50% 100%;\ntransform: translateX(-50%);\nleft: 50%;\nbottom: 5px;\nbottom: calc(2px + 3px * var(--zoom));\n}\n.guideline-group.vertical .size-value {\ntransform-origin: 0% 50%;\ntop: 50%;\ntransform: translateY(-50%);\nleft: 5px;\nleft: calc(2px + 3px * var(--zoom));\n}\n.guideline.gap {\nbackground: #f55;\n}\n.size-value.gap {\ncolor: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n        const {\n            snapRenderThreshold = 1,\n        } = moveable.props;\n\n        if (!snapRenderInfo || !snapRenderInfo.render || !hasGuidelines(moveable, \"\")) {\n            // reset store\n            watchValue(\n                moveable,\n                \"boundMap\",\n                getInitialBounds(),\n                v => JSON.stringify(v),\n            );\n            watchValue(\n                moveable,\n                \"innerBoundMap\",\n                getInitialBounds(),\n                v => JSON.stringify(v),\n            );\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapDirectionInfo;\n            horizontal: SnapDirectionInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction,\n                        snapRenderThreshold,\n                        snapRenderThreshold,\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold, snapRenderThreshold));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold, snapRenderThreshold));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        const {\n            boundMap,\n            innerBoundMap,\n        } = addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects).sort((a, b) => {\n            return a.gap! - b.gap!;\n        });\n\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n\n        const nextBoundMap = watchValue(\n            moveable,\n            \"boundMap\",\n            boundMap,\n            v => JSON.stringify(v),\n            getInitialBounds(),\n        );\n        const nextInnerBoundMap = watchValue(\n            moveable,\n            \"innerBoundMap\",\n            innerBoundMap,\n            v => JSON.stringify(v),\n            getInitialBounds(),\n        );\n\n        if (boundMap === nextBoundMap || innerBoundMap === nextInnerBoundMap) {\n            triggerEvent(\n                moveable,\n                \"onBound\",\n                {\n                    bounds: boundMap,\n                    innerBounds: innerBoundMap,\n                },\n                true\n            );\n        }\n\n\n\n        // verticalSnapPoses.\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        checkSnapInfo(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        if (!checkSnapInfo(moveable)) {\n            state.guidelines = getTotalGuidelines(moveable);\n        }\n        if (state.snapRenderInfo) {\n            state.snapRenderInfo.render = true;\n        }\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, ftrue, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import { PREFIX, IS_WEBKIT605, TINY_NUM } from \"./consts\";\nimport { prefixNames } from \"framework-utils\";\nimport {\n    isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    isFunction, convertUnitSize, between, getKeys, decamelize, isNumber,\n    getDocumentBody,\n    getDocumentElement,\n    getWindow,\n    isNode,\n    isWindow,\n    counter,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    createScaleMatrix,\n    plus,\n    convertMatrixtoCSS,\n    rotate,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n    ElementSizes, TransformObject,\n    MoveableRefTargetsResultType, MoveableRefTargetType, MoveableManagerInterface, CSSObject, PaddingBox,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\nimport { getBeforeRenderableDatas, getDragDist } from \"./gesto/GestoUtils\";\nimport { getGestoData } from \"./gesto/GestoData\";\nimport { GetStyle, getCachedStyle } from \"./store/Store\";\nimport { normalized } from \"./ables/Snappable\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function defaultSync(fn: () => void) {\n    fn();\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    return parseMat(transform);\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOriginArray(transformOrigin: string) {\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    return getTransformOriginArray(style.transformOrigin);\n}\nexport function getElementTransform(\n    target: HTMLElement | SVGElement,\n): string {\n    const getStyle = getCachedStyle(target);\n    const computedTransform = getStyle(\"transform\");\n\n    if (computedTransform && computedTransform !== \"none\") {\n        return computedTransform;\n    }\n    if (\"transform\" in target) {\n        const list = (target as any).transform as SVGAnimatedTransformList;\n        const baseVal = list.baseVal;\n\n        if (!baseVal) {\n            return \"\";\n        }\n        const length = baseVal.length;\n\n        if (!length) {\n            return \"\";\n        }\n\n        const matrixes: string[] = [];\n\n        for (let i = 0; i < length; ++i) {\n            const matrix = baseVal[i].matrix;\n\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\n        }\n        return matrixes.join(\" \");\n\n    }\n    return \"\";\n}\n\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n    checkZoom?: boolean,\n    getTargetStyle?: GetStyle,\n) {\n\n    const documentElement = getDocumentElement(el!) || getDocumentBody(el!);\n    let hasSlot = false;\n    let target: HTMLElement | SVGElement | null | undefined;\n    let parentSlotElement: HTMLElement | null | undefined;\n\n    if (!el || isParent) {\n        target = el;\n    } else {\n        const assignedSlotParentElement = el?.assignedSlot?.parentElement;\n        const parentElement = el.parentElement;\n\n        if (assignedSlotParentElement) {\n            hasSlot = true;\n            parentSlotElement = parentElement;\n            target = assignedSlotParentElement;\n        } else {\n            target = parentElement;\n        }\n    }\n\n    let isCustomElement = false;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n    let offsetZoom = 1;\n\n\n    const targetZoom = parseFloat(getTargetStyle?.(\"zoom\")) || 1;\n    const targetPosition = getTargetStyle?.(\"position\");\n\n\n\n    while (target && target !== documentElement) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const getStyle = getCachedStyle(target);\n        const tagName = target.tagName.toLowerCase();\n        const transform = getElementTransform(target as SVGElement);\n        const willChange = getStyle(\"willChange\");\n        const zoom = parseFloat(getStyle(\"zoom\")) || 1;\n\n        position = getStyle(\"position\");\n        if (checkZoom && zoom !== 1) {\n            offsetZoom = zoom;\n            break;\n        }\n        if (\n            // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\n            !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\"\n            || tagName === \"svg\"\n            || tagName === \"foreignobject\"\n            || position !== \"static\"\n            || (transform && transform !== \"none\")\n            || willChange === \"transform\"\n        ) {\n            break;\n        }\n        const slotParentNode = el?.assignedSlot?.parentNode;\n        const targetParentNode = target.parentNode;\n\n        if (slotParentNode) {\n            hasSlot = true;\n            parentSlotElement = targetParentNode as HTMLElement;\n        }\n        const parentNode = targetParentNode;\n\n        if (parentNode && parentNode.nodeType === 11) {\n            // Shadow Root\n            target = (parentNode as ShadowRoot).host as HTMLElement;\n            isCustomElement = true;\n            position = getCachedStyle(target)(\"position\");\n            break;\n        }\n        target = parentNode as HTMLElement | SVGElement;\n        position = \"relative\";\n    }\n    return {\n        offsetZoom,\n        hasSlot,\n        parentSlotElement,\n        isCustomElement,\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === documentElement,\n        offsetParent: target as HTMLElement || documentElement,\n    };\n}\n\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    target: HTMLElement | SVGElement,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n    const getStyle = getCachedStyle(el);\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && (tagName !== \"svg\" || (el as SVGElement).ownerSVGElement)) {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOriginArray(getStyle(\"transformOrigin\")).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        if (tagName === \"svg\") {\n            offsetLeft = 0;\n            offsetTop = 0;\n        } else {\n            [\n                offsetLeft, offsetTop, origin[0], origin[1],\n            ] = getSVGGraphicsOffset(\n                el as SVGGraphicsElement,\n                origin,\n                el === target && target.tagName.toLowerCase() === \"g\",\n            );\n        }\n    } else {\n        origin = getTransformOriginArray(getStyle(\"transformOrigin\")).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        // console.log(getStyle(\"transformOrigin\"), targetOrigin);\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n) {\n    const getStyle = getCachedStyle(el);\n    const getBodyStyle = getCachedStyle(getDocumentBody(el));\n    const bodyPosition = getBodyStyle(\"position\");\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(getBodyStyle(\"marginLeft\"), 10);\n    let marginTop = parseInt(getBodyStyle(\"marginTop\"), 10);\n\n    if (getStyle(\"position\") === \"absolute\") {\n        if (getStyle(\"top\") !== \"auto\" || getStyle(\"bottom\") !== \"auto\") {\n            marginTop = 0;\n        }\n        if (getStyle(\"left\") !== \"auto\" || getStyle(\"right\") !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\n\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\n    let fixedContainer = el.parentElement;\n    let hasTransform = false;\n    const body = getDocumentBody(el);\n\n    while (fixedContainer) {\n        const transform = getComputedStyle(fixedContainer).transform;\n\n\n        if (transform && transform !== \"none\") {\n            hasTransform = true;\n            break;\n        }\n        if (fixedContainer === body) {\n            break;\n        }\n        fixedContainer = fixedContainer.parentElement;\n    }\n\n    return {\n        fixedContainer: fixedContainer || body,\n        hasTransform,\n    };\n}\n\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n    isGTarget?: boolean,\n) {\n    const tagName = el.tagName.toLowerCase();\n\n    if (!el.getBBox || !isGTarget && tagName === \"g\") {\n        return [0, 0, 0, 0];\n    }\n    const getStyle = getCachedStyle(el);\n    const isFillBox = getStyle(\"transform-box\") === \"fill-box\";\n\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    let x = bbox.x;\n    let y = bbox.y;\n\n    // x, y가 0으로 나타나는 버그\n    if (tagName === \"foreignobject\" && (!x && !y)) {\n        x = parseFloat(el.getAttribute(\"x\")!) || 0;\n        y = parseFloat(el.getAttribute(\"y\")!) || 0;\n    }\n    const left = x - viewBox.x;\n    const top = y - viewBox.y;\n    const originX = isFillBox ? origin[0] : origin[0] - left;\n    const originY = isFillBox ? origin[1] : origin[1] - top;\n\n    // if (isFillBox) {\n    //     const bbox = (el as SVGGraphicsElement).getBBox();\n    //     const x = parseFloat(getStyle(\"x\")) || bbox.x;\n    //     const y = parseFloat(getStyle(\"y\")) || bbox.y;\n\n    //     const xScale = bbox.x / x;\n    //     const yScale = bbox.y / y;\n\n    //     console.log(x, y);\n\n    //     originX *= xScale;\n    //     originY *= yScale;\n    // }\n\n    return [left, top, originX, originY];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const {\n        offsetWidth: width,\n        offsetHeight: height,\n    } = getSize(target);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === getDocumentBody(container)) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (abs(distLeft) < 2 && abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\n\nexport function calculateMoveableClientPositions(\n    rootMatrix: number[],\n    poses: number[][],\n    rootClientRect: MoveableClientRect,\n) {\n    const is3d = rootMatrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const rootPoses = poses.map(pos => calculatePosition(rootMatrix, pos, n));\n    const { left, top } = rootClientRect;\n\n    return rootPoses.map(pos => {\n        return [pos[0] + left, pos[1] + top];\n    });\n\n}\n\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\n\nexport function getProps<Props>(props: Props, ableName: keyof Props): Props {\n    const self = props[ableName];\n\n    if (isObject(self)) {\n        return {\n            ...props,\n            ...self,\n        };\n    }\n    return props;\n}\n\nexport function getSize(\n    target?: SVGElement | HTMLElement | null,\n): ElementSizes {\n    const hasOffset = target && !isUndefined((target as any).offsetWidth);\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n    let clientWidth = 0;\n    let clientHeight = 0;\n    let cssWidth = 0;\n    let cssHeight = 0;\n    let contentWidth = 0;\n    let contentHeight = 0;\n\n    let minWidth = 0;\n    let minHeight = 0;\n    let minOffsetWidth = 0;\n    let minOffsetHeight = 0;\n\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n    let maxOffsetWidth = Infinity;\n    let maxOffsetHeight = Infinity;\n    let inlineCSSWidth = 0;\n    let inlineCSSHeight = 0;\n    let svg = false;\n\n    if (target) {\n        if (!hasOffset && (target as SVGElement).ownerSVGElement) {\n            // check svg elements\n            const bbox = (target as SVGGraphicsElement).getBBox();\n\n            svg = true;\n            offsetWidth = bbox.width;\n            offsetHeight = bbox.height;\n            cssWidth = offsetWidth;\n            cssHeight = offsetHeight;\n            contentWidth = offsetWidth;\n            contentHeight = offsetHeight;\n            clientWidth = offsetWidth;\n            clientHeight = offsetHeight;\n        } else {\n            // check html elements\n            const getStyle = getCachedStyle(target);\n            const targetStyle = target.style;\n            const boxSizing = getStyle(\"boxSizing\") === \"border-box\";\n            const borderLeft = parseFloat(getStyle(\"borderLeftWidth\")) || 0;\n            const borderRight = parseFloat(getStyle(\"borderRightWidth\")) || 0;\n            const borderTop = parseFloat(getStyle(\"borderTopWidth\")) || 0;\n            const borderBottom = parseFloat(getStyle(\"borderBottomWidth\")) || 0;\n            const paddingLeft = parseFloat(getStyle(\"paddingLeft\")) || 0;\n            const paddingRight = parseFloat(getStyle(\"paddingRight\")) || 0;\n            const paddingTop = parseFloat(getStyle(\"paddingTop\")) || 0;\n            const paddingBottom = parseFloat(getStyle(\"paddingBottom\")) || 0;\n\n            const horizontalPadding = paddingLeft + paddingRight;\n            const verticalPadding = paddingTop + paddingBottom;\n            const horizontalBorder = borderLeft + borderRight;\n            const verticalBorder = borderTop + borderBottom;\n            const horizontalOffset = horizontalPadding + horizontalBorder;\n            const verticalOffset = verticalPadding + verticalBorder;\n            const position = getStyle(\"position\");\n\n            let containerWidth = 0;\n            let containerHeight = 0;\n\n            // SVGSVGElement, HTMLElement\n            if (\"clientLeft\" in target) {\n                let parentElement: HTMLElement | null = null;\n\n                if (position === \"absolute\") {\n                    const offsetInfo = getOffsetInfo(target, getDocumentBody(target));\n                    parentElement = offsetInfo.offsetParent;\n\n                } else {\n                    parentElement = target.parentElement;\n                }\n                if (parentElement) {\n                    const getParentStyle = getCachedStyle(parentElement);\n\n                    containerWidth = parseFloat(getParentStyle(\"width\"));\n                    containerHeight = parseFloat(getParentStyle(\"height\"));\n                }\n            }\n            minWidth = Math.max(\n                horizontalPadding,\n                convertUnitSize(getStyle(\"minWidth\"), containerWidth) || 0,\n            );\n            minHeight = Math.max(\n                verticalPadding,\n                convertUnitSize(getStyle(\"minHeight\"), containerHeight) || 0,\n            );\n            maxWidth = convertUnitSize(getStyle(\"maxWidth\"), containerWidth);\n            maxHeight = convertUnitSize(getStyle(\"maxHeight\"), containerHeight);\n\n            if (isNaN(maxWidth)) {\n                maxWidth = Infinity;\n            }\n            if (isNaN(maxHeight)) {\n                maxHeight = Infinity;\n            }\n            inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n            inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n            cssWidth = parseFloat(getStyle(\"width\")) || 0;\n            cssHeight = parseFloat(getStyle(\"height\")) || 0;\n\n\n            contentWidth = abs(cssWidth - inlineCSSWidth) < 1\n                ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth)\n                : cssWidth;\n            contentHeight = abs(cssHeight - inlineCSSHeight) < 1\n                ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight)\n                : cssHeight;\n\n            offsetWidth = contentWidth;\n            offsetHeight = contentHeight;\n            clientWidth = contentWidth;\n            clientHeight = contentHeight;\n\n            if (boxSizing) {\n                maxOffsetWidth = maxWidth;\n                maxOffsetHeight = maxHeight;\n                minOffsetWidth = minWidth;\n                minOffsetHeight = minHeight;\n                contentWidth = offsetWidth - horizontalOffset;\n                contentHeight = offsetHeight - verticalOffset;\n            } else {\n                maxOffsetWidth = maxWidth + horizontalOffset;\n                maxOffsetHeight = maxHeight + verticalOffset;\n                minOffsetWidth = minWidth + horizontalOffset;\n                minOffsetHeight = minHeight + verticalOffset;\n                offsetWidth = contentWidth + horizontalOffset;\n                offsetHeight = contentHeight + verticalOffset;\n            }\n            clientWidth = contentWidth + horizontalPadding;\n            clientHeight = contentHeight + verticalPadding;\n        }\n    }\n\n    return {\n        svg,\n        offsetWidth,\n        offsetHeight,\n        clientWidth,\n        clientHeight,\n        contentWidth,\n        contentHeight,\n        inlineCSSWidth,\n        inlineCSSHeight,\n        cssWidth,\n        cssHeight,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        minOffsetWidth,\n        minOffsetHeight,\n        maxOffsetWidth,\n        maxOffsetHeight,\n    };\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, top: 0,\n        width: 0, height: 0,\n        right: 0,\n        bottom: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\n\nexport function getExtendsRect(\n    el: HTMLElement | SVGElement,\n    rect: MoveableClientRect,\n): MoveableClientRect {\n    const isRoot = el === getDocumentBody(el) || el === getDocumentElement(el);\n\n\n    const extendsRect = {\n        clientLeft: el.clientLeft,\n        clientTop: el.clientTop,\n        clientWidth: el.clientWidth,\n        clientHeight: el.clientHeight,\n        scrollWidth: el.scrollWidth,\n        scrollHeight: el.scrollHeight,\n        overflow: false,\n    };\n\n    if (isRoot) {\n        extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\n        extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\n    }\n\n    extendsRect.overflow = getCachedStyle(el)(\"overflow\") !== \"visible\";\n\n    return {\n        ...rect,\n        ...extendsRect,\n    };\n}\n\nexport function getClientRectByPosition(\n    position: { left: number, right: number, top: number, bottom: number },\n    base: MoveableClientRect,\n    el?: HTMLElement | SVGElement, isExtends?: boolean,\n) {\n    const {\n        left,\n        right,\n        top,\n        bottom,\n    } = position;\n    const baseTop = base.top;\n    const baseLeft = base.left;\n\n    const rect: MoveableClientRect = {\n        left: baseLeft + left,\n        top: baseTop + top,\n        right: baseLeft + right,\n        bottom: baseTop + bottom,\n        width: right - left,\n        height: bottom - top,\n    };\n\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean): MoveableClientRect {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n    // let isRoot = false;\n\n    if (el) {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        top,\n        width,\n        height,\n        right: left + width,\n        bottom: top + height,\n    };\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\n\n\nexport function getTotalOrigin(moveable: MoveableManagerInterface<any>) {\n    const {\n        groupable,\n        svgOrigin,\n    } = moveable.props;\n    const {\n        offsetWidth,\n        offsetHeight,\n        svg,\n        transformOrigin,\n    } = moveable.getState();\n\n    if (!groupable && svg && svgOrigin) {\n        return convertTransformOriginArray(svgOrigin, offsetWidth, offsetHeight);\n    }\n\n    return transformOrigin;\n}\n\n\nexport function getTotalDirection(\n    parentDirection: number[],\n    isPinch: boolean,\n    inputEvent: any,\n    datas: any,\n) {\n    let direction: number[] | undefined;\n\n    if (parentDirection) {\n        direction = parentDirection;\n    } else if (isPinch) {\n        direction = [0, 0];\n    } else {\n        const target = inputEvent.target;\n\n        direction = getDirection(target, datas);\n    }\n    return direction;\n}\nexport function getDirection(target: SVGElement | HTMLElement, datas: any) {\n    if (!target) {\n        return;\n    }\n    const deg = target.getAttribute(\"data-rotation\") || \"\";\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    datas.deg = deg;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\n\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\n\nexport function unsetAbles(self: MoveableManagerInterface, isControl: boolean) {\n    self[isControl ? \"controlAbles\" : \"targetAbles\"].forEach(able => {\n        able.unset && able.unset(self);\n    });\n}\nexport function unsetGesto(self: MoveableManagerInterface, isControl: boolean) {\n    const gestoName = isControl ? \"controlGesto\" : \"targetGesto\";\n    const gesto = self[gestoName];\n\n    if (gesto?.isIdle() === false) {\n        unsetAbles(self, isControl);\n    }\n    gesto?.unset();\n    self[gestoName] = null as any;\n}\n\nexport function fillCSSObject(style: Record<string, any>, resolvedEvent?: any): CSSObject {\n    if (resolvedEvent) {\n        const originalDatas = getBeforeRenderableDatas(resolvedEvent);\n\n        originalDatas.nextStyle = {\n            ...originalDatas.nextStyle,\n            ...style,\n        };\n    }\n    return {\n        style,\n        cssText: getKeys(style).map(name => `${decamelize(name, \"-\")}: ${style[name]};`).join(\"\"),\n    };\n}\n\nexport function fillAfterTransform(\n    prevEvent: { style: Record<string, string>, transform: string },\n    nextEvent: { style: Record<string, string>, transform: string, afterTransform?: string },\n    resolvedEvent?: any\n): TransformObject {\n    const afterTransform = nextEvent.afterTransform || nextEvent.transform;\n\n    return {\n        ...fillCSSObject({\n            ...prevEvent.style,\n            ...nextEvent.style,\n            transform: afterTransform,\n        }, resolvedEvent),\n        afterTransform,\n        transform: prevEvent.transform,\n    };\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n    isBeforeEvent?: boolean,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n        isRequest: e.isRequest,\n        isRequestChild: e.isRequestChild,\n        isFirstDrag: !!e.isFirstDrag,\n        isTrusted: e.isTrusted !== false,\n        stopAble() {\n            datas.isEventStart = false;\n        },\n        stopDrag() {\n            e.stop?.();\n        },\n    } as any;\n\n    if (!datas.isStartEvent) {\n        datas.isStartEvent = true;\n    } else if (!isBeforeEvent) {\n        datas.lastEvent = nextParams;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n    } as any;\n}\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\n): any {\n    moveable._emitter.on(name, callback);\n}\n\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n    isRequest?: boolean,\n): any {\n    return moveable.triggerEvent(\n        name,\n        params,\n        isManager,\n        isRequest,\n    );\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return getWindow(el).getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => abs(b) - abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => abs(a) - abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[],\n    pos: number[],\n    added: number[],\n    n: number,\n) {\n    if (!added[0] && !added[1]) {\n        return pos;\n    }\n\n    const xAdded = calculatePosition(matrix, [normalized(added[0] || 1), 0], n);\n    const yAdded = calculatePosition(matrix, [0, normalized(added[1] || 1)], n);\n    const nextAdded = calculatePosition(matrix, [\n        added[0] / getDistSize(xAdded),\n        added[1] / getDistSize(yAdded),\n    ], n);\n\n    return plus(pos, nextAdded);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function getTinyDist(v: number) {\n    return abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function viewDraggingPrefix(ableName: string) {\n    return prefix(`${ableName}-view-dragging`);\n}\nexport function getDirectionViewClassName(ableName: string) {\n    return (moveable: MoveableManagerInterface) => {\n        if (!moveable.isDragging(ableName)) {\n            return \"\";\n        }\n        const data = getGestoData(moveable, ableName);\n        const deg = data.deg;\n        if (!deg) {\n            return \"\";\n        }\n        return prefix(`view-control-rotation${deg}`);\n    };\n}\nexport function getDirectionCondition(ableName: string, checkAbles: string[] = [ableName]) {\n    return (moveable: any, e: any) => {\n        if (e.isRequest) {\n            if (checkAbles.some(name => e.requestAble === name)) {\n                return e.parentDirection!;\n            } else {\n                return false;\n            }\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n    };\n}\n\nexport function convertTransformInfo(transforms: string[], state: MoveableManagerState, index: number) {\n    const matrixInfos = parse(transforms, {\n        \"x%\": v => v / 100 * state.offsetWidth,\n        \"y%\": v => v / 100 * state.offsetHeight,\n    });\n\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = matrixInfos.slice(0, index < 0 ? undefined : index);\n    const beforeFunctions2 = matrixInfos.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunction = matrixInfos[index] ?? parse([\"\"])[0];\n    const afterFunctions = index < 0 ? [] : matrixInfos.slice(index);\n    const afterFunctions2 = index < 0 ? [] : matrixInfos.slice(index + 1);\n    const targetFunctions = targetFunction ? [targetFunction] : [];\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    if (isNode(arr)) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T> | Window, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T> | Window, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T> | Window,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (isNode(target)) {\n        return target;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (isWindow(target)) {\n        return target;\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector?: boolean): MoveableRefTargetsResultType;\nexport function getRefTargets(targets: MoveableRefTargetType, isSelector?: boolean): any[] {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        if (isArray(target)) {\n            prev.push(getRefTargets(target, isSelector));\n        } else {\n            prev.push(getRefTarget(target, isSelector));\n        }\n        return prev;\n    }, [] as MoveableRefTargetsResultType);\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n\nexport function getSizeDistByDist(\n    startSize: number[],\n    dist: number[],\n    ratio: number,\n    direction: number[],\n    keepRatio?: boolean,\n) {\n    const [startOffsetWidth, startOffsetHeight] = startSize;\n    let distWidth = 0;\n    let distHeight = 0;\n\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], direction);\n        const size = getDistSize(dist);\n        const signSize = Math.cos(rad - standardRad) * size;\n\n        if (!direction[0]) {\n            // top, bottom\n            distHeight = signSize;\n            distWidth = distHeight * ratio;\n        } else if (!direction[1]) {\n            // left, right\n            distWidth = signSize;\n            distHeight = distWidth / ratio;\n        } else {\n            // two-way\n            const startWidthSize = direction[0] * startOffsetWidth;\n            const startHeightSize = direction[1] * startOffsetHeight;\n\n            let secondRad = Math.atan2(startWidthSize + dist[0], startHeightSize + dist[1]);\n            let firstRad = Math.atan2(startWidthSize, startHeightSize);\n\n            if (secondRad < 0) {\n                secondRad += Math.PI * 2;\n            }\n            if (firstRad < 0) {\n                firstRad += Math.PI * 2;\n            }\n            let rad = 0;\n\n            if (abs(secondRad - firstRad) < Math.PI / 2 || abs(secondRad - firstRad) > Math.PI / 2 * 3) {\n                rad = secondRad - firstRad;\n            } else {\n                firstRad += Math.PI;\n                rad = secondRad - firstRad;\n            }\n            if (rad > Math.PI * 2) {\n                rad -= Math.PI * 2;\n            } else if (rad > Math.PI) {\n                rad = 2 * Math.PI - rad;\n            } else if (rad < -Math.PI) {\n                rad = -2 * Math.PI - rad;\n            }\n            //       180\n            // -1, -1,  // 1, -1\n            // 270            90\n            // -1, 1    // 1, 1\n            //       0\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]]) * Math.cos(rad);\n\n            distWidth = distSize * Math.sin(firstRad) - startWidthSize;\n            distHeight = distSize * Math.cos(firstRad) - startHeightSize;\n\n            if (direction[0] < 0) {\n                distWidth *= -1;\n            }\n            if (direction[1] < 0) {\n                distHeight *= -1;\n            }\n        }\n    } else {\n        distWidth = direction[0] * dist[0];\n        distHeight = direction[1] * dist[1];\n    }\n\n    return [distWidth, distHeight];\n}\nexport function getOffsetSizeDist(\n    sizeDirection: number[],\n    keepRatio: boolean,\n    datas: any,\n    e: any,\n) {\n    const {\n        ratio,\n        startOffsetWidth,\n        startOffsetHeight,\n    } = datas;\n    let distWidth = 0;\n    let distHeight = 0;\n    const {\n        distX,\n        distY,\n        pinchScale,\n        parentDistance,\n        parentDist,\n        parentScale,\n    } = e;\n    const startFixedDirection = datas.fixedDirection;\n    const directionsDists = [0, 1].map(index => {\n        return abs(sizeDirection[index] - startFixedDirection[index]);\n    });\n    const directionRatios = [0, 1].map(index => {\n        let dist = directionsDists[index];\n\n        if (dist !== 0) {\n            dist = 2 / dist;\n        }\n        return dist;\n    });\n    if (parentDist) {\n        distWidth = parentDist[0];\n        distHeight = parentDist[1];\n\n        if (keepRatio) {\n            if (!distWidth) {\n                distWidth = distHeight * ratio;\n            } else if (!distHeight) {\n                distHeight = distWidth / ratio;\n            }\n        }\n    } else if (isNumber(pinchScale)) {\n        distWidth = (pinchScale - 1) * startOffsetWidth;\n        distHeight = (pinchScale - 1) * startOffsetHeight;\n    } else if (parentScale) {\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\n    } else if (parentDistance) {\n        const scaleX = startOffsetWidth * directionsDists[0];\n        const scaleY = startOffsetHeight * directionsDists[1];\n        const ratioDistance = getDistSize([scaleX, scaleY]);\n\n        distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n        distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n    } else {\n        let dist = getDragDist({ datas, distX, distY });\n\n        dist = directionRatios.map((ratio, i) => {\n            return dist[i] * ratio;\n        });\n\n        [distWidth, distHeight] = getSizeDistByDist(\n            [startOffsetWidth, startOffsetHeight],\n            dist,\n            ratio,\n            sizeDirection,\n            keepRatio,\n        );\n    }\n    return {\n        // direction,\n        // sizeDirection,\n        distWidth,\n        distHeight,\n    };\n}\n\nexport function convertTransformUnit(\n    origin: string,\n    xy?: boolean,\n): { x?: string; y?: string; value?: string; } {\n    if (xy) {\n        if (origin === \"left\") {\n            return { x: \"0%\", y: \"50%\" };\n        } else if (origin === \"top\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"center\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"right\") {\n            return { x: \"100%\", y: \"50%\" };\n        } else if (origin === \"bottom\") {\n            return { x: \"50%\", y: \"100%\" };\n        }\n        const [left, right] = origin.split(\" \");\n        const leftOrigin = convertTransformUnit(left || \"\");\n        const rightOrigin = convertTransformUnit(right || \"\");\n        const originObject = {\n            ...leftOrigin,\n            ...rightOrigin,\n        };\n\n        const nextOriginObject = {\n            x: \"50%\",\n            y: \"50%\",\n        };\n        if (originObject.x) {\n            nextOriginObject.x = originObject.x;\n        }\n        if (originObject.y) {\n            nextOriginObject.y = originObject.y;\n        }\n        if (originObject.value) {\n            if (originObject.x && !originObject.y) {\n                nextOriginObject.y = originObject.value;\n            }\n            if (!originObject.x && originObject.y) {\n                nextOriginObject.x = originObject.value;\n            }\n        }\n        return nextOriginObject;\n    }\n    if (origin === \"left\") {\n        return { x: \"0%\" };\n    }\n    if (origin === \"right\") {\n        return { x: \"100%\" };\n    }\n    if (origin === \"top\") {\n        return { y: \"0%\" };\n    }\n    if (origin === \"bottom\") {\n        return { y: \"100%\" };\n    }\n    if (!origin) {\n        return {};\n    }\n    if (origin === \"center\") {\n        return { value: \"50%\" };\n    }\n    return { value: origin };\n}\nexport function convertTransformOriginArray(transformOrigin: string, width: number, height: number) {\n    const { x, y } = convertTransformUnit(transformOrigin, true);\n\n    return [\n        convertUnitSize(x!, width) || 0,\n        convertUnitSize(y!, height) || 0,\n    ];\n}\n\nexport function rotatePosesInfo(poses: number[][], origin: number[], rad: number) {\n    const prevPoses = poses.map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    return {\n        prev: prevPoses,\n        next: nextPoses,\n        result: nextPoses.map(pos => plus(pos, origin)),\n    };\n}\n\n\n\nexport function isDeepArrayEquals(arr1: any[], arr2: any[]): boolean {\n    return arr1.length === arr2.length && arr1.every((value1, i) => {\n        const value2 = arr2[i];\n        const isArray1 = isArray(value1);\n        const isArray2 = isArray(value2);\n        if (isArray1 && isArray2) {\n            return isDeepArrayEquals(value1, value2);\n        } else if (!isArray1 && !isArray2) {\n            return value1 === value2;\n        }\n        return false;\n    });\n}\n\n\nexport function watchValue<T>(\n    moveable: any,\n    property: string,\n    nextValue: T,\n    valueKey: (value: T) => string | number,\n    defaultValue?: T,\n): T {\n    const store = (moveable as any)._store;\n    let prevValue = store[property];\n\n    if (!(property in store)) {\n        if (defaultValue != null) {\n            store[property] = defaultValue;\n            prevValue = defaultValue;\n        } else {\n            store[property] = nextValue;\n            return nextValue;\n        }\n    }\n    if (prevValue === nextValue || valueKey(prevValue) === valueKey(nextValue)) {\n        return prevValue;\n    }\n\n    store[property] = nextValue;\n    return nextValue;\n}\n\n\nexport function sign(value: number) {\n    return value >= 0 ? 1 : -1;\n}\n\n\nexport function abs(value: number) {\n    return Math.abs(value);\n}\n\n\nexport function countEach<T>(count: number, callback: (index: number) => T): T[] {\n    return counter(count).map(index => callback(index));\n}\n\n\nexport function getPaddingBox(padding: PaddingBox | number) {\n    if (isNumber(padding)) {\n        return {\n            top: padding,\n            left: padding,\n            right: padding,\n            bottom: padding,\n        };\n    }\n\n    return {\n        left: padding.left || 0,\n        top: padding.top || 0,\n        right: padding.right || 0,\n        bottom: padding.bottom || 0,\n    };\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    props: [\n        \"pinchable\",\n    ] as const,\n    events: [\n        \"pinchStart\",\n        \"pinch\",\n        \"pinchEnd\",\n        \"pinchGroupStart\",\n        \"pinchGroup\",\n        \"pinchGroupEnd\",\n    ] as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                resolveMatrix: true,\n                pinchScale: pinchScale,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent, multiply2,\n    fillParams, fillEndParams, getAbsolutePosesByState,\n    catchEvent, getOffsetSizeDist, getDirectionCondition,\n    getDirectionViewClassName, getTotalDirection, sign, countEach, abs,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    getTranslateFixedPosition,\n} from \"../gesto/GestoUtils\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, OnScaleGroup, OnScaleGroupEnd,\n    OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n    OnBeforeScaleGroup,\n    OnBeforeScale,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    startChildDist,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getDist,\n    throttle,\n    calculateBoundSize,\n} from \"@daybrush/utils\";\nimport { getFixedDirectionInfo } from \"../utils/getFixedDirection\";\n\nconst directionCondition = getDirectionCondition(\"scalable\");\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: [\n        \"scalable\",\n        \"throttleScale\",\n        \"renderDirections\",\n        \"keepRatio\",\n        \"edge\",\n        \"displayAroundControls\",\n    ] as const,\n    events: [\n        \"scaleStart\",\n        \"beforeScale\",\n        \"scale\",\n        \"scaleEnd\",\n        \"scaleGroupStart\",\n        \"beforeScaleGroup\",\n        \"scaleGroup\",\n        \"scaleGroupEnd\",\n    ] as const,\n    render: getRenderDirections(\"scalable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"scalable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.startValue = [1, 1];\n\n        // const scaleWidth = getDist(pos1, pos2);\n        // const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        // datas.scaleWidth = scaleWidth;\n        // datas.scaleHeight = scaleHeight;\n        // datas.scaleXRatio = scaleWidth / width;\n        // datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(moveable, e, \"scale\");\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n        function setFixedDirection(fixedDirection: number[]) {\n            const result = getFixedDirectionInfo(datas.startPositions, fixedDirection);\n\n            datas.fixedDirection = result.fixedDirection;\n            datas.fixedPosition = result.fixedPosition;\n            datas.fixedOffset = result.fixedOffset;\n        }\n\n        datas.setFixedDirection = setFixedDirection;\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const setMinScaleSize = (min: number[]) => {\n            datas.minScaleSize = min;\n        };\n        const setMaxScaleSize = (max: number[]) => {\n            datas.maxScaleSize = max;\n        };\n        // const setMinScale = (min: number[]) => {\n        // };\n        // const setMaxScale = (max: number[]) => {\n        // };\n\n        setMinScaleSize([-Infinity, -Infinity]);\n        setMaxScaleSize([Infinity, Infinity]);\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            setMinScaleSize,\n            setMaxScaleSize,\n            ...fillTransformStartEvent(moveable, e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(moveable, e, \"scale\");\n        const {\n            datas,\n            parentKeepRatio,\n            parentFlag,\n            isPinch,\n            dragClient,\n            isRequest,\n            useSnap,\n            resolveMatrix,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            startOffsetWidth,\n            startOffsetHeight,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const props = moveable.props;\n        const {\n            throttleScale,\n            parentMoveable,\n        } = props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n        const state = moveable.state;\n\n        const tempScaleValue = [\n            startValue[0],\n            startValue[1],\n        ];\n\n        function getNextScale() {\n            const {\n                distWidth,\n                distHeight,\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n\n            const distX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\n            const distY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\n\n            if (!startValue[0]) {\n                tempScaleValue[0] = distWidth / startOffsetWidth;\n            }\n            if (!startValue[1]) {\n                tempScaleValue[1] = distHeight / startOffsetHeight;\n            }\n            let scaleX = (sizeDirection[0] || keepRatio ? distX : 1) * tempScaleValue[0];\n            let scaleY = (sizeDirection[1] || keepRatio ? distY : 1) * tempScaleValue[1];\n\n            if (scaleX === 0) {\n                scaleX = sign(prevDist[0]) * MIN_SCALE;\n            }\n            if (scaleY === 0) {\n                scaleY = sign(prevDist[1]) * MIN_SCALE;\n            }\n            return [scaleX, scaleY];\n        }\n\n\n        let scale = getNextScale();\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\n            scale,\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                scale = getNextScale();\n                return scale;\n            },\n            startFixedDirection: datas.startFixedDirection,\n            setScale(nextScale: number[]) {\n                scale = nextScale;\n            },\n        }, true));\n\n        let dist = [\n            scale[0] / tempScaleValue[0],\n            scale[1] / tempScaleValue[1],\n        ];\n        let fixedPosition = dragClient;\n        let snapDist = [0, 0];\n\n        const distSign = sign(dist[0] * dist[1]);\n        const isSelfPinch = !dragClient && !parentFlag && isPinch;\n\n        if (isSelfPinch || resolveMatrix) {\n            fixedPosition = getTranslateFixedPosition(\n                moveable,\n                datas.targetAllTransform,\n                [0, 0],\n                [0, 0],\n                datas,\n            );\n        } else if (!dragClient) {\n            fixedPosition = datas.fixedPosition;\n        }\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                !useSnap && isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n\n                // throttle scale value (not absolute scale size)\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * tempScaleValue[0], throttleScale!) / tempScaleValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * tempScaleValue[1], throttleScale!) / tempScaleValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = startOffsetWidth * dist[0] * tempScaleValue[0] / ratio;\n\n                dist[1] = sign(distSign * dist[0]) * abs(snapHeight / startOffsetHeight / tempScaleValue[1]);\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = startOffsetHeight * dist[1] * tempScaleValue[1] * ratio;\n\n                dist[0] = sign(distSign * dist[1]) * abs(snapWidth / startOffsetWidth / tempScaleValue[0]);\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * tempScaleValue[0], throttleScale!) / tempScaleValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * tempScaleValue[1], throttleScale!) / tempScaleValue[1];\n            }\n        }\n\n        if (dist[0] === 0) {\n            dist[0] = sign(prevDist[0]) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = sign(prevDist[1]) * MIN_SCALE;\n        }\n        scale = multiply2(dist, [tempScaleValue[0], tempScaleValue[1]]);\n\n\n        const startOffsetSize = [\n            startOffsetWidth,\n            startOffsetHeight,\n        ];\n        let scaleSize = [\n            startOffsetWidth * scale[0],\n            startOffsetHeight * scale[1],\n        ];\n\n        scaleSize = calculateBoundSize(\n            scaleSize,\n            datas.minScaleSize,\n            datas.maxScaleSize,\n            keepRatio ? ratio : false,\n        );\n\n        // if (keepRatio && (isGroup || keepRatioFinally)) {\n        //     if (isWidth) {\n        //         boundingHeight = boundingWidth / ratio;\n        //     } else {\n        //         boundingWidth = boundingHeight * ratio;\n        //     }\n        // }\n        scale = countEach(2, i => {\n            return startOffsetSize[i] ? scaleSize[i] / startOffsetSize[i] : scaleSize[i];\n        });\n        dist = countEach(2, i => {\n            return scale[i] / tempScaleValue[i];\n        });\n\n        const delta = countEach(2, i => prevDist[i] ? dist[i] / prevDist[i] : dist[i]);\n\n\n        const distText = `scale(${dist.join(\", \")})`;\n        const scaleText = `scale(${scale.join(\", \")})`;\n        const nextTransform = convertTransformFormat(\n            datas, scaleText, distText);\n        const isZeroScale = !startValue[0] || !startValue[1];\n\n        const inverseDist = getScaleDist(\n            moveable,\n            isZeroScale ? scaleText : distText,\n            datas.fixedDirection,\n            fixedPosition,\n            datas.fixedOffset,\n            datas,\n            isZeroScale,\n        );\n        const inverseDelta = isSelfPinch ? inverseDist : minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n            && !isSelfPinch\n        ) {\n            return false;\n        }\n\n\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: startOffsetWidth,\n            offsetHeight: startOffsetHeight,\n            direction,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        const scaleEndParam = fillEndParams<OnScaleEnd>(moveable, e, {});\n        triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n        return scaleEndParam;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return startChildDist(moveable, child, datas, ev);\n            },\n        );\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                startChildDist(moveable, ev.moveable, datas, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n        const { dist } = params;\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            dist[0] * moveableScale[0],\n            dist[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n\n\n        const fixedPosition = datas.fixedPosition;\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: dist,\n                    parentKeepRatio: keepRatio,\n                    // recalculate child fixed position for parent group's dragging.\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        let useSnap = false;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                useSnap = e.useSnap;\n\n                return {\n                    datas,\n                    parentDirection: e.direction || [1, 1],\n                    useSnap,\n                };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return {\n                    datas,\n                    parentDist: [distWidth, distHeight],\n                    parentKeepRatio: e.keepRatio,\n                    useSnap,\n                };\n            },\n            requestEnd() {\n                return { datas, isDrag: true, useSnap };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams, getDirectionViewClassName, fillCSSObject,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: [\n        \"warpable\",\n        \"renderDirections\",\n        \"edge\",\n        \"displayAroundControls\",\n    ] as const,\n    events: [\n        \"warpStart\",\n        \"warp\",\n        \"warpEnd\",\n    ] as const,\n    viewClassName: getDirectionViewClassName(\"warpable\"),\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, \"warpable\", React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget, datas);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(moveable, e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(moveable, e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(moveable, e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\nexport const VIEW_DRAGGING = prefix(\"view-dragging\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n\n    if (!el) {\n        return;\n    }\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: [\n        \"dragArea\",\n        \"passDragArea\",\n    ] as const,\n    events: [\n        \"click\",\n        \"clickGroup\",\n    ] as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.getState();\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform, calculatePosition, convertTransformOriginArray } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\nimport { minus } from \"@scena/matrix\";\n\nexport default makeAble(\"origin\", {\n    props: [\"origin\", \"svgOrigin\"] as const,\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom, svgOrigin, groupable } = moveable.props;\n        const {\n            beforeOrigin, rotation, svg, allMatrix, is3d,\n            left, top, offsetWidth, offsetHeight,\n        } = moveable.getState();\n\n        let originStyle!: Record<string, any>;\n\n        if (!groupable && svg && svgOrigin) {\n            const [originX, originY] = convertTransformOriginArray(svgOrigin, offsetWidth, offsetHeight);\n            const n = is3d ? 4 : 3;\n            const result = calculatePosition(\n                allMatrix,\n                [originX, originY],\n                n,\n            );\n            originStyle = getControlTransform(rotation, zoom!, minus(result, [left, top]));\n        } else {\n            originStyle = getControlTransform(rotation, zoom!, beforeOrigin);\n        }\n        return [\n            <div className={prefix(\"control\", \"origin\")} style={originStyle} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport {\n    ScrollableProps, OnScroll, MoveableManagerInterface,\n    MoveableGroupInterface, MoveableRefType,\n} from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: [\n        \"scrollable\",\n        \"scrollContainer\",\n        \"scrollThreshold\",\n        \"scrollThrottleTime\",\n        \"getScrollPosition\",\n        \"scrollOptions\",\n    ] as const,\n    events: [\n        \"scroll\",\n        \"scrollGroup\",\n    ] as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps, Record<string, any>>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n            scrollOptions,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n        moveable.state.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\n        }).on(\"scrollDrag\", ({ next }) => {\n            next(moveable[gestoName].getCurrentEvent());\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n            ...scrollOptions,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const dragScroll = e.datas.dragScroll as DragScroll;\n\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer() as MoveableRefType<HTMLElement>,\n            scrollThreshold = 0,\n            scrollThrottleTime = 0,\n            getScrollPosition = getDefaultScrollPosition,\n            scrollOptions,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer!,\n            threshold: scrollThreshold,\n            throttleTime: scrollThrottleTime,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n            ...scrollOptions,\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupControl(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    unset(moveable: MoveableManagerInterface<ScrollableProps, Record<string, any>>) {\n        const state = moveable.state;\n\n        state.dragScroll?.dragEnd();\n        state.dragScroll = null;\n    },\n};\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: [\n        \"target\",\n        \"dragTargetSelf\",\n        \"dragTarget\",\n        \"dragContainer\",\n        \"container\",\n        \"warpSelf\",\n        \"rootContainer\",\n        \"useResizeObserver\",\n        \"useMutationObserver\",\n        \"zoom\",\n        \"dragFocusedInput\",\n        \"transformOrigin\",\n        \"ables\",\n        \"className\",\n        \"pinchThreshold\",\n        \"pinchOutside\",\n        \"triggerAblesSimultaneously\",\n        \"checkInput\",\n        \"cspNonce\",\n        \"translateZ\",\n        \"hideDefaultLines\",\n        \"props\",\n        \"flushSync\",\n        \"stopPropagation\",\n        \"preventClickEventOnDrag\",\n        \"preventClickDefault\",\n        \"viewContainer\",\n        \"persistData\",\n        \"useAccuratePosition\",\n        \"firstRenderState\",\n        \"linePadding\",\n        \"controlPadding\",\n        \"preventDefault\",\n        \"preventRightClick\",\n        \"preventWheelClick\",\n        \"requestStyles\",\n    ] as const,\n    events: [\n        \"changeTargets\",\n    ] as const,\n};\n","import { prefix, makeMatrixCSS, getPaddingBox } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    props: [\"padding\"] as const,\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const {\n            left,\n            top,\n            right,\n            bottom,\n        } = getPaddingBox(props.padding || {});\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.getState();\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    nextPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const radiusPoses = nextPoses.filter(pos => !pos.virtual);\n    const raws = radiusPoses.map(posInfo => {\n        const { horizontal, vertical, pos } = posInfo;\n\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        radiusPoses,\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n    full = false,\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const horizontalValuesLength = horizontalValues.length;\n    const verticalValuesLength = verticalValues.length;\n    const hasVerticalValues = verticalValuesLength > 0;\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = hasVerticalValues ? wnValue : neValue,\n        esValue = hasVerticalValues ? wnValue : seValue,\n        wsValue = hasVerticalValues ? enValue : swValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio(\n        [horizontalPoses[0], horizontalPoses[1]],\n        width,\n    );\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio(\n        [horizontalPoses[3], horizontalPoses[2]],\n        width,\n    );\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio(\n        [verticalPoses[0], verticalPoses[3]], height,\n    );\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio(\n        [verticalPoses[1], verticalPoses[2]], height,\n    );\n\n    const nextHorizontalPoses = full\n        ? horizontalPoses\n        : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n    const nextVerticalPoses = full\n        ? verticalPoses\n        : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= horizontalValuesLength,\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= verticalValuesLength,\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import { splitBracket, splitComma, convertUnitSize, splitSpace, splitUnit } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { abs, convertCSSSize } from \"../../utils\";\nimport { getRadiusStyles, getRadiusValues } from \"../roundable/borderRadius\";\nimport { MoveableManagerInterface, ClippableProps, ControlPose } from \"../../types\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { getCachedStyle } from \"../../store/Store\";\n\n\nexport const CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\n\nexport const CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nexport function getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                clipPoses.slice(8).map((info, i) => {\n                    return {\n                        ...info,\n                        pos: poses[i],\n                    };\n                }),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\n\nexport function getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: abs(diry),\n            horizontal: abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\n\nexport function getControlSize(\n    controlPoses: ControlPose[],\n) {\n    const xRange = [Infinity, -Infinity];\n    const yRange = [Infinity, -Infinity];\n\n    controlPoses.forEach(({ pos }) => {\n        xRange[0] = Math.min(xRange[0], pos[0]);\n        xRange[1] = Math.max(xRange[1], pos[0]);\n        yRange[0] = Math.min(yRange[0], pos[1]);\n        yRange[1] = Math.max(yRange[1], pos[1]);\n    });\n\n    return [\n        abs(xRange[1] - xRange[0]),\n        abs(yRange[1] - yRange[0]),\n    ];\n}\n\n\nexport function getClipPath(\n    target: HTMLElement | SVGElement | undefined | null,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    if (!target) {\n        return;\n    }\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const getStyle = getCachedStyle(target!);\n        const clipPath = getStyle(\"clipPath\");\n\n        clipText = clipPath !== \"none\" ? clipPath : getStyle(\"clip\");\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n        const minMaxs = getMinMaxs(poses.map(pos => pos.pos));\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n            left: minMaxs.minX,\n            right: minMaxs.maxX,\n            top: minMaxs.minY,\n            bottom: minMaxs.maxY,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            right: centerPos[0] + radiusX,\n            bottom: centerPos[1] + radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    getSizeDistByDist,\n    getProps,\n    fillCSSObject,\n    abs,\n    sign,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/getTotalGuidelines\";\nimport {\n    getControlSize, getClipPath,\n    getClipStyles, getRectPoses,\n} from \"./clippable/utils\";\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n    keepRatio?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\n\n        const verticalDirection = verticalDirections[0];\n        const horizontalDirection = horizontalDirections[0];\n\n        dists[index] = dist;\n        const [width, height] = getControlSize(controlPoses);\n        const ratio = width && height ? width / height : 0;\n\n        if (ratio && keepRatio) {\n            // 0 1 2\n            // 7   3\n            // 6 5 4\n            const fixedIndex = (index + 4) % 8;\n            const fixedPosition = controlPoses[fixedIndex].pos;\n            const sizeDirection = [0, 0];\n\n            if (direction!.indexOf(\"w\") > -1) {\n                sizeDirection[0] = -1;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                sizeDirection[0] = 1;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                sizeDirection[1] = -1;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                sizeDirection[1] = 1;\n            }\n\n\n            const nextDist = getSizeDistByDist(\n                [width, height],\n                dist,\n                ratio,\n                sizeDirection,\n                true,\n            );\n            const nextWidth = width + nextDist[0];\n            const nextHeight = height + nextDist[1];\n            let top = fixedPosition[1];\n            let bottom = fixedPosition[1];\n            let left = fixedPosition[0];\n            let right = fixedPosition[0];\n\n            if (sizeDirection[0] === -1) {\n                left = right - nextWidth;\n            } else if (sizeDirection[0] === 1) {\n                right = left + nextWidth;\n            } else {\n                left = left - nextWidth / 2;\n                right = right + nextWidth / 2;\n            }\n            if (sizeDirection[1] === -1) {\n                top = bottom - nextHeight;\n            } else if (sizeDirection[1] === 1) {\n                bottom = top + nextHeight;\n            } else {\n                top = bottom - nextHeight / 2;\n                bottom = top + nextHeight;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            controlPoses.forEach((controlPose, i) => {\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\n            });\n        } else {\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: controlDir,\n                } = controlPose;\n\n                if (!controlDir) {\n                    return;\n                }\n                if (controlDir.indexOf(verticalDirection) > -1) {\n                    dists[i][0] = dist[0];\n                }\n                if (controlDir.indexOf(horizontalDirection) > -1) {\n                    dists[i][1] = dist[1];\n                }\n            });\n            if (verticalDirection) {\n                dists[1][0] = dist[0] / 2;\n                dists[5][0] = dist[0] / 2;\n            }\n            if (horizontalDirection) {\n                dists[3][1] = dist[1] / 2;\n                dists[7][1] = dist[1] / 2;\n            }\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\n\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(clipIndex, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(clipIndex, 1);\n        poses.splice(clipIndex, 1);\n    } else if (clipType === \"inset\") {\n        if (clipIndex < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: [\n        \"clippable\",\n        \"defaultClipPath\",\n        \"customClipPath\",\n        \"keepRatio\",\n        \"clipRelative\",\n        \"clipArea\",\n        \"dragWithClip\",\n        \"clipTargetBounds\",\n        \"clipVerticalGuidelines\",\n        \"clipHorizontalGuidelines\",\n        \"clipSnapThreshold\",\n    ] as const,\n    events: [\n        \"clipStart\",\n        \"clip\",\n        \"clipEnd\",\n    ] as const,\n    css: [\n        `.control.clip-control {\nbackground: #6d6;\ncursor: pointer;\n}\n.control.clip-control.clip-radius {\nbackground: #d66;\n}\n.line.clip-line {\nbackground: #6e6;\ncursor: move;\nz-index: 1;\n}\n.clip-area {\nposition: absolute;\ntop: 0;\nleft: 0;\n}\n.clip-ellipse {\nposition: absolute;\ncursor: move;\nborder: 1px solid #6d6;\nborder: var(--zoompx) solid #6d6;\nborder-radius: 50%;\ntransform-origin: 0px 0px;\n}`,\n        `:host {\n--bounds-color: #d66;\n}`,\n        `.guideline {\npointer-events: none;\nz-index: 2;\n}`,\n        `.line.guideline.bounds {\nbackground: #d66;\nbackground: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath,\n            defaultClipPath,\n            clipArea, zoom,\n            groupable,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.getState();\n\n        if (!target || groupable) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, { ...e, isDragTarget: true });\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas, isDragTarget } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        const props = getProps(moveable.props, \"clippable\");\n\n        const { keepRatio } = props;\n        let distX = 0;\n        let distY = 0;\n\n        const originalDraggable = originalDatas.draggable;\n        const originalDist = getDragDist(e);\n\n        if (isDragTarget && originalDraggable) {\n            [distX, distY] = originalDraggable.prevBeforeDist;\n        } else {\n            [distX, distY] = originalDist;\n        }\n\n        const firstDist = [distX, distY];\n\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[clipIndex];\n            const dist = [\n                distX * abs(horizontal),\n                distY * abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = abs(guideRect.bottom - guideRect.top);\n            const rx = abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n        const {\n            horizontal: horizontalSnapInfo,\n            vertical: verticalSnapInfo,\n        } = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            5,\n            5,\n        );\n        let snapOffsetY = horizontalSnapInfo.offset;\n        let snapOffsetX = verticalSnapInfo.offset;\n\n        if (horizontalSnapInfo.isBound) {\n            boundDelta[1] += snapOffsetY;\n        }\n        if (verticalSnapInfo.isBound) {\n            boundDelta[0] += snapOffsetX;\n        }\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n            const guideRect = getRect(nextPoses);\n            let cy = guideRect.bottom - guideRect.top;\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n\n\n            const distSnapX = verticalSnapInfo.isBound\n                ? abs(snapOffsetX)\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n            const distSnapY = horizontalSnapInfo.isBound\n                ? abs(snapOffsetY)\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n            cx -= distSnapX;\n            cy -= distSnapY;\n\n            if (isCircle) {\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                cx = cy;\n            }\n            const center = guidePoses[0];\n\n            guidePoses[1][1] = center[1] - cy;\n            guidePoses[2][0] = center[0] + cx;\n            guidePoses[3][1] = center[1] + cy;\n            guidePoses[4][0] = center[0] - cx;\n        } else if (isRect && keepRatio && isControl) {\n            const [width, height] = getControlSize(clipPoses);\n            const ratio = width && height ? width / height : 0;\n            const clipPose = clipPoses[clipIndex];\n            const direction = clipPose.direction! || \"\";\n            let top = guidePoses[1][1];\n            let bottom = guidePoses[5][1];\n            let left = guidePoses[7][0];\n            let right = guidePoses[3][0];\n\n            if (abs(snapOffsetY) <= abs(snapOffsetX)) {\n                snapOffsetY = sign(snapOffsetY) * abs(snapOffsetX) / ratio;\n            } else {\n                snapOffsetX = sign(snapOffsetX) * abs(snapOffsetY) * ratio;\n            }\n            if (direction!.indexOf(\"w\") > -1) {\n                left -= snapOffsetX;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                right -= snapOffsetX;\n            } else {\n                left += snapOffsetX / 2;\n                right -= snapOffsetX / 2;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                top -= snapOffsetY;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                bottom -= snapOffsetY;\n            } else {\n                top += snapOffsetY / 2;\n                bottom -= snapOffsetY / 2;\n            }\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            guidePoses.forEach((pos, i) => {\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\n            });\n        } else {\n            guidePoses.forEach((pos, j) => {\n                const dist = dists[j];\n\n                if (dist[0]) {\n                    pos[0] -= snapOffsetX;\n                }\n                if (dist[1]) {\n                    pos[1] -= snapOffsetY;\n                }\n            });\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n            1,\n        );\n\n        if (originalDraggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            let dragDist = boundDelta;\n\n            if (isDragTarget) {\n                dragDist = [\n                    firstDist[0] + boundDelta[0] - originalDist[0],\n                    firstDist[1] + boundDelta[1] - originalDist[1],\n                ];\n            }\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n            ...fillCSSObject({\n                [clipType === \"rect\" ? \"clip\" : \"clipPath\"]: clipStyle,\n            }, e),\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea.\n * @name Moveable.Clippable#clipArea\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target.\n* @name Moveable.Clippable#clipTargetBounds\n* @default false\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n * Add clip guidelines in the vertical direction.\n * @name Moveable.Clippable#clipVerticalGuidelines\n * @default 0\n * @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction.\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @default []\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines.\n* @name Moveable.Clippable#clipSnapThreshold\n* @default 5\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize, fillCSSObject,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: [\n        \"originDraggable\",\n        \"originRelative\",\n    ] as const,\n    events: [\n        \"dragOriginStart\",\n        \"dragOrigin\",\n        \"dragOriginEnd\",\n    ] as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\npointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const result = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n        )!;\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: result,\n            ...fillCSSObject({\n                transformOrigin,\n                transform: result.transform,\n            }, e),\n            afterTransform: result.transform,\n        });\n        triggerEvent(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    fillCSSObject,\n    catchEvent,\n    getComputedStyle,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart,\n    RoundableState, OnRound, ControlPose, OnRoundEnd,\n    MoveableManagerInterface,\n    OnRoundGroup,\n    MoveableGroupInterface,\n    OnRoundGroupStart,\n    OnRoundGroupEnd,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues,\n    getRadiusStyles,\n    splitRadiusPoses,\n} from \"./roundable/borderRadius\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction addBorderRadiusByLine(\n    controlPoses: ControlPose[],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n) {\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 bottom\n    // 3 left\n\n    const horizontalsLength = controlPoses.filter(({ virtual, horizontal }) => horizontal && !virtual).length;\n    const verticalsLength = controlPoses.filter(({ virtual, vertical }) => vertical && !virtual).length;\n    let controlIndex = -1;\n\n    //top\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            controlIndex = 0;\n        } else if (horizontalsLength === 1) {\n            controlIndex = 1;\n        }\n    }\n    // bottom\n    if (lineIndex === 2) {\n        if (horizontalsLength <= 2) {\n            controlIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            controlIndex = 3;\n        }\n    }\n    // left\n    if (lineIndex === 3) {\n        if (verticalsLength === 0) {\n            controlIndex = 4;\n        } else if (verticalsLength < 4) {\n            controlIndex = 7;\n        }\n    }\n\n    // right\n    if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            controlIndex = 5;\n        } else if (verticalsLength <= 2) {\n            controlIndex = 6;\n        }\n    }\n    if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n        return;\n    }\n    const controlPoseInfo = controlPoses[controlIndex];\n\n    addBorderRadius(controlPoses, controlIndex);\n\n    if (controlIndex < 4) {\n        controlPoseInfo.pos[0] = distX;\n    } else {\n        controlPoseInfo.pos[1] = distY;\n    }\n}\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(0, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    } else {\n        if (controlPoses[0].virtual) {\n            controlPoses[0].virtual = false;\n        }\n        controlPoses.slice(4, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    }\n}\nfunction removeBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(index, 4).forEach(info => {\n            info.virtual = true;\n        });\n    } else {\n        controlPoses.slice(index).forEach(info => {\n            info.virtual = true;\n        });\n    }\n}\nfunction getBorderRadius(\n    borderRadius: string,\n    width: number,\n    height: number,\n    minCounts: number[] = [0, 0],\n    full?: boolean,\n) {\n    let values: string[] = [];\n\n    if (!borderRadius || borderRadius === \"0px\") {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    nextPoses: ControlPose[],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n        radiusPoses,\n    } = getRadiusStyles(\n        nextPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(radiusPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    const params = fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n        ...fillCSSObject({\n            borderRadius,\n        }, e),\n    });\n    triggerEvent(moveable, \"onRound\", params);\n\n    return params;\n}\n\n\nfunction getStyleBorderRadius(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n    const {\n        style,\n    } = moveable.getState();\n    let borderRadius = style.borderRadius || \"\";\n\n    if (!borderRadius && moveable.props.groupable) {\n        const firstMoveable = moveable.moveables![0];\n        const firstTarget = moveable.getTargets()[0];\n\n\n        if (firstTarget) {\n            if (firstMoveable?.props.target === firstTarget) {\n                borderRadius = moveable.moveables![0]?.state.style.borderRadius ?? \"\";\n                style.borderRadius = borderRadius;\n            } else {\n                borderRadius = getComputedStyle(firstTarget).borderRadius;\n                style.borderRadius = borderRadius;\n            }\n        }\n\n    }\n    return borderRadius;\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: [\n        \"roundable\",\n        \"roundRelative\",\n        \"minRoundControls\",\n        \"maxRoundControls\",\n        \"roundClickable\",\n        \"roundPadding\",\n        \"isDisplayShadowRoundControls\",\n    ] as const,\n    events: [\n        \"roundStart\",\n        \"round\",\n        \"roundEnd\",\n        \"roundGroupStart\",\n        \"roundGroup\",\n        \"roundGroupEnd\",\n    ] as const,\n    css: [\n        `.control.border-radius {\nbackground: #d66;\ncursor: pointer;\nz-index: 3;\n}`,\n        `.control.border-radius.vertical {\nbackground: #d6d;\nz-index: 2;\n}`,\n        `.control.border-radius.virtual {\nopacity: 0.5;\nz-index: 1;\n}`,\n        `:host.round-line-clickable .line.direction {\ncursor: pointer;\n}`,\n    ],\n    className(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        const roundClickable = moveable.props.roundClickable;\n\n        return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n    },\n    requestStyle(): Array<keyof CSSStyleDeclaration> {\n        return [\"borderRadius\"];\n    },\n    requestChildStyle(): Array<keyof CSSStyleDeclaration> {\n        return [\"borderRadius\"];\n    },\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.getState();\n\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n            roundPadding = 0,\n            isDisplayShadowRoundControls,\n            groupable,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            borderRadius,\n            width, height,\n            minRoundControls,\n            true,\n        );\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n        const basePos = groupable ? [0, 0] : [left, top];\n\n        return radiusValues.map((v, i) => {\n            const horizontal = v.horizontal;\n            const vertical = v.vertical;\n            const direction = v.direction || \"\";\n            const originalPos = [...v.pos];\n\n            horizontalCount += Math.abs(horizontal);\n            verticalCount += Math.abs(vertical);\n\n\n            if (horizontal && direction.indexOf(\"n\") > -1) {\n                originalPos[1] -= roundPadding;\n            }\n            if (vertical && direction.indexOf(\"w\") > -1) {\n                originalPos[0] -= roundPadding;\n            }\n            if (horizontal && direction.indexOf(\"s\") > -1) {\n                originalPos[1] += roundPadding;\n            }\n            if (vertical && direction.indexOf(\"e\") > -1) {\n                originalPos[0] += roundPadding;\n            }\n            const pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\n            const isDisplayVerticalShadow\n                = isDisplayShadowRoundControls\n                && isDisplayShadowRoundControls !== \"horizontal\";\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1] && (isDisplayVerticalShadow || !v.virtual)\n                : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\n                    \"control\", \"border-radius\",\n                    v.vertical ? \"vertical\" : \"\",\n                    v.virtual ? \"virtual\" : \"\",\n                )}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        let lineIndex = -1;\n\n        if (isLine) {\n            const indexAttr = inputTarget.getAttribute(\"data-line-key\")! || \"\";\n\n            if (indexAttr) {\n                lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n\n                if (isNaN(lineIndex)) {\n                    lineIndex = -1;\n                }\n            }\n        }\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const params = fillParams<OnRoundStart>(moveable, e, {});\n\n        const result = triggerEvent(\n            moveable, \"onRoundStart\", params);\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const borderRadius = getStyleBorderRadius(moveable);\n        const controlPoses = getBorderRadius(\n            borderRadius || \"\",\n            width,\n            height,\n            minRoundControls,\n            true,\n        ) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses,\n            roundRelative!,\n            width,\n            height,\n        ).styles.join(\" \");\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n        const controlPoses = datas.controlPoses as ControlPose[];\n\n        if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((info, i) => {\n            return {\n                ...info,\n                pos: plus(info.pos, dists[i]),\n            };\n        });\n\n        if (index < 4) {\n            nextPoses.slice(0, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        } else {\n            nextPoses.slice(4, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        }\n\n        datas.prevDist = [distX, distY];\n\n        return triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            nextPoses,\n        );\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const length = controlPoses.filter(({ virtual }) => virtual).length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n                removeBorderRadius(controlPoses, controlIndex);\n            } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n            }\n\n            if (length !== controlPoses.filter(({ virtual }) => virtual).length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                );\n            }\n        }\n        const params = fillEndParams<OnRoundEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRoundEnd\", params);\n        state.borderRadiusState = \"\";\n        return params;\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControlStart(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroupStart = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\n        return result;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControl(moveable, e);\n\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroup = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    ...fillCSSObject({\n                        borderRadius: result.borderRadius,\n                    }, ev),\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        catchEvent(moveable, \"onRound\", parentEvent => {\n            const nextParams: OnRoundGroup = {\n                targets: moveable.props.targets!,\n                events: events.map((ev, i) => {\n                    return {\n                        ...ev,\n                        target: targets[i],\n                        moveable: moveables[i],\n                        currentTarget: moveables[i],\n                        ...fillCSSObject({\n                            borderRadius: parentEvent.borderRadius,\n                        }, ev),\n                    };\n                }),\n                ...parentEvent,\n            };\n            triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        });\n        const result = this.dragControlEnd(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n        const nextParams: OnRoundGroupEnd = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    lastEvent: ev.datas?.lastEvent,\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\n        return nextParams;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.minRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Whether you can add/delete round controls by double-clicking a line or control.\n * @name Moveable.Roundable#roundClickable\n * @default true\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * Whether to show a round control that does not actually exist as a shadow\n * @name Moveable.Roundable#isDisplayShadowRoundControls\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     isDisplayShadowRoundControls: false,\n * });\n * moveable.isDisplayShadowRoundControls = true;\n */\n\n\n/**\n * The padding value of the position of the round control\n * @name Moveable.Roundable#roundPadding\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundPadding: 0,\n * });\n * moveable.roundPadding = 15;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupStart\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `roundGroup` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroup\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupEnd\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *     e.events.forEach(ev => {\n *         ev.target.style.cssText += ev.cssText;\n *     });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const n = is3d ? 4 : 3;\n    const identityMatrix = createIdentityMatrix(n);\n    const value = `matrix${is3d ? \"3d\" : \"\"}(${identityMatrix.join(\",\")})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: [] as const,\n    events: [\n        \"beforeRenderStart\",\n        \"beforeRender\",\n        \"beforeRenderEnd\",\n        \"beforeRenderGroupStart\",\n        \"beforeRenderGroup\",\n        \"beforeRenderGroupEnd\",\n    ] as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            targetMatrix,\n            inlineTransform,\n        } = moveable.state;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !inlineTransform || inlineTransform === \"none\" ? cssMatrix : inlineTransform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetStyle(e: any) {\n        const datas = e.datas;\n\n        datas.nextStyle = {};\n        datas.nextTransforms = e.datas.startTransforms;\n        datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n        this.resetStyle(e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        if (!e.datas.startTransforms) {\n            this.setTransform(moveable, e);\n        }\n        this.resetStyle(e);\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        if (!e.datas.startTransforms) {\n            this.setTransform(moveable, e);\n            this.resetStyle(e);\n        }\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            this.resetStyle(childEvent);\n\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetStyle(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { parse } from \"css-to-mat\";\nimport { getNextStyle, getNextTransformText, getNextTransforms } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams, fillCSSObject } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: [] as const,\n    events: [\n        \"renderStart\",\n        \"render\",\n        \"renderEnd\",\n        \"renderGroupStart\",\n        \"renderGroup\",\n        \"renderGroupEnd\",\n    ] as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            transformObject: {},\n            ...fillCSSObject(getNextStyle(e)),\n            events: params,\n        },));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n            transformObject: {},\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        const transformObject: Record<string, any> = {};\n\n        parse(getNextTransforms(e) || []).forEach(matrixInfo => {\n            transformObject[matrixInfo.name] = matrixInfo.functionValue;\n        });\n\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transformObject,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        const transformObject: Record<string, any> = {};\n\n        parse(getNextTransforms(e) || []).forEach(matrixInfo => {\n            transformObject[matrixInfo.name] = matrixInfo.functionValue;\n        });\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            transformObject,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { getWindow, hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist, defaultSync, getRefTarget } from \"../utils\";\nimport Gesto, { GestoOptions } from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    moveableAbles: Able[],\n    eventOperations: string[],\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    // pre setting\n    e.clientDistX = e.distX;\n    e.clientDistY = e.distY;\n\n    const isStart = eventType === \"Start\";\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n    const isControl = eventAffix.indexOf(\"Control\") > -1;\n\n    if (\n        !target\n        || (isStart && isControl && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    const ables: Able[] = [...moveableAbles];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length || ables.every(able => able.dragRelation)) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let isDragStop = false;\n    const stop = () => {\n        isDragStop = true;\n        e.stop?.();\n    };\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n\n\n    // trigger ables\n    const datas = e.datas;\n    const gestoType = isControl ? \"controlGesto\" : \"targetGesto\";\n    const prevGesto = moveable[gestoType];\n\n    const trigger = (able: any, eventName: string, conditionName?: string) => {\n        if (!(eventName in able) || prevGesto !== moveable[gestoType]) {\n            return false;\n        }\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !conditionName\n                || !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (!nextDatas.isEventStart) {\n            return false;\n        }\n        const result = able[eventName](moveable, {\n            ...e,\n            stop,\n            datas: nextDatas,\n            originalDatas: datas,\n            inputTarget,\n        });\n        (moveable as any)._emitter.off();\n\n        if (isStart && result === false) {\n            nextDatas.isEventStart = false;\n        }\n        return result;\n    };\n\n    // unset ables for first drag start\n    if (isFirstStart) {\n        ables.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    // BeforeRenderable\n    trigger(BeforeRenderable, `drag${eventAffix}${eventType}`);\n\n    let forceEndedCount = 0;\n    let updatedCount = 0;\n\n    eventOperations.forEach(eventOperation => {\n        if (isDragStop) {\n            return false;\n        }\n        const eventName = `${eventOperation}${eventAffix}${eventType}`;\n        const conditionName = `${eventOperation}${eventAffix}Condition`;\n\n        if (eventType === \"\" && !isRequest) {\n            // Convert distX, distY\n            convertDragDist(moveable.state, e);\n        }\n        // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n        let eventAbles: Able[] = ables.filter((able: any) => able[eventName]);\n\n        eventAbles = eventAbles.filter((able, i) => {\n            return able.name && eventAbles.indexOf(able) === i;\n        });\n\n        const results = eventAbles.filter(able => trigger(able, eventName, conditionName));\n        const isUpdate = results.length;\n\n        // end ables\n        if (isDragStop) {\n            ++forceEndedCount;\n        }\n        if (isUpdate) {\n            ++updatedCount;\n        }\n\n        if (!isDragStop && isStart && eventAbles.length && !isUpdate) {\n            forceEndedCount += eventAbles.filter(able => {\n                const ableName = able.name;\n                const nextDatas = datas[ableName];\n\n                if (nextDatas.isEventStart) {\n                    if (able.dragRelation === \"strong\") {\n                        return false;\n                    }\n                    // stop drag\n                    return true;\n                }\n                // pre stop drag\n                return false;\n            }).length ? 1 : 0;\n        }\n    });\n\n\n    if (!isAfter || updatedCount) {\n        trigger(Renderable, `drag${eventAffix}${eventType}`);\n    }\n    // stop gesto condition\n    const isForceEnd = prevGesto !== moveable[gestoType] || forceEndedCount === eventOperations.length;\n\n    if (isEnd || isDragStop || isForceEnd) {\n        moveable.state.gestos = {};\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gestos = {};\n            });\n        }\n        ables.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isForceEnd && !isRequest && updatedCount && moveable.props.preventDefault) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && updatedCount && !requestInstant) || isEnd) {\n        const flushSync = moveable.props.flushSync || defaultSync;\n\n        flushSync(() => {\n            moveable.updateRect(isEnd ? eventType : \"\", true, false);\n            moveable.forceUpdate();\n        });\n\n    }\n    if (!isStart && !isEnd && !isAfter && updatedCount && !requestInstant) {\n        triggerAble(moveable, moveableAbles, eventOperations, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function checkMoveableTarget(moveable: MoveableManagerInterface, isControl?: boolean) {\n    return (e: { inputEvent: Event }, target: EventTarget | null = e.inputEvent.target) => {\n        const eventTarget = target as Element;\n        const areaElement = moveable.areaElement;\n        const dragTargetElement = (moveable as any)._dragTarget;\n\n        if (!dragTargetElement || (!isControl && moveable.controlGesto?.isFlag())) {\n            return false;\n        }\n\n        return eventTarget === dragTargetElement\n            || dragTargetElement.contains(eventTarget)\n            || eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\")\n            || hasClass(eventTarget, \"moveable-edgeDraggable\");\n    };\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox;\n    const targets: Array<HTMLElement | SVGElement> = [];\n    const props = moveable.props;\n    const dragArea =  props.dragArea;\n    const target = moveable.state.target;\n    const dragTarget = props.dragTarget;\n\n    targets.push(controlBox);\n\n    if (!dragArea || dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    if (!dragArea && dragTarget && target && moveableTarget !== target && props.dragTargetSelf) {\n        targets.push(target);\n    }\n    const checkTarget = checkMoveableTarget(moveable);\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: checkTarget,\n        pinchStart: checkTarget,\n    });\n}\n\nexport function getControlAbleGesto(\n    moveable: MoveableManagerInterface,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox;\n    const targets: Array<HTMLElement | SVGElement> = [];\n\n    targets.push(controlBox);\n\n    const checkTarget = checkMoveableTarget(moveable, true);\n    const checkControlTarget = (e: any, target: EventTarget | null = e.inputEvent.target) => {\n        if (target === controlBox) {\n            return true;\n        }\n        const result = checkTarget(e, target);\n\n        return !result;\n    };\n\n    return getAbleGesto(moveable, targets, \"controlAbles\", eventAffix, {\n        dragStart: checkControlTarget,\n        pinchStart: checkControlTarget,\n    });\n}\n\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const isTargetAbles = ableType === \"targetAbles\";\n    const {\n        pinchOutside,\n        pinchThreshold,\n        preventClickEventOnDrag,\n        preventClickDefault,\n        checkInput,\n        dragFocusedInput,\n        preventDefault = true,\n        preventRightClick = true,\n        preventWheelClick = true,\n        dragContainer: dragContaienrOption,\n    } = moveable.props;\n    const dragContainer = getRefTarget(dragContaienrOption, true);\n\n    const options: GestoOptions = {\n        preventDefault,\n        preventRightClick,\n        preventWheelClick,\n        container: dragContainer || getWindow(moveable.getControlBoxElement()),\n        pinchThreshold,\n        pinchOutside,\n        preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n        preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n        preventClickEventByCondition: isTargetAbles ? null : (e: MouseEvent) => {\n            return moveable.controlBox.contains(e.target as Element);\n        },\n        checkInput: isTargetAbles ? checkInput : false,\n        dragFocusedInput,\n    };\n    const gesto = new Gesto(target!, options);\n    const isControl = eventAffix === \"Control\";\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n                const isPinchScheduled = eventOperation === \"drag\" && e.isPinch;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n\n                if (isPinchScheduled) {\n                    return;\n                }\n                const eventOperations = eventOperation === \"drag\" ? [eventOperation] : [\"drag\", eventOperation];\n                const moveableAbles: Able[] = [...(moveable as any)[ableType]];\n                const result = triggerAble(moveable, moveableAbles, eventOperations, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                } else if (moveable.props.stopPropagation || (eventType === \"Start\" && isControl)) {\n                    e?.inputEvent?.stopPropagation();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n    private _onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n}\n","import { createIdentityMatrix, convertDimension, multiply, createOriginMatrix, ignoreDimension } from \"@scena/matrix\";\nimport { getCachedMatrixContainerInfo } from \"../store/Store\";\nimport { convert3DMatrixes, getOffsetInfo, getSVGOffset, makeMatrixCSS } from \"../utils\";\nimport { getMatrixStackInfo } from \"./getMatrixStackInfo\";\nimport { getDocumentBody } from \"@daybrush/utils\";\nimport { MatrixInfo } from \"../types\";\n\nexport interface MoveableElementMatrixInfo {\n    hasZoom: boolean;\n    hasFixed: boolean;\n    originalRootMatrix: number[];\n    rootMatrix: number[];\n    beforeMatrix: number[];\n    offsetMatrix: number[];\n    allMatrix: number[];\n    targetMatrix: number[];\n    transformOrigin: number[];\n    targetOrigin: number[];\n    is3d: boolean;\n    targetTransform: string;\n    inlineTransform: string;\n    offsetContainer: HTMLElement | null;\n    offsetRootContainer: HTMLElement | null;\n    matrixes: MatrixInfo[];\n}\n\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n): MoveableElementMatrixInfo {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n        hasFixed,\n        zoom: containerZoom,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n        offsetContainer: offsetRootContainer,\n        zoom: rootZoom,\n    } = getCachedMatrixContainerInfo(offsetContainer, rootContainer); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n    const nextRootMatrixes = rootMatrixes.map(info => {\n        return {\n            ...info,\n            matrix: info.matrix ? [...info.matrix] : undefined,\n        };\n    }).reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(nextRootMatrixes);\n    }\n\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    nextRootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || getDocumentBody(target);\n    const endContainer = nextRootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = nextRootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    const originalRootMatrix = rootMatrix;\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        hasZoom: containerZoom !== 1 || rootZoom !== 1,\n        hasFixed,\n        matrixes,\n        rootMatrix,\n        originalRootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        inlineTransform: target.style.transform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n        offsetContainer,\n        offsetRootContainer,\n    };\n}\n","import { createIdentityMatrix } from \"@scena/matrix\";\nimport { ElementSizes, MoveablePosition } from \"../types\";\nimport { getSize, getRotationRad } from \"../utils\";\nimport { calculateMatrixStack, MoveableElementMatrixInfo } from \"./calculateMatrixStack\";\nimport { calculateElementPosition } from \"./calculateElementPosition\";\n\nexport interface MoveableElementInfo extends MoveableElementMatrixInfo, MoveablePosition, ElementSizes {\n    width: number;\n    height: number;\n    rotation: number;\n}\n\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n): MoveableElementInfo {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    const sizes = getSize(target);\n\n    if (target) {\n        width = sizes.offsetWidth;\n        height = sizes.offsetHeight;\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n\n        const position = calculateElementPosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateElementPosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n\n    return {\n        hasZoom: false,\n        width,\n        height,\n        rotation,\n        ...sizes,\n        originalRootMatrix: createIdentityMatrix(n),\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        inlineTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        hasFixed: false,\n        offsetContainer: null,\n        offsetRootContainer: null,\n        matrixes: [],\n        ...allResult,\n    };\n}\n\n\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\n","import { plus, getOrigin, multiply, minus } from \"@scena/matrix\";\nimport { getCachedClientRect, getCachedStyle } from \"../store/Store\";\nimport { MoveableClientRect, Writable } from \"../types\";\nimport {\n    calculateInversePosition,\n    getClientRect, getClientRectByPosition, getOffsetInfo, resetClientRect,\n    getTransformOriginArray,\n} from \"../utils\";\nimport { calculateElementInfo, MoveableElementInfo } from \"./getElementInfo\";\nimport { calculateElementPosition } from \"./calculateElementPosition\";\n\n\nexport interface MoveableTargetInfo extends MoveableElementInfo {\n    targetClientRect: MoveableClientRect;\n    containerClientRect: MoveableClientRect;\n    moveableClientRect: MoveableClientRect;\n    rootContainerClientRect: MoveableClientRect;\n    beforeDirection: 1 | -1;\n    beforeOrigin: number[];\n    offsetDelta: number[],\n    originalBeforeOrigin: number[];\n    target: HTMLElement | SVGElement | null | undefined;\n    style: Partial<Writable<CSSStyleDeclaration>>;\n}\n\nexport function getMoveableTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    requestStyles: Array<keyof CSSStyleDeclaration> = [],\n): MoveableTargetInfo {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let rootContainerClientRect = resetClientRect();\n    let offsetDelta = [0, 0];\n    const style: Partial<Writable<CSSStyleDeclaration>> = {};\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!,\n        true,\n    );\n    if (target) {\n        const getStyle = getCachedStyle(target);\n\n        requestStyles.forEach(name => {\n            (style as any)[name] = getStyle(name as any);\n        });\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateElementPosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        rootContainerClientRect = getClientRect(result.offsetRootContainer!);\n\n\n        const offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent\n            || result.offsetRootContainer!;\n\n        if (result.hasZoom) {\n            const absoluteTargetPosition = calculateElementPosition(\n                multiply(result.originalRootMatrix, result.allMatrix),\n                result.transformOrigin,\n                result.width, result.height,\n            );\n            const absoluteContainerPosition = calculateElementPosition(\n                result.originalRootMatrix,\n                getTransformOriginArray(getCachedStyle(offsetContainer)(\"transformOrigin\")).map(pos => parseFloat(pos)),\n                offsetContainer.offsetWidth, offsetContainer.offsetHeight,\n            );\n            targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\n            containerClientRect = getClientRectByPosition(\n                absoluteContainerPosition,\n                rootContainerClientRect,\n                offsetContainer,\n                true,\n            );\n\n            if (moveableElement) {\n                const left = absoluteTargetPosition.left;\n                const top = absoluteTargetPosition.top;\n                moveableClientRect = getClientRectByPosition({\n                    left,\n                    top,\n                    bottom: top,\n                    right: top,\n                }, rootContainerClientRect);\n            }\n        } else {\n            targetClientRect = getClientRect(target);\n            containerClientRect = getCachedClientRect(offsetContainer);\n\n            if (moveableElement) {\n                moveableClientRect = getClientRect(moveableElement);\n            }\n            const {\n                left: containerClientRectLeft,\n                top: containerClientRectTop,\n                clientLeft: containterClientLeft,\n                clientTop: containerClientTop,\n            } = containerClientRect;\n            const clientDelta = [\n                targetClientRect.left - containerClientRectLeft,\n                targetClientRect.top - containerClientRectTop,\n            ];\n\n            offsetDelta = minus(\n                calculateInversePosition(result.rootMatrix, clientDelta, 4),\n                [containterClientLeft! + result.left, containerClientTop! + result.top],\n            );\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        rootContainerClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        style,\n        offsetDelta,\n        ...result,\n    };\n}\n","import { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { MoveableManagerState, PersistRectData } from \"../types\";\n\n\nexport function getPersistState(rect: PersistRectData): Partial<MoveableManagerState> | null {\n    let {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = rect;\n    if (!pos1 || !pos2 || !pos3 || !pos4) {\n        return null;\n    }\n    const minPos = getMinMaxs([pos1!, pos2!, pos3!, pos4!]);\n    const posDelta = [minPos.minX, minPos.minY];\n    const origin = minus(rect.origin!, posDelta);\n\n    pos1 = minus(pos1, posDelta);\n    pos2 = minus(pos2, posDelta);\n    pos3 = minus(pos3, posDelta);\n    pos4 = minus(pos4, posDelta);\n    return {\n        ...rect,\n        left: rect.left,\n        top: rect.top,\n        posDelta,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        origin,\n        beforeOrigin: origin,\n        // originalBeforeOrigin: origin,\n        isPersisted: true,\n    };\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    unsetGesto,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n    defaultSync,\n    getRefTarget,\n    groupBy,\n    unsetAbles,\n    getPaddingBox,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n    GroupableProps,\n    MoveableRefType,\n} from \"./types\";\nimport {\n    triggerAble, getTargetAbleGesto,\n    checkMoveableTarget, getControlAbleGesto,\n} from \"./gesto/getAbleGesto\";\nimport { createOriginMatrix, multiplies, plus } from \"@scena/matrix\";\nimport {\n    addClass, cancelAnimationFrame, find,\n    getKeys, getWindow, IObject, isNode, removeClass, requestAnimationFrame,\n} from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport { styled } from \"react-css-styled\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { VIEW_DRAGGING } from \"./classNames\";\nimport { diff } from \"@egjs/list-differ\";\nimport { getPersistState } from \"./utils/persist\";\nimport { setStoreCache } from \"./store/Store\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        dragTargetSelf: false,\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        isWrapperMounted: false,\n        parentPosition: null,\n        warpSelf: false,\n        svgOrigin: \"\",\n        dragContainer: null,\n        useResizeObserver: false,\n        useMutationObserver: false,\n        preventDefault: true,\n        preventRightClick: true,\n        preventWheelClick: true,\n        linePadding: 0,\n        controlPadding: 0,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        dragFocusedInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n        stopPropagation: false,\n        preventClickDefault: false,\n        preventClickEventOnDrag: true,\n        flushSync: defaultSync,\n        firstRenderState: null,\n        persistData: null,\n        viewContainer: null,\n        requestStyles: [],\n        useAccuratePosition: false,\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gestos: {},\n        renderLines: [\n            [[0, 0], [0, 0]],\n            [[0, 0], [0, 0]],\n            [[0, 0], [0, 0]],\n            [[0, 0], [0, 0]],\n        ],\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        posDelta: [0, 0],\n        ...getMoveableTargetInfo(null),\n    };\n    public renderState: Record<string, any> = {};\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: HTMLElement;\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isMoveableMounted = false;\n    public isUnmounted = false;\n\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _emitter: EventEmitter = new EventEmitter();\n\n    protected _prevOriginalDragTarget: MoveableRefType | null = null;\n    protected _originalDragTarget: MoveableRefType | null = null;\n\n    protected _prevDragTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _dragTarget: HTMLElement | SVGElement | null | undefined = null;\n\n    protected _prevPropTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _propTarget: HTMLElement | SVGElement | null | undefined = null;\n\n    protected _prevDragArea = false;\n    protected _isPropTargetChanged = false;\n    protected _hasFirstTarget = false;\n\n    private _reiszeObserver: ResizeObserver | null = null;\n    private _observerId = 0;\n    private _mutationObserver: MutationObserver | null = null;\n    public _rootContainer: HTMLElement | null | undefined = null;\n    private _viewContainer: HTMLElement | null | undefined = null;\n    private _viewClassNames: string[] = [];\n    private _store: Record<string, any> = {};\n\n    public render() {\n        const props = this.props;\n        const state = this.getState();\n        const {\n            parentPosition,\n            className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            groupable,\n            linePadding,\n            controlPadding,\n        } = props;\n\n        this._checkUpdateRootContainer();\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const [parentLeft, parentTop] = parentPosition as number[] || [0, 0];\n        const {\n            left,\n            top,\n            target: stateTarget,\n            direction,\n            hasFixed,\n            offsetDelta,\n        } = state;\n        const groupTargets = (props as any).targets;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        const ableClassName = this._getAbleClassName();\n        const isDisplay\n            = (groupTargets && groupTargets.length && (stateTarget || groupable))\n            || propsTarget\n            || (!this._hasFirstTarget && this.state.isPersisted);\n        const isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\n        const translate = [left - parentLeft, top - parentTop];\n\n        if (!groupable && props.useAccuratePosition) {\n            translate[0] += offsetDelta[0];\n            translate[1] += offsetDelta[1];\n        }\n        const style: Record<string, any> = {\n            \"position\": hasFixed ? \"fixed\" : \"absolute\",\n            \"display\": isDisplay ? \"block\" : \"none\",\n            \"visibility\": isVisible ? \"visible\" : \"hidden\",\n            \"transform\": `translate3d(${translate[0]}px, ${translate[1]}px, ${translateZ})`,\n            \"--zoom\": zoom,\n            \"--zoompx\": `${zoom}px`,\n        };\n        if (linePadding) {\n            style[\"--moveable-line-padding\"] = linePadding;\n        }\n        if (controlPadding) {\n            style[\"--moveable-control-padding\"] = controlPadding;\n        }\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${ableClassName} ${className}`}\n                {...ableAttributes}\n                onClick={this._onPreventClick}\n                style={style}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.isMoveableMounted = true;\n        this.isUnmounted = false;\n        const props = this.props;\n        const { parentMoveable, container } = props;\n\n\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n\n        if (!container && !parentMoveable && !this.state.isPersisted) {\n            this.updateRect(\"\", false, false);\n            this.forceUpdate();\n        }\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateNativeEvents();\n        this._updateTargets();\n        this._updateEvents();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isMoveableMounted = false;\n        this.isUnmounted = true;\n        this._emitter.off();\n        this._reiszeObserver?.disconnect();\n        this._mutationObserver?.disconnect();\n\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([]);\n        }\n        unsetGesto(this, false);\n        unsetGesto(this, true);\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getTargets(): Array<HTMLElement | SVGElement> {\n        const target = this.props.target;\n        return target ? [target] : [];\n    }\n    /**\n     * Get the able used in MoveableManager.\n     * @method Moveable#getAble\n     * @param - able name\n     */\n    public getAble<T extends Able>(ableName: string): T | undefined {\n        const ables: Able[] = this.props.ables || [];\n\n        return find(ables, able => able.name === ableName) as T;\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.parentElement!;\n    }\n    /**\n     * Returns the element of the control box.\n     * @method Moveable#getControlBoxElement\n     */\n    public getControlBoxElement(): HTMLElement {\n        return this.controlBox;\n    }\n    /**\n     * Target element to be dragged in moveable\n     * @method Moveable#getDragElement\n     */\n    public getDragElement(): HTMLElement | SVGElement | null | undefined {\n        return this._dragTarget;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute?.(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent, target: EventTarget | null = e.target) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto && checkMoveableTarget(this)({ inputEvent: e }, target)) {\n            if (!targetGesto.isFlag()) {\n                targetGesto.triggerDragStart(e);\n            }\n        } else if (controlGesto && this.isMoveableElement(target as Element)) {\n            if (!controlGesto.isFlag()) {\n                controlGesto.triggerDragStart(e);\n            }\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * (100% = 100)\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (isNode(el)) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const isSingle = !props.parentPosition && !props.wrapperMoveable;\n\n        if (isSingle) {\n            setStoreCache(true);\n        }\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? (parentMoveable as any)._rootContainer\n            : this._rootContainer;\n        const nextState = getMoveableTargetInfo(\n            this.controlBox,\n            target,\n            container,\n            container,\n            rootContainer || container,\n            this._getRequestStyles(),\n        );\n\n        if (!target && this._hasFirstTarget && props.persistData) {\n            const persistState = getPersistState(props.persistData);\n\n            for (const name in persistState) {\n                (nextState as any)[name] = (persistState as any)[name];\n            }\n        }\n\n        if (isSingle) {\n            setStoreCache();\n        }\n        this.updateState(\n            nextState,\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @param - If you want to check if able is dragging, specify ableName.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging(ableName?: string) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = targetGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        if (controlGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = controlGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        return false;\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * Use `.updateRect()` method\n     * @method Moveable#updateTarget\n     * @deprecated\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    /**\n     * You can stop the dragging currently in progress through a method from outside.\n     * @method Moveable#stopDrag\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.stopDrag();\n     */\n    public stopDrag(type?: \"target\" | \"control\"): void {\n        if (!type || type === \"target\") {\n            const gesto = this.targetGesto;\n\n            if (gesto?.isIdle() === false) {\n                unsetAbles(this, false);\n            }\n            gesto?.stop();\n        }\n        if (!type || type === \"control\") {\n            const gesto = this.controlGesto;\n\n            if (gesto?.isIdle() === false) {\n                unsetAbles(this, true);\n            }\n            gesto?.stop();\n        }\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(\n        ableName: string,\n        param: IObject<any> = {},\n        isInstant?: boolean,\n    ): Requester {\n        const self = this;\n        const props = self.props;\n        const manager = props.parentMoveable || props.wrapperMoveable || self;\n        const allAbles = manager.props.ables!;\n        const groupable = props.groupable;\n        const requsetAble = find(allAbles, (able: Able) => able.name === ableName);\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n\n        const ableRequester = requsetAble.request(self);\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n        const moveableAbles: Able[] = [...manager[ableType]];\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return requester;\n            },\n            requestEnd() {\n                triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return requester;\n            },\n        };\n\n        triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * moveable is the top level that manages targets\n     * `Single`: MoveableManager instance\n     * `Group`: MoveableGroup instance\n     * `IndividualGroup`: MoveableIndividaulGroup instance\n     * Returns leaf target MoveableManagers.\n     */\n    public getMoveables(): MoveableManagerInterface[] {\n        return [this];\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.getState();\n        const props = this.props;\n        const padding = props.padding;\n        const {\n            originalBeforeOrigin,\n            transformOrigin,\n            allMatrix, is3d,\n            pos1, pos2, pos3, pos4,\n            left: stateLeft,\n            top: stateTop,\n            isPersisted,\n        } = state;\n        const zoom = props.zoom || 1;\n\n        if (!padding && zoom <= 1) {\n            state.renderPoses = [\n                pos1,\n                pos2,\n                pos3,\n                pos4,\n            ];\n            state.renderLines = [\n                [pos1, pos2],\n                [pos2, pos4],\n                [pos4, pos3],\n                [pos3, pos1],\n            ];\n            return;\n        }\n        const {\n            left,\n            top,\n            bottom,\n            right,\n        } = getPaddingBox(padding || {});\n        const n = is3d ? 4 : 3;\n\n        // const clipPathInfo = getClipPath(\n        //     props.target,\n        //     offsetWidth,\n        //     offsetHeight,\n        // );\n\n        // if (clipPathInfo) {\n        //     left -= Math.max(0, clipPathInfo.left);\n        //     top -= Math.max(0, clipPathInfo.top);\n        //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\n        //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\n        // }\n\n        let absoluteOrigin: number[] = [];\n\n        if (isPersisted) {\n            absoluteOrigin = transformOrigin;\n        } else if (this.controlBox && props.groupable) {\n            absoluteOrigin = originalBeforeOrigin;\n        } else {\n            absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\n        }\n\n        const nextMatrix = multiplies(\n            n,\n            createOriginMatrix(absoluteOrigin.map(v => -v), n),\n            allMatrix,\n            createOriginMatrix(transformOrigin, n),\n        );\n\n        const renderPos1 = calculatePadding(nextMatrix, pos1, [-left, -top], n);\n        const renderPos2 = calculatePadding(nextMatrix, pos2, [right, -top], n);\n        const renderPos3 = calculatePadding(nextMatrix, pos3, [-left, bottom], n);\n        const renderPos4 = calculatePadding(nextMatrix, pos4, [right, bottom], n);\n\n        state.renderPoses = [\n            renderPos1,\n            renderPos2,\n            renderPos3,\n            renderPos4,\n        ];\n        state.renderLines = [\n            [renderPos1, renderPos2],\n            [renderPos2, renderPos4],\n            [renderPos4, renderPos3],\n            [renderPos3, renderPos1],\n        ];\n\n        if (zoom) {\n            const zoomOffset = zoom / 2;\n\n            state.renderLines = [\n                [\n                    calculatePadding(nextMatrix, pos1, [-left - zoomOffset, -top], n),\n                    calculatePadding(nextMatrix, pos2, [right + zoomOffset, -top], n),\n                ],\n                [\n                    calculatePadding(nextMatrix, pos2, [right, -top - zoomOffset], n),\n                    calculatePadding(nextMatrix, pos4, [right, bottom + zoomOffset], n),\n                ],\n                [\n                    calculatePadding(nextMatrix, pos4, [right + zoomOffset, bottom], n),\n                    calculatePadding(nextMatrix, pos3, [-left - zoomOffset, bottom], n),\n                ],\n                [\n                    calculatePadding(nextMatrix, pos3, [-left, bottom + zoomOffset], n),\n                    calculatePadding(nextMatrix, pos1, [-left, -top - zoomOffset], n),\n                ],\n            ];\n        }\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isTargetChanged = !equals(stateTarget, target);\n        const isChanged = isTargetChanged || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n        this._isPropTargetChanged = isTargetChanged;\n    }\n    public waitToChangeTarget(): Promise<void> {\n        return new Promise(() => { });\n    }\n    public triggerEvent(\n        name: string,\n        e: any,\n    ): any {\n        const props = this.props;\n\n        this._emitter.trigger(name, e);\n\n        if (props.parentMoveable && e.isRequest && !e.isRequestChild) {\n            return props.parentMoveable.triggerEvent(name, e, true);\n        }\n\n        const callback = (props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as any).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    public getState(): MoveableManagerState {\n        const props = this.props;\n        if (props.target || (props as any).targets?.length) {\n            this._hasFirstTarget = true;\n        }\n        const hasControlBox = this.controlBox;\n        const persistData = props.persistData;\n        const firstRenderState = props.firstRenderState;\n\n        if (firstRenderState && !hasControlBox) {\n            return firstRenderState;\n        }\n        if (!this._hasFirstTarget && persistData) {\n            const persistState = getPersistState(persistData);\n\n            if (persistState) {\n                this.updateState(persistState, false);\n                return this.state;\n            }\n        }\n        (this.state as any).isPersisted = false;\n        return this.state;\n    }\n    public updateSelectors() { }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = this.getEnabledAbles(ables);\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            if (this.isUnmounted) {\n                return;\n            }\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles(ables: Able[] = this.props.ables!) {\n        const props = this.props as any;\n\n        return ables.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        this.renderState = {};\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _getRequestStyles() {\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\n            const ableStyleNames = (able.requestStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\n\n            return [...names, ...ableStyleNames];\n        }, [...(this.props.requestStyles || [])] as Array<keyof CSSStyleDeclaration>);\n\n\n        return styleNames;\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        this._updateResizeObserver(prevProps);\n        this._updateMutationObserver(prevProps);\n    }\n    protected _updateEvents() {\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const target = this._dragTarget;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unsetGesto(this, false);\n            this.updateState({ gestos: {} });\n        }\n        if (!hasControlAble) {\n            unsetGesto(this, true);\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getControlAbleGesto(this, \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevPropTarget = this._propTarget;\n        this._prevDragTarget = this._dragTarget;\n        this._prevOriginalDragTarget = this._originalDragTarget;\n        this._prevDragArea = props.dragArea!;\n\n        this._propTarget = props.target;\n        this._originalDragTarget = props.dragTarget || props.target;\n        this._dragTarget = getRefTarget(this._originalDragTarget, true);\n\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            zoom,\n            hideDefaultLines,\n            hideChildMoveableDefaultLines,\n            parentMoveable,\n        } = props as MoveableManagerProps<GroupableProps>;\n\n        if (hideDefaultLines || (parentMoveable && hideChildMoveableDefaultLines)) {\n            return [];\n        }\n        const state = this.getState();\n        const Renderer = {\n            createElement,\n        };\n\n        return state.renderLines.map((line, i) => {\n            return renderLine(Renderer, \"\", line[0], line[1], zoom!, `render-line-${i}`);\n        });\n    }\n    private _onPreventClick = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        // removeEvent(window, \"click\", this._onPreventClick, true);\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const nextTarget = props.dragTarget || props.target;\n        const prevTarget = this._prevOriginalDragTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isDragTargetChanged = !dragArea && prevTarget !== nextTarget;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isDragTargetChanged || isDragAreaChanged || this._prevPropTarget != this._propTarget;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    private _checkUpdateRootContainer() {\n        const rootContainer = this.props.rootContainer;\n\n        if (!this._rootContainer && rootContainer) {\n            this._rootContainer = getRefTarget(rootContainer, true);\n        }\n    }\n    private _checkUpdateViewContainer() {\n        const viewContainerOption = this.props.viewContainer;\n\n        if (!this._viewContainer && viewContainerOption) {\n            this._viewContainer = getRefTarget(viewContainerOption, true);\n        }\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([\n                ...this._getAbleViewClassNames(),\n                this.isDragging() ? VIEW_DRAGGING : \"\",\n            ]);\n        }\n    }\n    private _changeAbleViewClassNames(classNames: string[]) {\n        const viewContainer = this._viewContainer!;\n        const nextClassNames = groupBy(\n            classNames.filter(Boolean),\n            el => el,\n        ).map(([className]) => className);\n        const prevClassNames = this._viewClassNames;\n\n        const {\n            removed,\n            added,\n        } = diff(prevClassNames, nextClassNames);\n\n        removed.forEach(index => {\n            removeClass(viewContainer, prevClassNames[index]);\n        });\n        added.forEach(index => {\n            addClass(viewContainer, nextClassNames[index]);\n        });\n\n        this._viewClassNames = nextClassNames;\n\n    }\n    private _getAbleViewClassNames() {\n        return (this.getEnabledAbles().map(able => {\n            return (able.viewClassName?.(this) || \"\");\n        }).join(\" \") + ` ${this._getAbleClassName(\"-view\")}`).split(/\\s+/g);\n    }\n    private _getAbleClassName(classPrefix = \"\") {\n        const ables = this.getEnabledAbles();\n\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n        const targetGestoData: Record<string, any> = targetGesto?.isFlag()\n            ? targetGesto.getEventData() : {};\n        const controlGestoData: Record<string, any> = controlGesto?.isFlag()\n            ? controlGesto.getEventData() : {};\n\n        return ables.map(able => {\n            const name = able.name;\n            let className = able.className?.(this) || \"\";\n\n            if (\n                targetGestoData[name]?.isEventStart\n                || controlGestoData[name]?.isEventStart\n            ) {\n                className += ` ${prefix(`${name}${classPrefix}-dragging`)}`;\n            }\n            return className.trim();\n        }).filter(Boolean).join(\" \");\n    }\n    private _updateResizeObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n        const win = getWindow(this.getControlBoxElement());\n\n        if (!win.ResizeObserver || !target || !props.useResizeObserver) {\n            this._reiszeObserver?.disconnect();\n            return;\n        }\n\n        if (prevProps.target === target && this._reiszeObserver) {\n            return;\n        }\n\n        const observer = new win.ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._reiszeObserver = observer;\n    }\n    private _updateMutationObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n        const win = getWindow(this.getControlBoxElement());\n\n        if (!win.MutationObserver || !target || !props.useMutationObserver) {\n            this._mutationObserver?.disconnect();\n            return;\n        }\n\n        if (prevProps.target === target && this._mutationObserver) {\n            return;\n        }\n\n        const observer = new win.MutationObserver(records => {\n            for (const mutation of records) {\n                if (mutation.type === \"attributes\" && mutation.attributeName === \"style\") {\n                    this.checkUpdateRect();\n                }\n            }\n        });\n\n        observer.observe(target!, {\n            attributes: true,\n        });\n        this._mutationObserver = observer;\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#useResizeObserver\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { minus } from \"@scena/matrix\";\nimport { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderLine } from \"../renderDirections\";\nimport { Renderer, MoveableGroupInterface, GroupableProps } from \"../types\";\nimport { flat, watchValue } from \"../utils\";\n\n\n\nexport default {\n    name: \"groupable\",\n    props: [\n        \"defaultGroupRotate\",\n        \"useDefaultGroupRotate\",\n        \"defaultGroupOrigin\",\n        \"groupable\",\n        \"groupableProps\",\n        \"targetGroups\",\n        \"hideChildMoveableDefaultLines\",\n    ] as const,\n    events: [] as const,\n    render(moveable: MoveableGroupInterface<GroupableProps>, React: Renderer): any[] {\n        const props = moveable.props;\n        let targets: Array<HTMLElement | SVGElement | undefined | null> = props.targets || [];\n\n        const { left, top, isPersisted } = moveable.getState();\n        const zoom = props.zoom || 1;\n        const renderGroupRects = moveable.renderGroupRects;\n        let persistDatChildren = props.persistData?.children || [];\n\n        if (isPersisted) {\n            targets = persistDatChildren.map(() => null);\n        } else {\n            persistDatChildren = [];\n        }\n        const parentPosition = watchValue(\n            moveable,\n            \"parentPosition\",\n            [left, top],\n            styles => styles.join(\",\"),\n        );\n        const requestStyles = watchValue(\n            moveable,\n            \"requestStyles\",\n            moveable.getRequestChildStyles(),\n            styles => styles.join(\",\"),\n        );\n\n        moveable.moveables = moveable.moveables.slice(0, targets.length);\n        return [\n            ...targets.map((target, i) => {\n                return <MoveableManager<GroupableProps>\n                    key={\"moveable\" + i}\n                    ref={refs(moveable, \"moveables\", i)}\n                    target={target}\n                    origin={false}\n                    requestStyles={requestStyles}\n                    cssStyled={props.cssStyled}\n                    customStyledMap={props.customStyledMap}\n                    useResizeObserver={props.useResizeObserver}\n                    useMutationObserver={props.useMutationObserver}\n                    hideChildMoveableDefaultLines={props.hideChildMoveableDefaultLines}\n                    parentMoveable={moveable}\n                    parentPosition={[left, top]}\n                    persistData={persistDatChildren[i]}\n                    zoom={zoom}\n                />;\n            }),\n            ...flat(renderGroupRects.map(({ pos1, pos2, pos3, pos4 }, i) => {\n                const poses = [pos1, pos2, pos3, pos4];\n\n                return [\n                    [0, 1],\n                    [1, 3],\n                    [3, 2],\n                    [2, 0],\n                ].map(([from, to], j) => {\n                    return renderLine(\n                        React,\n                        \"\",\n                        minus(poses[from], parentPosition),\n                        minus(poses[to], parentPosition),\n                        zoom,\n                        `group-rect-${i}-${j}`,\n                    );\n                });\n            })),\n        ];\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: [\n        \"clickable\",\n    ] as const,\n    events: [\n        \"click\",\n        \"clickGroup\",\n    ] as const,\n    always: true,\n    dragRelation: \"weak\",\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dragStart() {\n        return;\n    },\n    dragControlStart() {\n        return;\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.props.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.contains(inputTarget);\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            moveableTarget: moveable.props.target!,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n            moveableTarget: targets[targetIndex],\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface, Renderer } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\nimport { renderEdgeLines } from \"../renderDirections\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    css: [\n        `.edge.edgeDraggable.line {\ncursor: move;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<DraggableProps>, React: Renderer) {\n        const props = moveable.props;\n        const edge = props.edgeDraggable!;\n\n        if (!edge) {\n            return [];\n        }\n        return renderEdgeLines(\n            React,\n            \"edgeDraggable\",\n            edge,\n            moveable.getState().renderPoses,\n            props.zoom!,\n        );\n    },\n    dragCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n\n        return !props.draggable\n            && hasClass(target, prefix(\"direction\"))\n            && hasClass(target, prefix(\"edge\"))\n            && hasClass(target, prefix(\"edgeDraggable\"));\n    },\n    dragStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    drag(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n        return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroup(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: [\n        \"individualGroupable\",\n        \"individualGroupableProps\",\n    ] as const,\n    events: [] as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\nimport { camelize, pushSet } from \"@daybrush/utils\";\nimport { Able } from \"../types\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable,\n    Draggable, edgeDraggable,\n    Resizable, Scalable, Warpable, Rotatable,\n    Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\n\nexport const MOVEABLE_EVENTS = /*#__PURE__*/(MOVEABLE_ABLES as readonly Able[]).reduce((current, able) => {\n    (able.events || []).forEach(name => {\n        pushSet(current, name);\n    });\n    return current;\n}, [] as any[]) as Array<typeof MOVEABLE_ABLES[number][\"events\"][number]>;\n\nexport const MOVEABLE_PROPS = /*#__PURE__*/(MOVEABLE_ABLES as readonly Able[]).reduce((current, able) => {\n    (able.props || []).forEach(name => {\n        pushSet(current, name);\n    });\n    return current;\n}, [] as any[]) as Array<typeof MOVEABLE_ABLES[number][\"props\"][number]>;\n\n\nexport const MOVEABLE_REACT_EVENTS = /*#__PURE__*/MOVEABLE_EVENTS.map(name => {\n    return camelize(`on ${name}`);\n}) as Array<`on${Capitalize<typeof MOVEABLE_ABLES[number][\"events\"][number]>}`>;\n\n","export function solveConstantsDistance(\n    [a, b, c]: [number, number, number],\n    pos: number[],\n) {\n    return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\n\nexport function solveC(\n    [a, b]: [number, number],\n    pos: number[],\n) {\n    // ax + by + c = 0\n    // -ax -by;\n    return -a * pos[0] - b * pos[1];\n}\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, GroupRect, MoveableManagerInterface, MoveableTargetGroupsType, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getControlAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport {\n    getAbsolutePosesByState, equals, unsetGesto, rotatePosesInfo,\n    convertTransformOriginArray,\n    isDeepArrayEquals,\n    sign,\n    getRefTarget,\n} from \"./utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport { getIntersectionPointsByConstants, getMinMaxs } from \"overlap-area\";\nimport { find, isArray, throttle } from \"@daybrush/utils\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { solveC, solveConstantsDistance } from \"./Snappable/utils\";\nimport { setStoreCache } from \"./store/Store\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\n\n\nfunction getGroupRect(parentPoses: number[][][], rotation: number): GroupRect {\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let width = 0;\n    let height = 0;\n\n    if (!parentPoses.length) {\n        return {\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0,\n            width,\n            height,\n            rotation,\n        };\n    }\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        // ax = y  // -ax + y = 0 // 0 => 1\n        // -ax = y // ax + y = 0  // 0 => 3\n        const a1MinMax = [MAX_NUM, MIN_NUM];\n        const a1MinMaxPos = [[0, 0], [0, 0]];\n        const a2MinMax = [MAX_NUM, MIN_NUM];\n        const a2MinMaxPos = [[0, 0], [0, 0]];\n\n        parentPoses.forEach(poses => {\n            poses.forEach(pos => {\n\n                // const b1 = pos[1] - a1 * pos[0];\n                // const b2 = pos[1] - a2 * pos[0];\n\n                const a1Dist = solveConstantsDistance([-a1, 1, 0], pos);\n                const a2Dist = solveConstantsDistance([-a2, 1, 0], pos);\n\n                if (a1MinMax[0] > a1Dist) {\n                    a1MinMaxPos[0] = pos;\n                    a1MinMax[0] = a1Dist;\n                }\n                if (a1MinMax[1] < a1Dist) {\n                    a1MinMaxPos[1] = pos;\n                    a1MinMax[1] = a1Dist;\n                }\n                if (a2MinMax[0] > a2Dist) {\n                    a2MinMaxPos[0] = pos;\n                    a2MinMax[0] = a2Dist;\n                }\n                if (a2MinMax[1] < a2Dist) {\n                    a2MinMaxPos[1] = pos;\n                    a2MinMax[1] = a2Dist;\n                }\n            });\n        });\n\n        const [a1MinPos, a1MaxPos] = a1MinMaxPos;\n        const [a2MinPos, a2MaxPos] = a2MinMaxPos;\n\n        const minHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MinPos)];\n        const maxHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MaxPos)];\n\n        const minVerticalLine = [-a2, 1, solveC([-a2, 1], a2MinPos)];\n        const maxVerticalLine = [-a2, 1, solveC([-a2, 1], a2MaxPos)];\n\n        [pos1, pos2, pos3, pos4] = [\n            [minHorizontalLine, minVerticalLine],\n            [minHorizontalLine, maxVerticalLine],\n            [maxHorizontalLine, minVerticalLine],\n            [maxHorizontalLine, maxVerticalLine],\n        ].map(([line1, line2]) => getIntersectionPointsByConstants(line1, line2)[0]);\n\n        width = a2MinMax[1] - a2MinMax[0];\n        height = a1MinMax[1] - a1MinMax[0];\n    } else {\n        const minX = getMinPos(parentPoses, 0);\n        const minY = getMinPos(parentPoses, 1);\n        const maxX = getMaxPos(parentPoses, 0);\n        const maxY = getMaxPos(parentPoses, 1);\n\n        pos1 = [minX, minY];\n        pos2 = [maxX, minY];\n        pos3 = [minX, maxY];\n        pos4 = [maxX, maxY];\n        width = maxX - minX;\n        height = maxY - minY;\n        if (fixedRotation % 180) {\n            // 0\n            // 1 2\n            // 3 4\n            // 90\n            // 3 1\n            // 4 2\n            // 180\n            // 4 3\n            // 2 1\n            // 270\n            // 2 4\n            // 1 3\n            // 1, 2, 3,4 = 3 1 4 2\n            const changedX = [pos3, pos1, pos4, pos2];\n\n            [pos1, pos2, pos3, pos4] = changedX;\n            width = maxY - minY;\n            height = maxX - minX;\n        }\n\n    }\n    if (fixedRotation % 360 > 180) {\n        // 1 2   4 3\n        // 3 4   2 1\n        const changedX = [pos4, pos3, pos2, pos1];\n\n        [pos1, pos2, pos3, pos4] = changedX;\n    }\n    const { minX, minY, maxX, maxY } = getMinMaxs([pos1, pos2, pos3, pos4]);\n\n    return {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        minX,\n        minY,\n        maxX,\n        maxY,\n        rotation,\n    };\n}\ntype SelfGroup = Array<MoveableManager | null | SelfGroup>;\ntype CheckedMoveableManager = { finded: boolean; manager: MoveableManager };\n\nfunction findMoveableGroups(\n    moveables: CheckedMoveableManager[],\n    childTargetGroups: MoveableTargetGroupsType,\n): SelfGroup {\n    const groups = childTargetGroups.map(targetGroup => {\n        if (isArray(targetGroup)) {\n            const childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n            const length = childMoveableGroups.length;\n\n            if (length > 1) {\n                return childMoveableGroups;\n            } else if (length === 1) {\n                return childMoveableGroups[0];\n            } else {\n                return null;\n            }\n        } else {\n            const checked = find(moveables, ({ manager }) => manager.props.target === targetGroup)!;\n\n            if (checked) {\n                checked.finded = true;\n                return checked.manager;\n            }\n            return null;\n        }\n    }).filter(Boolean);\n\n    if (groups.length === 1 && isArray(groups[0])) {\n        return groups[0];\n    }\n    return groups;\n}\n\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n    public renderGroupRects: GroupRect[] = [];\n    private _targetGroups: MoveableTargetGroupsType = [];\n    private _hasFirstTargets = false;\n\n    public componentDidMount() {\n        super.componentDidMount();\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        this.updateAbles();\n    }\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        const state = this.state;\n\n        if (!this.controlBox || state.isPersisted) {\n            return;\n        }\n        setStoreCache(true);\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const props = this.props;\n        const moveables = this.moveables;\n        const target = state.target! || props.target!;\n        const checkeds = moveables.map(moveable => ({ finded: false, manager: moveable }));\n        const targetGroups = this.props.targetGroups || [];\n        const moveableGroups = findMoveableGroups(\n            checkeds,\n            targetGroups,\n        );\n        const useDefaultGroupRotate = props.useDefaultGroupRotate;\n\n        moveableGroups.push(...checkeds.filter(({ finded }) => !finded).map(({ manager }) => manager));\n\n        const renderGroupRects: GroupRect[] = [];\n        const isReset = !isTarget || (type !== \"\" && props.updateGroup);\n        let defaultGroupRotate = props.defaultGroupRotate || 0;\n\n        if (!this._hasFirstTargets) {\n            const persistedRoatation = props.persistData?.rotation;\n\n            if (persistedRoatation != null) {\n                defaultGroupRotate = persistedRoatation;\n            }\n        }\n\n        function getMoveableGroupRect(group: SelfGroup, parentRotation: number, isRoot?: boolean): GroupRect {\n            const posesRotations = group.map(moveable => {\n                if (isArray(moveable)) {\n                    const rect = getMoveableGroupRect(moveable, parentRotation);\n                    const poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n\n                    renderGroupRects.push(rect);\n                    return { poses, rotation: rect.rotation };\n                } else {\n                    return {\n                        poses: getAbsolutePosesByState(moveable!.state),\n                        rotation: moveable!.getRotation(),\n                    };\n                }\n            });\n            const rotations = posesRotations.map(({ rotation }) => rotation);\n\n            let groupRotation = 0;\n            const firstRotation = rotations[0];\n            const isSameRotation = rotations.every(nextRotation => {\n                return Math.abs(firstRotation - nextRotation) < 0.1;\n            });\n\n            if (isReset) {\n                groupRotation = !useDefaultGroupRotate && isSameRotation ? firstRotation : defaultGroupRotate;\n            } else {\n                groupRotation = !useDefaultGroupRotate && !isRoot && isSameRotation ? firstRotation : parentRotation;\n            }\n            const groupPoses = posesRotations.map(({ poses }) => poses);\n            const groupRect = getGroupRect(\n                groupPoses,\n                groupRotation,\n            );\n\n            return groupRect;\n        }\n        const rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n\n        if (isReset) {\n            // reset rotataion\n            this.rotation = rootGroupRect.rotation;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n        }\n\n\n        this._targetGroups = targetGroups;\n        this.renderGroupRects = renderGroupRects;\n        const transformOrigin = this.transformOrigin;\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const { width, height, minX, minY } = rootGroupRect;\n        const posesInfo = rotatePosesInfo(\n            [\n                [0, 0],\n                [width, 0],\n                [0, height],\n                [width, height],\n            ],\n            convertTransformOriginArray(transformOrigin, width, height),\n            this.rotation / 180 * Math.PI,\n        );\n\n        const { minX: deltaX, minY: deltaY } = getMinMaxs(posesInfo.result);\n        const rotateScale = ` rotate(${rotation}deg)`\n            + ` scale(${sign(scale[0])}, ${sign(scale[1])})`;\n        const transform = `translate(${-deltaX}px, ${-deltaY}px)${rotateScale}`;\n\n        this.controlBox.style.transform\n            = `translate3d(${minX}px, ${minY}px, ${this.props.translateZ || 0})`;\n\n        target.style.cssText += `left:0px;top:0px;`\n            + `transform-origin:${transformOrigin};`\n            + `width:${width}px;height:${height}px;`\n            + `transform: ${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getMoveableTargetInfo(\n            this.controlBox,\n            target,\n            this.controlBox,\n            this.getContainer(),\n            this._rootContainer || container,\n            [],\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        const direction = sign(scale[0] * scale[1]);\n\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        // info.left = info.left + delta[0];\n        // info.top = info.top + delta[1];\n        info.left = minX - info.left! + delta[0];\n        info.top = minY - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n        target.style.transform\n            = `translate(${-deltaX - delta[0]}px, ${-deltaY - delta[1]}px)`\n            + rotateScale;\n\n        setStoreCache();\n        this.updateState(\n            {\n                ...info,\n                posDelta: delta,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        } else {\n            this._emitter.trigger(name, e);\n        }\n    }\n    public getRequestChildStyles() {\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\n            const ableStyleNames = (able.requestChildStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\n\n            return [...names, ...ableStyleNames];\n        }, [] as Array<keyof CSSStyleDeclaration>);\n\n\n        return styleNames;\n    }\n\n    public getMoveables(): MoveableManagerInterface[] {\n        return [...this.moveables];\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._originalDragTarget = this.props.dragTarget || this.areaElement;\n        this._dragTarget = getRefTarget(this._originalDragTarget, true);\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n\n        const prevTarget = this._prevDragTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n        const targets = props.targets!;\n        const { added, changed, removed } = this.differ.update(targets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (isTargetChanged || this._prevOriginalDragTarget !== this._originalDragTarget) {\n            unsetGesto(this, false);\n            unsetGesto(this, true);\n            this.updateState({ gestos: {} });\n        }\n        if (prevTarget !== nextTarget) {\n            state.target = null;\n        }\n        if (!state.target) {\n            state.target = this.areaElement;\n            this.controlBox.style.display = \"block\";\n        }\n        if (state.target) {\n            if (!this.targetGesto) {\n                this.targetGesto = getTargetAbleGesto(this, this._dragTarget!, \"Group\");\n            }\n            if (!this.controlGesto) {\n                this.controlGesto = getControlAbleGesto(this, \"GroupControl\");\n            }\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n\n\n        if (\n            isContainerChanged\n            || isTargetChanged\n            || this.transformOrigin !== (props.defaultGroupOrigin || \"50% 50%\")\n            || changed.length\n            || targets.length && !isDeepArrayEquals(this._targetGroups, props.targetGroups || [])\n        ) {\n            this.updateRect();\n            this._hasFirstTargets = true;\n        }\n        this._isPropTargetChanged = !!isTargetChanged;\n    }\n    protected _updateObserver() { }\n}\n\n/**\n * Sets the initial rotation of the group.\n * @name Moveable.Group#defaultGroupRotate\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group.\n * @name Moveable.Group#defaultGroupOrigin\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\n\n\n/**\n * Whether to hide the line in child moveable for group corresponding to the rect of the target.\n * @name Moveable.Group#hideChildMoveableDefaultLines\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   hideChildMoveableDefaultLines: false,\n * });\n *\n * moveable.hideChildMoveableDefaultLines = true;\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, IndividualGroupableProps, MoveableManagerInterface, RectInfo, Requester } from \"./types\";\nimport { prefix } from \"./utils\";\nimport { setStoreCache } from \"./store/Store\";\nimport { find } from \"@daybrush/utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps & IndividualGroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const props = this.props;\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            persistData,\n        } = props;\n\n        let targets: Array<HTMLElement | SVGElement | null | undefined> = props.targets || [];\n        const length = targets.length;\n        const canPersist = this.isUnmounted || !length;\n        let persistDatChildren = persistData?.children ?? [];\n\n        if (canPersist && !length && persistDatChildren.length) {\n            targets = persistDatChildren.map(() => null);\n        } else if (!canPersist) {\n            persistDatChildren = [];\n        }\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                const individualProps = props.individualGroupableProps?.(target, i) ?? {};\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...props}\n                    {...individualProps}\n                    target={target}\n                    wrapperMoveable={this}\n                    isWrapperMounted={this.isMoveableMounted}\n                    persistData={persistDatChildren[i]}\n\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidMount() {}\n    public componentDidUpdate() {}\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        setStoreCache(true);\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n        setStoreCache();\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request(\n        ableName: string,\n        param: Record<string, any> = {},\n        isInstant?: boolean,\n    ): Requester {\n        const results = this.moveables.map(m => m.request(ableName, {...param, isInstant: false }, false));\n        const requestInstant = isInstant || param.isInstant;\n        const requester: Requester = {\n            request(ableParam: Record<string, any>) {\n                results.forEach(r => r.request(ableParam));\n                return this;\n            },\n            requestEnd() {\n                results.forEach(r => r.requestEnd());\n                return this;\n            },\n        };\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    public dragStart(e: MouseEvent | TouchEvent, target: EventTarget | null = e.target) {\n        const inputTarget = target as HTMLElement;\n        const childMoveable = find(this.moveables, child => {\n            const target = child.getTargets()[0];\n            const controlBoxElement = child.getControlBoxElement();\n            const dragElement = child.getDragElement();\n\n            if (!target || !dragElement) {\n                return false;\n            }\n            return dragElement === inputTarget || dragElement.contains(inputTarget)\n                || (dragElement !== target && target === inputTarget || target.contains(inputTarget))\n                || controlBoxElement === inputTarget || controlBoxElement.contains(inputTarget);\n        });\n\n        if (childMoveable) {\n            childMoveable.dragStart(e, target);\n        }\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public getDragElement() {\n        return null;\n    }\n    public getMoveables(): MoveableManagerInterface[] {\n        return [...this.moveables];\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface, MoveableRefTargetsResultType,\n    MoveableTargetGroupsType, BeforeRenderableProps, RenderableProps, MoveableManagerState,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { find, getKeys, IObject, isArray, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport { styled } from \"react-css-styled\";\nimport { getRefTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\n\nfunction getElementTargets(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n): Array<SVGElement | HTMLElement> {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            elementTargets.push(...getElementTargets(target, selectorMap));\n        } else {\n            elementTargets.push(target);\n        }\n    });\n\n    return elementTargets;\n}\n\nfunction getTargetGroups(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const targetGroups: MoveableTargetGroupsType = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                targetGroups.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            targetGroups.push(getTargetGroups(target, selectorMap));\n        } else {\n            targetGroups.push(target);\n        }\n    });\n\n    return targetGroups;\n}\n\nfunction compareRefTargets(\n    prevRefTargets: MoveableRefTargetsResultType,\n    nextRefTargets: MoveableRefTargetsResultType,\n): boolean {\n    return (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n        const nextTarget = nextRefTargets[i];\n\n        if (!target && !nextTarget) {\n            return false;\n        } else if (target != nextTarget) {\n            if (isArray(target) && isArray(nextTarget)) {\n                return compareRefTargets(target, nextTarget);\n            }\n            return true;\n        }\n        return false;\n    });\n}\n\ntype DefaultAbles = GroupableProps & IndividualGroupableProps & BeforeRenderableProps & RenderableProps;\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T> {\n    public static defaultAbles: readonly Able<any>[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: MoveableRefTargetsResultType = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    private _differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    private _elementTargets: Array<HTMLElement | SVGElement> = [];\n    private _tmpRefTargets: MoveableRefTargetsResultType = [];\n    private _tmpSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    private _onChangeTargets: (() => void) | null = null;\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const [\n            refTargets,\n            nextSelectorMap,\n        ] = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, nextSelectorMap);\n\n        let isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        this._elementTargets = elementTargets;\n\n        let firstRenderState: MoveableManagerState | null = null;\n        const prevMoveable = this.moveable;\n\n\n        const persistData = props.persistData;\n\n        if (persistData?.children) {\n            isGroup = true;\n        }\n        // Even one child is treated as a group if individualGroupable is enabled. #867\n        if (props.individualGroupable) {\n            return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}\n            />;\n        }\n        if (isGroup) {\n            const targetGroups = getTargetGroups(refTargets, nextSelectorMap);\n\n            // manager\n            if (prevMoveable && !prevMoveable.props.groupable && !(prevMoveable.props as any).individualGroupable) {\n                const target = prevMoveable.props.target!;\n\n                if (target && elementTargets.indexOf(target) > -1) {\n                    firstRenderState = { ...prevMoveable.state };\n                }\n            }\n\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                {...props.groupableProps ?? {}}\n                target={null}\n                targets={elementTargets}\n                targetGroups={targetGroups}\n                firstRenderState={firstRenderState}\n            />;\n        } else {\n            const target = elementTargets[0];\n            // manager\n            if (prevMoveable && (prevMoveable.props.groupable || (prevMoveable.props as any).individualGroupable)) {\n                const moveables = (prevMoveable as MoveableGroup | MoveableIndividualGroup).moveables || [];\n                const prevTargetMoveable = find(moveables, mv => mv.props.target === target);\n\n                if (prevTargetMoveable) {\n                    firstRenderState = { ...prevTargetMoveable.state };\n                }\n            }\n\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={target}\n                firstRenderState={firstRenderState} />;\n        }\n    }\n    public componentDidMount() {\n        this._checkChangeTargets();\n    }\n    public componentDidUpdate() {\n        this._checkChangeTargets();\n    }\n    public componentWillUnmount() {\n        this.selectorMap = {};\n        this.refTargets = [];\n    }\n    /**\n     * Get targets set in moveable through target or targets of props.\n     * @method Moveable#getTargets\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\n     * });\n     *\n     * console.log(moveable.getTargets());\n     */\n    public getTargets() {\n        return this.moveable?.getTargets() ?? [];\n    }\n    /**\n     * If the element list corresponding to the selector among the targets is changed, it is updated.\n     * @method Moveable#updateSelectors\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: \".target\",\n     * });\n     *\n     * moveable.updateSelectors();\n     */\n    public updateSelectors() {\n        this.selectorMap = {};\n        this._updateRefs();\n        this.forceUpdate();\n    }\n    /**\n     * User changes target and waits for target to change.\n     * @method Moveable#waitToChangeTarget\n     * @story combination-with-other-components--components-selecto\n     * @example\n     * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\n     *   moveable.waitToChangeTarget().then(() => {\n     *      moveable.dragStart(e, e.currentTarget);\n     *   });\n     *   moveable.target = e.currentTarget;\n     * });\n     */\n    public waitToChangeTarget(): Promise<void> {\n        // let resolvePromise: (e: OnChangeTarget) => void;\n\n        // this._onChangeTargets = () => {\n        //     this._onChangeTargets = null;\n        //     resolvePromise({\n        //         moveable: this.getManager(),\n        //         targets: this._elementTargets,\n        //     });\n        // };\n\n        // return new Promise<OnChangeTarget>(resolve => {\n        //     resolvePromise = resolve;\n        // });\n        let resolvePromise: () => void;\n\n        this._onChangeTargets = () => {\n            this._onChangeTargets = null;\n            resolvePromise();\n        };\n\n        return new Promise(resolve => {\n            resolvePromise = resolve;\n        });\n    }\n    public waitToChangeTargets(): Promise<void> {\n        return this.waitToChangeTarget();\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    public getMoveables(): MoveableManagerInterface[] {\n        return this.moveable.getMoveables();\n    }\n    public getDragElement(): HTMLElement | SVGElement | null | undefined {\n        return this.moveable.getDragElement();\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n\n        this.refTargets.forEach(function updateSelectorMap(target) {\n            if (isString(target)) {\n                const selectorTarget = selectorMap[target];\n\n                if (selectorTarget) {\n                    nextSelectorMap[target] = selectorMap[target];\n                } else if (isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                }\n            } else if (isArray(target)) {\n                target.forEach(updateSelectorMap);\n            }\n        });\n\n        this._tmpRefTargets = nextRefTargets;\n        this._tmpSelectorMap = nextSelectorMap;\n\n        return [\n            nextRefTargets,\n            nextSelectorMap,\n            !isRender && isUpdate,\n        ] as const;\n    }\n    private _checkChangeTargets() {\n        this.refTargets = this._tmpRefTargets;\n        this.selectorMap = this._tmpSelectorMap;\n\n        const { added, removed } = this._differ.update(this._elementTargets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (isTargetChanged) {\n            this.props.onChangeTargets?.({\n                moveable: this.moveable,\n                targets: this._elementTargets,\n            });\n            this._onChangeTargets?.();\n        }\n        const [\n            refTargets,\n            selectorMap,\n            isUpdate,\n        ] = this._updateRefs();\n\n        this.refTargets = refTargets;\n        this.selectorMap = selectorMap;\n\n        if (isUpdate) {\n            this.forceUpdate();\n        }\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T extends Record<string, any> = {}>(\n    ables: Array<Able<T>>,\n): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}