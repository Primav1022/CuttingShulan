{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\containers\\\\ShowClothes\\\\ClothBox2.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useCallback, useEffect, useRef, useImperativeHandle } from 'react';\nimport './ShowClothes.css';\nimport clothImageSrc from './Remove-bg.ai_1713274468747(1).png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClothBox = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  imgscale,\n  sketchDataURL,\n  patternDataURL,\n  selected,\n  spacing,\n  selectedcolor\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // const saveCanvasAsImage = useCallback(() => {\n  //     const canvas = canvasRef.current;\n  //     if (canvas) {\n  //         const imageData = canvas.toDataURL('image/png', 1.0); // Ensure you use the canvas data.\n  //         const link = document.createElement('a');\n  //         link.href = imageData;\n  //         link.download = '裙子.png';\n  //         document.body.appendChild(link);\n  //         link.click();\n  //         document.body.removeChild(link);\n  //     }\n  // }, []);\n  //\n  // useImperativeHandle(ref, () => ({\n  //     saveCanvasAsImage,\n  // }));\n\n  useEffect(() => {\n    const clothCanvas = canvasRef.current;\n    if (!clothCanvas) return;\n    const clothCtx = clothCanvas.getContext('2d');\n    const patternImage = new Image();\n    const clothImage = new Image();\n    const maskImage = new Image(); // ����ɰ�ͼ��\n    const maskDataURL = \"/image/Remove.png\";\n    const neckWidth = clothCanvas.width * 0.3; // ��ڿ��Ϊ������ȵ�30%\n    const neckHeight = clothCanvas.height * 0.1; // ��ڸ߶�Ϊ�����߶ȵ�10%\n    const neckX = (clothCanvas.width - neckWidth) / 2; // ���ˮƽ����\n    const neckY = 0; // ����ڻ�������\n\n    clothImage.onload = () => {\n      clothCanvas.width = clothImage.width;\n      clothCanvas.height = clothImage.height;\n      clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n      clothCtx.drawImage(clothImage, 0, 0);\n      clothCtx.fillStyle = selectedcolor ? selectedcolor : 'transparent'; // ��� selected Ϊ true��ʹ�� selectedColor������͸��\n      clothCtx.fillRect(neckX, neckY, neckWidth, neckHeight);\n      patternImage.onload = () => {\n        const tempCanvas = document.createElement('canvas');\n        const tempCtx = tempCanvas.getContext('2d');\n        tempCanvas.width = clothCanvas.width;\n        tempCanvas.height = clothCanvas.height;\n\n        // ����ͼ���Ŵ��ĳߴ�\n        const scaleX = tempCanvas.width / patternImage.width;\n        const scaleY = tempCanvas.height / patternImage.height;\n        const scale = Math.max(scaleX, scaleY); // ѡ��ϴ�����ű�����������������\n\n        const patternWidth = patternImage.width * scale;\n        const patternHeight = patternImage.height * scale;\n        const offsetX = (tempCanvas.width - patternWidth) / 2; // ˮƽ����\n        const offsetY = (tempCanvas.height - patternHeight) / 2; // ��ֱ����\n\n        // ����ʱ�����ϻ���ͼ��\n        tempCtx.drawImage(patternImage, offsetX, offsetY, patternWidth, patternHeight);\n\n        // ������������ͼ������������ɰ�\n        const patternMaskCanvas = document.createElement('canvas');\n        const patternMaskCtx = patternMaskCanvas.getContext('2d');\n        patternMaskCanvas.width = maskImage.width;\n        patternMaskCanvas.height = maskImage.height;\n        patternMaskCtx.drawImage(maskImage, 0, 0);\n\n        // Ӧ���ɰ浽ͼ����\n        const patternMaskImageData = patternMaskCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n        const tempImageData = tempCtx.getImageData(0, 0, tempCanvas.width, tempCanvas.height);\n        for (let i = 0; i < patternMaskImageData.data.length; i += 4) {\n          if (patternMaskImageData.data[i + 3] === 0) {\n            tempImageData.data[i + 3] = 0;\n          }\n        }\n        tempCtx.putImageData(tempImageData, 0, 0);\n\n        // ��ͼ��Ӧ�õ��·���\n        clothCtx.globalCompositeOperation = 'multiply';\n        clothCtx.drawImage(tempCanvas, 0, 0);\n\n        // ���úϳɲ���\n        clothCtx.globalCompositeOperation = 'source-over';\n      };\n      patternImage.src = patternDataURL;\n    };\n    clothImage.src = clothImageSrc;\n    maskImage.src = maskDataURL; // �����ɰ�ͼ��\n  }, [patternDataURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"cloth-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}, \"UJgi7ynoup7eqypjnwyX/s32POg=\")), \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = ClothBox;\nexport default ClothBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClothBox$forwardRef\");\n$RefreshReg$(_c2, \"ClothBox\");","map":{"version":3,"names":["React","forwardRef","useCallback","useEffect","useRef","useImperativeHandle","clothImageSrc","jsxDEV","_jsxDEV","ClothBox","_s","_c","imgscale","sketchDataURL","patternDataURL","selected","spacing","selectedcolor","ref","canvasRef","clothCanvas","current","clothCtx","getContext","patternImage","Image","clothImage","maskImage","maskDataURL","neckWidth","width","neckHeight","height","neckX","neckY","onload","clearRect","drawImage","fillStyle","fillRect","tempCanvas","document","createElement","tempCtx","scaleX","scaleY","scale","Math","max","patternWidth","patternHeight","offsetX","offsetY","patternMaskCanvas","patternMaskCtx","patternMaskImageData","getImageData","tempImageData","i","data","length","putImageData","globalCompositeOperation","src","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/containers/ShowClothes/ClothBox2.js"],"sourcesContent":["import React, { forwardRef, useCallback, useEffect, useRef, useImperativeHandle } from 'react';\r\nimport './ShowClothes.css';\r\nimport clothImageSrc from './Remove-bg.ai_1713274468747(1).png';\r\n\r\nconst ClothBox = forwardRef(({ imgscale, sketchDataURL, patternDataURL, selected, spacing,selectedcolor }, ref) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    // const saveCanvasAsImage = useCallback(() => {\r\n    //     const canvas = canvasRef.current;\r\n    //     if (canvas) {\r\n    //         const imageData = canvas.toDataURL('image/png', 1.0); // Ensure you use the canvas data.\r\n    //         const link = document.createElement('a');\r\n    //         link.href = imageData;\r\n    //         link.download = '裙子.png';\r\n    //         document.body.appendChild(link);\r\n    //         link.click();\r\n    //         document.body.removeChild(link);\r\n    //     }\r\n    // }, []);\r\n    //\r\n    // useImperativeHandle(ref, () => ({\r\n    //     saveCanvasAsImage,\r\n    // }));\r\n\r\n    useEffect(() => {\r\n        const clothCanvas = canvasRef.current;\r\n        if (!clothCanvas) return;\r\n        const clothCtx = clothCanvas.getContext('2d');\r\n        const patternImage = new Image();\r\n        const clothImage = new Image();\r\n        const maskImage = new Image(); // ����ɰ�ͼ��\r\n        const maskDataURL = \"/image/Remove.png\";\r\n        const neckWidth = clothCanvas.width * 0.3; // ��ڿ��Ϊ������ȵ�30%\r\n        const neckHeight = clothCanvas.height * 0.1; // ��ڸ߶�Ϊ�����߶ȵ�10%\r\n        const neckX = (clothCanvas.width - neckWidth) / 2; // ���ˮƽ����\r\n        const neckY = 0; // ����ڻ�������\r\n\r\n        clothImage.onload = () => {\r\n            clothCanvas.width = clothImage.width;\r\n            clothCanvas.height = clothImage.height;\r\n            clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\r\n            clothCtx.drawImage(clothImage, 0, 0);\r\n            clothCtx.fillStyle = selectedcolor ? selectedcolor : 'transparent'; // ��� selected Ϊ true��ʹ�� selectedColor������͸��\r\n            clothCtx.fillRect(neckX, neckY, neckWidth, neckHeight);\r\n\r\n            patternImage.onload = () => {\r\n                const tempCanvas = document.createElement('canvas');\r\n                const tempCtx = tempCanvas.getContext('2d');\r\n                tempCanvas.width = clothCanvas.width;\r\n                tempCanvas.height = clothCanvas.height;\r\n\r\n                // ����ͼ���Ŵ��ĳߴ�\r\n                const scaleX = tempCanvas.width / patternImage.width;\r\n                const scaleY = tempCanvas.height / patternImage.height;\r\n                const scale = Math.max(scaleX, scaleY); // ѡ��ϴ�����ű�����������������\r\n\r\n                const patternWidth = patternImage.width * scale;\r\n                const patternHeight = patternImage.height * scale;\r\n                const offsetX = (tempCanvas.width - patternWidth) / 2;  // ˮƽ����\r\n                const offsetY = (tempCanvas.height - patternHeight) / 2;  // ��ֱ����\r\n\r\n                // ����ʱ�����ϻ���ͼ��\r\n                tempCtx.drawImage(patternImage, offsetX, offsetY, patternWidth, patternHeight);\r\n\r\n                // ������������ͼ������������ɰ�\r\n                const patternMaskCanvas = document.createElement('canvas');\r\n                const patternMaskCtx = patternMaskCanvas.getContext('2d');\r\n                patternMaskCanvas.width = maskImage.width;\r\n                patternMaskCanvas.height = maskImage.height;\r\n                patternMaskCtx.drawImage(maskImage, 0, 0);\r\n\r\n                // Ӧ���ɰ浽ͼ����\r\n                const patternMaskImageData = patternMaskCtx.getImageData(0, 0, maskImage.width, maskImage.height);\r\n                const tempImageData = tempCtx.getImageData(0, 0, tempCanvas.width, tempCanvas.height);\r\n                for (let i = 0; i < patternMaskImageData.data.length; i += 4) {\r\n                    if (patternMaskImageData.data[i + 3] === 0) {\r\n                        tempImageData.data[i + 3] = 0;\r\n                    }\r\n                }\r\n                tempCtx.putImageData(tempImageData, 0, 0);\r\n\r\n                // ��ͼ��Ӧ�õ��·���\r\n                clothCtx.globalCompositeOperation = 'multiply';\r\n                clothCtx.drawImage(tempCanvas, 0, 0);\r\n\r\n                // ���úϳɲ���\r\n                clothCtx.globalCompositeOperation = 'source-over';\r\n            };\r\n            patternImage.src = patternDataURL;\r\n        };\r\n\r\n        clothImage.src = clothImageSrc;\r\n        maskImage.src = maskDataURL; // �����ɰ�ͼ��\r\n    }, [patternDataURL]);\r\n\r\n\r\n    return (\r\n        <div className=\"canvas-container\" >\r\n            <canvas ref={canvasRef} className=\"cloth-canvas\"></canvas>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ClothBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}