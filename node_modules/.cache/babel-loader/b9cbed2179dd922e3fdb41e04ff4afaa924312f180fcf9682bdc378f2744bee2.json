{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\ShowImg\\\\ShowImg.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ShowImg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShowImg = ({\n  onAddToLibrary,\n  images,\n  onRefresh,\n  showImages,\n  isClicked\n}) => {\n  _s();\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [buttonStyle, setButtonStyle] = useState({});\n  const [isZoomed, setIsZoomed] = useState(false);\n  const galleryRef = useRef(null);\n  const [isButtonsVisible, setIsButtonsVisible] = useState(true);\n  const [addedImages, setAddedImages] = useState([]);\n  const handleImageClick = (index, event) => {\n    setSelectedImg(index);\n    setIsZoomed(false);\n    setIsButtonsVisible(true);\n    const rect = event.target.getBoundingClientRect();\n    const isLeftSide = index % 2 === 0;\n    let buttonLeftStyle = isLeftSide ? rect.left - 160 + 'px' : rect.right - 10 + 'px';\n    setButtonStyle({\n      position: 'absolute',\n      top: `${rect.top}px`,\n      left: buttonLeftStyle\n    });\n  };\n  const handleZoomImage = () => {\n    if (selectedImg !== null) {\n      setIsZoomed(true);\n    }\n  };\n  const handleAddClick = () => {\n    if (onAddToLibrary && selectedImg !== null) {\n      const imageUrl = images[selectedImg];\n      if (!addedImages.includes(imageUrl)) {\n        onAddToLibrary(imageUrl);\n        setAddedImages([...addedImages, imageUrl]);\n      } else {\n        alert(\"不可重复添加\");\n      }\n    }\n  };\n  const closeZoom = () => {\n    setIsZoomed(false);\n  };\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsButtonsVisible(false);\n    };\n    const handleClickOutside = event => {\n      if (galleryRef.current && !galleryRef.current.contains(event.target)) {\n        setIsButtonsVisible(false);\n      }\n    };\n    const galleryElement = galleryRef.current;\n    galleryElement.addEventListener('scroll', handleScroll);\n    document.addEventListener('mousedown', handleClickOutside);\n    galleryElement.scrollTop = galleryElement.scrollHeight;\n    return () => {\n      galleryElement.removeEventListener('scroll', handleScroll);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    if (galleryRef.current && images.length > 0) {\n      const nodes = galleryRef.current.querySelectorAll('.image-wrapper');\n      if (nodes.length > 0) {\n        const lastImageElement = nodes[nodes.length - 1];\n        lastImageElement.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, [images.length]); // Only re-run the effect if images array length changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-gallery\",\n    ref: galleryRef,\n    children: [(images || []).map((imageURL, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-wrapper ${selectedImg === index ? 'selected' : ''}`,\n      onMouseEnter: e => handleImageClick(index, e),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageURL,\n        alt: `Gallery ${index + 1}`,\n        className: \"gallery-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)), selectedImg !== null && isButtonsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      style: buttonStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"image-button\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"120\",\n          height: \"40\",\n          viewBox: \"0 0 180 60\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"1\",\n            y: \"1\",\n            width: \"178\",\n            height: \"58\",\n            rx: \"29\",\n            fill: \"white\",\n            stroke: \"black\",\n            \"stroke-width\": \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M61.6567 39L54.9367 22.2H57.8887L61.8967 32.4C62.0887 32.896 62.2567 33.344 62.4007 33.744C62.5607 34.144 62.6967 34.512 62.8087 34.848C62.9207 35.168 63.0247 35.472 63.1207 35.76C63.2167 36.048 63.3127 36.336 63.4087 36.624L62.7847 36.648C62.8967 36.264 63.0167 35.864 63.1447 35.448C63.2727 35.032 63.4167 34.576 63.5767 34.08C63.7527 33.584 63.9607 33.024 64.2007 32.4L67.9207 22.2H70.9447L64.1767 39H61.6567ZM76.3993 39.24C75.3593 39.24 74.4072 38.952 73.5432 38.376C72.6952 37.8 72.0152 37.016 71.5032 36.024C70.9912 35.032 70.7352 33.912 70.7352 32.664C70.7352 31.4 70.9912 30.28 71.5032 29.304C72.0312 28.312 72.7352 27.536 73.6152 26.976C74.5113 26.416 75.5113 26.136 76.6153 26.136C77.2713 26.136 77.8712 26.232 78.4153 26.424C78.9593 26.616 79.4313 26.888 79.8313 27.24C80.2473 27.576 80.5833 27.968 80.8393 28.416C81.1113 28.864 81.2793 29.344 81.3433 29.856L80.7913 29.664V26.4H83.2873V39H80.7913V36L81.3673 35.832C81.2713 36.264 81.0713 36.688 80.7673 37.104C80.4793 37.504 80.1033 37.864 79.6393 38.184C79.1913 38.504 78.6873 38.76 78.1273 38.952C77.5833 39.144 77.0073 39.24 76.3993 39.24ZM77.0473 36.96C77.7993 36.96 78.4633 36.776 79.0392 36.408C79.6153 36.04 80.0633 35.536 80.3833 34.896C80.7193 34.24 80.8873 33.496 80.8873 32.664C80.8873 31.848 80.7193 31.12 80.3833 30.48C80.0633 29.84 79.6153 29.336 79.0392 28.968C78.4633 28.6 77.7993 28.416 77.0473 28.416C76.3113 28.416 75.6553 28.6 75.0793 28.968C74.5193 29.336 74.0713 29.84 73.7352 30.48C73.4152 31.12 73.2552 31.848 73.2552 32.664C73.2552 33.496 73.4152 34.24 73.7352 34.896C74.0713 35.536 74.5193 36.04 75.0793 36.408C75.6553 36.776 76.3113 36.96 77.0473 36.96ZM86.4747 39V26.4H88.9708V30.36L88.7308 29.4C88.9067 28.792 89.2027 28.24 89.6188 27.744C90.0508 27.248 90.5387 26.856 91.0827 26.568C91.6428 26.28 92.2188 26.136 92.8108 26.136C93.0828 26.136 93.3388 26.16 93.5788 26.208C93.8348 26.256 94.0347 26.312 94.1788 26.376L93.5308 29.064C93.3388 28.984 93.1228 28.92 92.8828 28.872C92.6588 28.808 92.4348 28.776 92.2108 28.776C91.7788 28.776 91.3628 28.864 90.9627 29.04C90.5788 29.2 90.2348 29.432 89.9308 29.736C89.6428 30.024 89.4108 30.368 89.2348 30.768C89.0588 31.152 88.9708 31.576 88.9708 32.04V39H86.4747ZM96.2984 39V26.4H98.7704V39H96.2984ZM97.4984 23.616C96.9704 23.616 96.5624 23.48 96.2744 23.208C95.9864 22.936 95.8424 22.552 95.8424 22.056C95.8424 21.592 95.9864 21.216 96.2744 20.928C96.5784 20.64 96.9864 20.496 97.4984 20.496C98.0264 20.496 98.4344 20.632 98.7224 20.904C99.0104 21.176 99.1544 21.56 99.1544 22.056C99.1544 22.52 99.0024 22.896 98.6984 23.184C98.4104 23.472 98.0104 23.616 97.4984 23.616ZM107.154 39.24C106.114 39.24 105.162 38.952 104.298 38.376C103.45 37.8 102.77 37.016 102.258 36.024C101.746 35.032 101.49 33.912 101.49 32.664C101.49 31.4 101.746 30.28 102.258 29.304C102.786 28.312 103.49 27.536 104.37 26.976C105.266 26.416 106.266 26.136 107.37 26.136C108.026 26.136 108.626 26.232 109.17 26.424C109.714 26.616 110.186 26.888 110.586 27.24C111.002 27.576 111.338 27.968 111.594 28.416C111.866 28.864 112.034 29.344 112.098 29.856L111.546 29.664V26.4H114.042V39H111.546V36L112.122 35.832C112.026 36.264 111.826 36.688 111.522 37.104C111.234 37.504 110.858 37.864 110.394 38.184C109.946 38.504 109.442 38.76 108.882 38.952C108.338 39.144 107.762 39.24 107.154 39.24ZM107.802 36.96C108.554 36.96 109.218 36.776 109.794 36.408C110.37 36.04 110.818 35.536 111.138 34.896C111.474 34.24 111.642 33.496 111.642 32.664C111.642 31.848 111.474 31.12 111.138 30.48C110.818 29.84 110.37 29.336 109.794 28.968C109.218 28.6 108.554 28.416 107.802 28.416C107.066 28.416 106.41 28.6 105.834 28.968C105.274 29.336 104.826 29.84 104.49 30.48C104.17 31.12 104.01 31.848 104.01 32.664C104.01 33.496 104.17 34.24 104.49 34.896C104.826 35.536 105.274 36.04 105.834 36.408C106.41 36.776 107.066 36.96 107.802 36.96ZM118.79 39V23.184H121.262V39H118.79ZM116.174 28.8V26.4H124.19V28.8H116.174ZM126.585 39V26.4H129.057V39H126.585ZM127.785 23.616C127.257 23.616 126.849 23.48 126.561 23.208C126.273 22.936 126.129 22.552 126.129 22.056C126.129 21.592 126.273 21.216 126.561 20.928C126.865 20.64 127.273 20.496 127.785 20.496C128.313 20.496 128.721 20.632 129.009 20.904C129.297 21.176 129.441 21.56 129.441 22.056C129.441 22.52 129.289 22.896 128.985 23.184C128.697 23.472 128.297 23.616 127.785 23.616ZM138.256 39.24C137.024 39.24 135.92 38.96 134.944 38.4C133.984 37.824 133.224 37.048 132.664 36.072C132.104 35.08 131.824 33.952 131.824 32.688C131.824 31.424 132.104 30.304 132.664 29.328C133.224 28.336 133.984 27.56 134.944 27C135.92 26.424 137.024 26.136 138.256 26.136C139.472 26.136 140.56 26.424 141.52 27C142.496 27.56 143.264 28.336 143.824 29.328C144.384 30.304 144.664 31.424 144.664 32.688C144.664 33.952 144.384 35.08 143.824 36.072C143.264 37.048 142.496 37.824 141.52 38.4C140.56 38.96 139.472 39.24 138.256 39.24ZM138.256 36.984C139.008 36.984 139.68 36.8 140.272 36.432C140.864 36.048 141.328 35.536 141.664 34.896C142 34.24 142.16 33.504 142.144 32.688C142.16 31.856 142 31.12 141.664 30.48C141.328 29.824 140.864 29.312 140.272 28.944C139.68 28.576 139.008 28.392 138.256 28.392C137.504 28.392 136.824 28.584 136.216 28.968C135.624 29.336 135.16 29.848 134.824 30.504C134.488 31.144 134.328 31.872 134.344 32.688C134.328 33.504 134.488 34.24 134.824 34.896C135.16 35.536 135.624 36.048 136.216 36.432C136.824 36.8 137.504 36.984 138.256 36.984ZM147.094 39V26.4H149.566V28.992L149.134 29.28C149.294 28.72 149.606 28.208 150.07 27.744C150.534 27.264 151.086 26.88 151.726 26.592C152.366 26.288 153.022 26.136 153.694 26.136C154.654 26.136 155.454 26.328 156.094 26.712C156.734 27.08 157.214 27.648 157.534 28.416C157.854 29.184 158.014 30.152 158.014 31.32V39H155.542V31.488C155.542 30.768 155.446 30.176 155.254 29.712C155.062 29.232 154.766 28.888 154.366 28.68C153.966 28.456 153.47 28.36 152.878 28.392C152.398 28.392 151.958 28.472 151.558 28.632C151.158 28.776 150.806 28.984 150.502 29.256C150.214 29.528 149.982 29.848 149.806 30.216C149.646 30.568 149.566 30.952 149.566 31.368V39H148.342C148.134 39 147.926 39 147.718 39C147.51 39 147.302 39 147.094 39Z\",\n            fill: \"#333333\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            \"fill-rule\": \"evenodd\",\n            \"clip-rule\": \"evenodd\",\n            d: \"M40.5912 23.6261C39.3176 22.7095 37.7988 22.1953 36.2304 22.1497C34.662 22.1041 33.1159 22.5292 31.7913 23.3703C30.4666 24.2113 29.4242 25.4298 28.7984 26.8687C28.1725 28.3075 27.9919 29.9008 28.2797 31.4433C28.3272 31.7204 28.2638 32.005 28.1032 32.2358C27.9427 32.4666 27.6978 32.6251 27.4215 32.677C27.1452 32.7289 26.8596 32.6702 26.6262 32.5134C26.3928 32.3566 26.2304 32.1144 26.174 31.839C25.8017 29.8466 26.0438 27.7882 26.868 25.9365C27.6922 24.0849 29.0597 22.5274 30.7892 21.4706C32.5187 20.4138 34.5285 19.9076 36.5523 20.019C38.5761 20.1305 40.5182 20.8544 42.1212 22.0947L42.9954 21.2204C43.0953 21.1203 43.2225 21.0521 43.3611 21.0244C43.4997 20.9967 43.6434 21.0107 43.774 21.0647C43.9046 21.1187 44.0163 21.2102 44.0949 21.3277C44.1735 21.4452 44.2154 21.5834 44.2154 21.7247V25.0004C44.2154 25.1898 44.1402 25.3715 44.0062 25.5055C43.8723 25.6394 43.6906 25.7147 43.5012 25.7147H40.2254C40.0844 25.7144 39.9466 25.6723 39.8294 25.5938C39.7123 25.5153 39.621 25.4039 39.567 25.2735C39.5131 25.1432 39.4989 24.9998 39.5264 24.8615C39.5538 24.7231 39.6216 24.596 39.7212 24.4961L40.5912 23.6261ZM44.5783 27.3075C44.8575 27.2549 45.1463 27.3153 45.3809 27.4755C45.6156 27.6357 45.7771 27.8826 45.8297 28.1618C46.2023 30.1544 45.9605 32.2132 45.1362 34.0652C44.312 35.9171 42.9443 37.4748 41.2145 38.5317C39.4847 39.5886 37.4745 40.0947 35.4504 39.983C33.4264 39.8713 31.4841 39.147 29.8812 37.9061L29.0069 38.7818C28.907 38.882 28.7796 38.9502 28.6409 38.9779C28.5021 39.0056 28.3583 38.9914 28.2276 38.9372C28.097 38.8831 27.9853 38.7913 27.9068 38.6736C27.8284 38.5559 27.7866 38.4176 27.7869 38.2761V35.0004C27.7869 34.811 27.8621 34.6293 27.9961 34.4953C28.13 34.3614 28.3117 34.2861 28.5012 34.2861H31.7769C31.9183 34.2859 32.0567 34.3276 32.1744 34.4061C32.2921 34.4846 32.3838 34.5962 32.438 34.7269C32.4922 34.8576 32.5063 35.0014 32.4786 35.1401C32.451 35.2788 32.3827 35.4062 32.2826 35.5061L31.4112 36.3761C32.6847 37.2927 34.2035 37.8069 35.7719 37.8525C37.3403 37.8981 38.8865 37.473 40.2111 36.632C41.5357 35.7909 42.5781 34.5724 43.2039 33.1336C43.8298 31.6947 44.0104 30.1014 43.7226 28.559C43.6965 28.4205 43.6981 28.2783 43.7271 28.1404C43.7561 28.0025 43.812 27.8717 43.8916 27.7555C43.9712 27.6392 44.073 27.5398 44.1911 27.463C44.3091 27.3861 44.4412 27.3333 44.5797 27.3075H44.5783ZM34.8312 25.7633C35.1026 24.5204 36.8697 24.5147 37.1526 25.7518L37.1669 25.8147C37.3197 26.5753 37.6988 27.2719 38.2546 27.8131C38.8104 28.3544 39.5168 28.715 40.2812 28.8475C41.5726 29.0718 41.5726 30.929 40.2797 31.1533C39.5326 31.2832 38.8406 31.6311 38.2905 32.1532C37.7405 32.6752 37.357 33.3482 37.1883 34.0875L37.1526 34.249C36.8697 35.4875 35.1026 35.479 34.8312 34.239L34.8012 34.1004C34.6387 33.3586 34.259 32.682 33.7104 32.1568C33.1619 31.6317 32.4694 31.2818 31.7212 31.1518C30.4312 30.9275 30.4312 29.0747 31.7212 28.8504C32.4669 28.7205 33.1573 28.3722 33.7048 27.8496C34.2524 27.327 34.6324 26.6535 34.7969 25.9147L34.8197 25.8133L34.8312 25.7633Z\",\n            fill: \"#333333\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"image-button\",\n        onClick: handleAddClick,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"13\",\n          height: \"13\",\n          viewBox: \"0 0 23 21\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M10.6033 0.816987C10.9701 0.0737418 12.0299 0.0737396 12.3967 0.816985L14.941 5.9722C15.0866 6.26734 15.3682 6.47191 15.6939 6.51924L21.383 7.34592C22.2033 7.46511 22.5308 8.47308 21.9373 9.05161L17.8206 13.0644C17.5849 13.2941 17.4773 13.6251 17.533 13.9495L18.5048 19.6157C18.6449 20.4326 17.7875 21.0555 17.0538 20.6698L11.9653 17.9946C11.674 17.8415 11.326 17.8415 11.0347 17.9946L5.94616 20.6698C5.21253 21.0555 4.3551 20.4326 4.49521 19.6157L5.46702 13.9495C5.52266 13.6251 5.41511 13.2941 5.17943 13.0644L1.06274 9.05161C0.469227 8.47308 0.796736 7.46511 1.61696 7.34592L7.30608 6.51924C7.63178 6.47191 7.91335 6.26734 8.05901 5.9722L10.6033 0.816987Z\",\n            fill: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), \"\\u4F5C\\u4E3A\\u7D20\\u6750\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"image-button\",\n        onClick: handleZoomImage,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"13\",\n          height: \"13\",\n          viewBox: \"0 0 20 20\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M16.2508 8.12381C16.2508 9.91652 15.6687 11.5725 14.6882 12.9161L19.6338 17.8646C20.1221 18.3528 20.1221 19.1456 19.6338 19.6338C19.1455 20.1221 18.3525 20.1221 17.8642 19.6338L12.9186 14.6853C11.5748 15.6696 9.91845 16.2476 8.1254 16.2476C3.6369 16.2476 0 12.6114 0 8.12381C0 3.63619 3.6369 0 8.1254 0C12.6139 0 16.2508 3.63619 16.2508 8.12381ZM7.18785 11.5608C7.18785 12.0803 7.60584 12.4982 8.1254 12.4982C8.64495 12.4982 9.06294 12.0803 9.06294 11.5608V9.06117H11.5631C12.0826 9.06117 12.5006 8.64326 12.5006 8.12381C12.5006 7.60435 12.0826 7.18645 11.5631 7.18645H9.06294V4.68681C9.06294 4.16736 8.64495 3.74945 8.1254 3.74945C7.60584 3.74945 7.18785 4.16736 7.18785 4.68681V7.18645H4.68773C4.16817 7.18645 3.75018 7.60435 3.75018 8.12381C3.75018 8.64326 4.16817 9.06117 4.68773 9.06117H7.18785V11.5608Z\",\n            fill: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), \"\\u653E\\u5927\\u67E5\\u770B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), isZoomed && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        onClick: closeZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoomed-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[selectedImg],\n          alt: `Zoomed ${selectedImg + 1}`,\n          className: \"zoomed-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closeZoom,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true), showImages && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"regenerate-button\",\n      onClick: onRefresh,\n      children: isClicked ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/redoafter.svg\",\n        alt: \"Icon 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/redobefor.svg\",\n        alt: \"Icon 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 72\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n};\n_s(ShowImg, \"YdvOXwkLjpP+9lqZeWMBBkDVM4g=\");\n_c = ShowImg;\nexport default ShowImg;\nvar _c;\n$RefreshReg$(_c, \"ShowImg\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowImg","onAddToLibrary","images","onRefresh","showImages","isClicked","_s","selectedImg","setSelectedImg","buttonStyle","setButtonStyle","isZoomed","setIsZoomed","galleryRef","isButtonsVisible","setIsButtonsVisible","addedImages","setAddedImages","handleImageClick","index","event","rect","target","getBoundingClientRect","isLeftSide","buttonLeftStyle","left","right","position","top","handleZoomImage","handleAddClick","imageUrl","includes","alert","closeZoom","handleScroll","handleClickOutside","current","contains","galleryElement","addEventListener","document","scrollTop","scrollHeight","removeEventListener","length","nodes","querySelectorAll","lastImageElement","scrollIntoView","behavior","className","ref","children","map","imageURL","onMouseEnter","e","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","viewBox","fill","xmlns","x","y","rx","stroke","d","onClick","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/ShowImg/ShowImg.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './ShowImg.css';\n\n\n\nconst ShowImg = ({ onAddToLibrary,images,onRefresh,showImages,isClicked }) => {\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [buttonStyle, setButtonStyle] = useState({});\n  const [isZoomed, setIsZoomed] = useState(false);\n  const galleryRef = useRef(null);\n  const [isButtonsVisible, setIsButtonsVisible] = useState(true);\n  const [addedImages, setAddedImages] = useState([]);\n  const handleImageClick = (index, event) => {\n    setSelectedImg(index);\n    setIsZoomed(false);\n    setIsButtonsVisible(true);\n    const rect = event.target.getBoundingClientRect();\n    const isLeftSide = index % 2 === 0;\n    let buttonLeftStyle = isLeftSide ? rect.left - 160 + 'px' : rect.right -10  + 'px';\n\n    setButtonStyle({\n      position: 'absolute',\n      top: `${rect.top}px`,\n      left: buttonLeftStyle,\n    });\n  };\n\n  const handleZoomImage = () => {\n    if (selectedImg !== null) {\n      setIsZoomed(true);\n    }\n  };\n\nconst handleAddClick = () => {\n  if (onAddToLibrary && selectedImg !== null) {\n    const imageUrl = images[selectedImg];\n    if (!addedImages.includes(imageUrl)) {\n      onAddToLibrary(imageUrl);\n      setAddedImages([...addedImages, imageUrl]);\n    } else {\n\n      alert(\"不可重复添加\");\n    }\n  }\n};\n\n  const closeZoom = () => {\n    setIsZoomed(false);\n  };\n\n  useEffect(() => {\n\n    const handleScroll = () => {\n      setIsButtonsVisible(false);\n    };\n\n\n    const handleClickOutside = (event) => {\n      if (galleryRef.current && !galleryRef.current.contains(event.target)) {\n        setIsButtonsVisible(false);\n      }\n    };\n\n    const galleryElement = galleryRef.current;\n\n    galleryElement.addEventListener('scroll', handleScroll);\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n\n    galleryElement.scrollTop = galleryElement.scrollHeight;\n\n\n    return () => {\n      galleryElement.removeEventListener('scroll', handleScroll);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (galleryRef.current && images.length > 0) {\n      const nodes = galleryRef.current.querySelectorAll('.image-wrapper');\n      if (nodes.length > 0) {\n        const lastImageElement = nodes[nodes.length - 1];\n        lastImageElement.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n  }, [images.length]); // Only re-run the effect if images array length changes\n\n\n  return (\n      <div className=\"image-gallery\" ref={galleryRef}>\n        {(images || []).map((imageURL, index) => (\n            <div\n                className={`image-wrapper ${selectedImg === index ? 'selected' : ''}`}\n                key={index}\n                onMouseEnter={(e) => handleImageClick(index, e)}\n            >\n              <img src={imageURL} alt={`Gallery ${index + 1}`} className=\"gallery-image\"/>\n            </div>\n        ))}\n        {selectedImg !== null && isButtonsVisible && (\n            <div className=\"buttons\" style={buttonStyle}>\n              <button className=\"image-button\">\n                <svg width=\"120\" height=\"40\" viewBox=\"0 0 180 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <rect x=\"1\" y=\"1\" width=\"178\" height=\"58\" rx=\"29\" fill=\"white\" stroke=\"black\" stroke-width=\"2\"/>\n                  <path\n                      d=\"M61.6567 39L54.9367 22.2H57.8887L61.8967 32.4C62.0887 32.896 62.2567 33.344 62.4007 33.744C62.5607 34.144 62.6967 34.512 62.8087 34.848C62.9207 35.168 63.0247 35.472 63.1207 35.76C63.2167 36.048 63.3127 36.336 63.4087 36.624L62.7847 36.648C62.8967 36.264 63.0167 35.864 63.1447 35.448C63.2727 35.032 63.4167 34.576 63.5767 34.08C63.7527 33.584 63.9607 33.024 64.2007 32.4L67.9207 22.2H70.9447L64.1767 39H61.6567ZM76.3993 39.24C75.3593 39.24 74.4072 38.952 73.5432 38.376C72.6952 37.8 72.0152 37.016 71.5032 36.024C70.9912 35.032 70.7352 33.912 70.7352 32.664C70.7352 31.4 70.9912 30.28 71.5032 29.304C72.0312 28.312 72.7352 27.536 73.6152 26.976C74.5113 26.416 75.5113 26.136 76.6153 26.136C77.2713 26.136 77.8712 26.232 78.4153 26.424C78.9593 26.616 79.4313 26.888 79.8313 27.24C80.2473 27.576 80.5833 27.968 80.8393 28.416C81.1113 28.864 81.2793 29.344 81.3433 29.856L80.7913 29.664V26.4H83.2873V39H80.7913V36L81.3673 35.832C81.2713 36.264 81.0713 36.688 80.7673 37.104C80.4793 37.504 80.1033 37.864 79.6393 38.184C79.1913 38.504 78.6873 38.76 78.1273 38.952C77.5833 39.144 77.0073 39.24 76.3993 39.24ZM77.0473 36.96C77.7993 36.96 78.4633 36.776 79.0392 36.408C79.6153 36.04 80.0633 35.536 80.3833 34.896C80.7193 34.24 80.8873 33.496 80.8873 32.664C80.8873 31.848 80.7193 31.12 80.3833 30.48C80.0633 29.84 79.6153 29.336 79.0392 28.968C78.4633 28.6 77.7993 28.416 77.0473 28.416C76.3113 28.416 75.6553 28.6 75.0793 28.968C74.5193 29.336 74.0713 29.84 73.7352 30.48C73.4152 31.12 73.2552 31.848 73.2552 32.664C73.2552 33.496 73.4152 34.24 73.7352 34.896C74.0713 35.536 74.5193 36.04 75.0793 36.408C75.6553 36.776 76.3113 36.96 77.0473 36.96ZM86.4747 39V26.4H88.9708V30.36L88.7308 29.4C88.9067 28.792 89.2027 28.24 89.6188 27.744C90.0508 27.248 90.5387 26.856 91.0827 26.568C91.6428 26.28 92.2188 26.136 92.8108 26.136C93.0828 26.136 93.3388 26.16 93.5788 26.208C93.8348 26.256 94.0347 26.312 94.1788 26.376L93.5308 29.064C93.3388 28.984 93.1228 28.92 92.8828 28.872C92.6588 28.808 92.4348 28.776 92.2108 28.776C91.7788 28.776 91.3628 28.864 90.9627 29.04C90.5788 29.2 90.2348 29.432 89.9308 29.736C89.6428 30.024 89.4108 30.368 89.2348 30.768C89.0588 31.152 88.9708 31.576 88.9708 32.04V39H86.4747ZM96.2984 39V26.4H98.7704V39H96.2984ZM97.4984 23.616C96.9704 23.616 96.5624 23.48 96.2744 23.208C95.9864 22.936 95.8424 22.552 95.8424 22.056C95.8424 21.592 95.9864 21.216 96.2744 20.928C96.5784 20.64 96.9864 20.496 97.4984 20.496C98.0264 20.496 98.4344 20.632 98.7224 20.904C99.0104 21.176 99.1544 21.56 99.1544 22.056C99.1544 22.52 99.0024 22.896 98.6984 23.184C98.4104 23.472 98.0104 23.616 97.4984 23.616ZM107.154 39.24C106.114 39.24 105.162 38.952 104.298 38.376C103.45 37.8 102.77 37.016 102.258 36.024C101.746 35.032 101.49 33.912 101.49 32.664C101.49 31.4 101.746 30.28 102.258 29.304C102.786 28.312 103.49 27.536 104.37 26.976C105.266 26.416 106.266 26.136 107.37 26.136C108.026 26.136 108.626 26.232 109.17 26.424C109.714 26.616 110.186 26.888 110.586 27.24C111.002 27.576 111.338 27.968 111.594 28.416C111.866 28.864 112.034 29.344 112.098 29.856L111.546 29.664V26.4H114.042V39H111.546V36L112.122 35.832C112.026 36.264 111.826 36.688 111.522 37.104C111.234 37.504 110.858 37.864 110.394 38.184C109.946 38.504 109.442 38.76 108.882 38.952C108.338 39.144 107.762 39.24 107.154 39.24ZM107.802 36.96C108.554 36.96 109.218 36.776 109.794 36.408C110.37 36.04 110.818 35.536 111.138 34.896C111.474 34.24 111.642 33.496 111.642 32.664C111.642 31.848 111.474 31.12 111.138 30.48C110.818 29.84 110.37 29.336 109.794 28.968C109.218 28.6 108.554 28.416 107.802 28.416C107.066 28.416 106.41 28.6 105.834 28.968C105.274 29.336 104.826 29.84 104.49 30.48C104.17 31.12 104.01 31.848 104.01 32.664C104.01 33.496 104.17 34.24 104.49 34.896C104.826 35.536 105.274 36.04 105.834 36.408C106.41 36.776 107.066 36.96 107.802 36.96ZM118.79 39V23.184H121.262V39H118.79ZM116.174 28.8V26.4H124.19V28.8H116.174ZM126.585 39V26.4H129.057V39H126.585ZM127.785 23.616C127.257 23.616 126.849 23.48 126.561 23.208C126.273 22.936 126.129 22.552 126.129 22.056C126.129 21.592 126.273 21.216 126.561 20.928C126.865 20.64 127.273 20.496 127.785 20.496C128.313 20.496 128.721 20.632 129.009 20.904C129.297 21.176 129.441 21.56 129.441 22.056C129.441 22.52 129.289 22.896 128.985 23.184C128.697 23.472 128.297 23.616 127.785 23.616ZM138.256 39.24C137.024 39.24 135.92 38.96 134.944 38.4C133.984 37.824 133.224 37.048 132.664 36.072C132.104 35.08 131.824 33.952 131.824 32.688C131.824 31.424 132.104 30.304 132.664 29.328C133.224 28.336 133.984 27.56 134.944 27C135.92 26.424 137.024 26.136 138.256 26.136C139.472 26.136 140.56 26.424 141.52 27C142.496 27.56 143.264 28.336 143.824 29.328C144.384 30.304 144.664 31.424 144.664 32.688C144.664 33.952 144.384 35.08 143.824 36.072C143.264 37.048 142.496 37.824 141.52 38.4C140.56 38.96 139.472 39.24 138.256 39.24ZM138.256 36.984C139.008 36.984 139.68 36.8 140.272 36.432C140.864 36.048 141.328 35.536 141.664 34.896C142 34.24 142.16 33.504 142.144 32.688C142.16 31.856 142 31.12 141.664 30.48C141.328 29.824 140.864 29.312 140.272 28.944C139.68 28.576 139.008 28.392 138.256 28.392C137.504 28.392 136.824 28.584 136.216 28.968C135.624 29.336 135.16 29.848 134.824 30.504C134.488 31.144 134.328 31.872 134.344 32.688C134.328 33.504 134.488 34.24 134.824 34.896C135.16 35.536 135.624 36.048 136.216 36.432C136.824 36.8 137.504 36.984 138.256 36.984ZM147.094 39V26.4H149.566V28.992L149.134 29.28C149.294 28.72 149.606 28.208 150.07 27.744C150.534 27.264 151.086 26.88 151.726 26.592C152.366 26.288 153.022 26.136 153.694 26.136C154.654 26.136 155.454 26.328 156.094 26.712C156.734 27.08 157.214 27.648 157.534 28.416C157.854 29.184 158.014 30.152 158.014 31.32V39H155.542V31.488C155.542 30.768 155.446 30.176 155.254 29.712C155.062 29.232 154.766 28.888 154.366 28.68C153.966 28.456 153.47 28.36 152.878 28.392C152.398 28.392 151.958 28.472 151.558 28.632C151.158 28.776 150.806 28.984 150.502 29.256C150.214 29.528 149.982 29.848 149.806 30.216C149.646 30.568 149.566 30.952 149.566 31.368V39H148.342C148.134 39 147.926 39 147.718 39C147.51 39 147.302 39 147.094 39Z\"\n                      fill=\"#333333\"/>\n                  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                        d=\"M40.5912 23.6261C39.3176 22.7095 37.7988 22.1953 36.2304 22.1497C34.662 22.1041 33.1159 22.5292 31.7913 23.3703C30.4666 24.2113 29.4242 25.4298 28.7984 26.8687C28.1725 28.3075 27.9919 29.9008 28.2797 31.4433C28.3272 31.7204 28.2638 32.005 28.1032 32.2358C27.9427 32.4666 27.6978 32.6251 27.4215 32.677C27.1452 32.7289 26.8596 32.6702 26.6262 32.5134C26.3928 32.3566 26.2304 32.1144 26.174 31.839C25.8017 29.8466 26.0438 27.7882 26.868 25.9365C27.6922 24.0849 29.0597 22.5274 30.7892 21.4706C32.5187 20.4138 34.5285 19.9076 36.5523 20.019C38.5761 20.1305 40.5182 20.8544 42.1212 22.0947L42.9954 21.2204C43.0953 21.1203 43.2225 21.0521 43.3611 21.0244C43.4997 20.9967 43.6434 21.0107 43.774 21.0647C43.9046 21.1187 44.0163 21.2102 44.0949 21.3277C44.1735 21.4452 44.2154 21.5834 44.2154 21.7247V25.0004C44.2154 25.1898 44.1402 25.3715 44.0062 25.5055C43.8723 25.6394 43.6906 25.7147 43.5012 25.7147H40.2254C40.0844 25.7144 39.9466 25.6723 39.8294 25.5938C39.7123 25.5153 39.621 25.4039 39.567 25.2735C39.5131 25.1432 39.4989 24.9998 39.5264 24.8615C39.5538 24.7231 39.6216 24.596 39.7212 24.4961L40.5912 23.6261ZM44.5783 27.3075C44.8575 27.2549 45.1463 27.3153 45.3809 27.4755C45.6156 27.6357 45.7771 27.8826 45.8297 28.1618C46.2023 30.1544 45.9605 32.2132 45.1362 34.0652C44.312 35.9171 42.9443 37.4748 41.2145 38.5317C39.4847 39.5886 37.4745 40.0947 35.4504 39.983C33.4264 39.8713 31.4841 39.147 29.8812 37.9061L29.0069 38.7818C28.907 38.882 28.7796 38.9502 28.6409 38.9779C28.5021 39.0056 28.3583 38.9914 28.2276 38.9372C28.097 38.8831 27.9853 38.7913 27.9068 38.6736C27.8284 38.5559 27.7866 38.4176 27.7869 38.2761V35.0004C27.7869 34.811 27.8621 34.6293 27.9961 34.4953C28.13 34.3614 28.3117 34.2861 28.5012 34.2861H31.7769C31.9183 34.2859 32.0567 34.3276 32.1744 34.4061C32.2921 34.4846 32.3838 34.5962 32.438 34.7269C32.4922 34.8576 32.5063 35.0014 32.4786 35.1401C32.451 35.2788 32.3827 35.4062 32.2826 35.5061L31.4112 36.3761C32.6847 37.2927 34.2035 37.8069 35.7719 37.8525C37.3403 37.8981 38.8865 37.473 40.2111 36.632C41.5357 35.7909 42.5781 34.5724 43.2039 33.1336C43.8298 31.6947 44.0104 30.1014 43.7226 28.559C43.6965 28.4205 43.6981 28.2783 43.7271 28.1404C43.7561 28.0025 43.812 27.8717 43.8916 27.7555C43.9712 27.6392 44.073 27.5398 44.1911 27.463C44.3091 27.3861 44.4412 27.3333 44.5797 27.3075H44.5783ZM34.8312 25.7633C35.1026 24.5204 36.8697 24.5147 37.1526 25.7518L37.1669 25.8147C37.3197 26.5753 37.6988 27.2719 38.2546 27.8131C38.8104 28.3544 39.5168 28.715 40.2812 28.8475C41.5726 29.0718 41.5726 30.929 40.2797 31.1533C39.5326 31.2832 38.8406 31.6311 38.2905 32.1532C37.7405 32.6752 37.357 33.3482 37.1883 34.0875L37.1526 34.249C36.8697 35.4875 35.1026 35.479 34.8312 34.239L34.8012 34.1004C34.6387 33.3586 34.259 32.682 33.7104 32.1568C33.1619 31.6317 32.4694 31.2818 31.7212 31.1518C30.4312 30.9275 30.4312 29.0747 31.7212 28.8504C32.4669 28.7205 33.1573 28.3722 33.7048 27.8496C34.2524 27.327 34.6324 26.6535 34.7969 25.9147L34.8197 25.8133L34.8312 25.7633Z\"\n                        fill=\"#333333\"/>\n                </svg>\n\n              </button>\n              <button className=\"image-button\" onClick={handleAddClick}>\n                <svg width=\"13\" height=\"13\" viewBox=\"0 0 23 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                      d=\"M10.6033 0.816987C10.9701 0.0737418 12.0299 0.0737396 12.3967 0.816985L14.941 5.9722C15.0866 6.26734 15.3682 6.47191 15.6939 6.51924L21.383 7.34592C22.2033 7.46511 22.5308 8.47308 21.9373 9.05161L17.8206 13.0644C17.5849 13.2941 17.4773 13.6251 17.533 13.9495L18.5048 19.6157C18.6449 20.4326 17.7875 21.0555 17.0538 20.6698L11.9653 17.9946C11.674 17.8415 11.326 17.8415 11.0347 17.9946L5.94616 20.6698C5.21253 21.0555 4.3551 20.4326 4.49521 19.6157L5.46702 13.9495C5.52266 13.6251 5.41511 13.2941 5.17943 13.0644L1.06274 9.05161C0.469227 8.47308 0.796736 7.46511 1.61696 7.34592L7.30608 6.51924C7.63178 6.47191 7.91335 6.26734 8.05901 5.9722L10.6033 0.816987Z\"\n                      fill=\"currentColor\"/>\n                </svg>\n                作为素材\n              </button>\n              <button className=\"image-button\" onClick={handleZoomImage}>\n                <svg width=\"13\" height=\"13\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                      d=\"M16.2508 8.12381C16.2508 9.91652 15.6687 11.5725 14.6882 12.9161L19.6338 17.8646C20.1221 18.3528 20.1221 19.1456 19.6338 19.6338C19.1455 20.1221 18.3525 20.1221 17.8642 19.6338L12.9186 14.6853C11.5748 15.6696 9.91845 16.2476 8.1254 16.2476C3.6369 16.2476 0 12.6114 0 8.12381C0 3.63619 3.6369 0 8.1254 0C12.6139 0 16.2508 3.63619 16.2508 8.12381ZM7.18785 11.5608C7.18785 12.0803 7.60584 12.4982 8.1254 12.4982C8.64495 12.4982 9.06294 12.0803 9.06294 11.5608V9.06117H11.5631C12.0826 9.06117 12.5006 8.64326 12.5006 8.12381C12.5006 7.60435 12.0826 7.18645 11.5631 7.18645H9.06294V4.68681C9.06294 4.16736 8.64495 3.74945 8.1254 3.74945C7.60584 3.74945 7.18785 4.16736 7.18785 4.68681V7.18645H4.68773C4.16817 7.18645 3.75018 7.60435 3.75018 8.12381C3.75018 8.64326 4.16817 9.06117 4.68773 9.06117H7.18785V11.5608Z\"\n                      fill=\"currentColor\"/>\n                </svg>\n                放大查看\n              </button>\n            </div>\n        )}\n        {isZoomed && (\n            <>\n              <div className=\"overlay\" onClick={closeZoom}></div>\n              <div className=\"zoomed-image-container\">\n                <img\n                    src={images[selectedImg]}\n                    alt={`Zoomed ${selectedImg + 1}`}\n                    className=\"zoomed-image\"\n                />\n                <button className=\"close-button\" onClick={closeZoom}>X</button>\n              </div>\n            </>\n        )}\n        {showImages && <button className=\"regenerate-button\" onClick={onRefresh}>\n          {isClicked ? <img src=\"/icon/redoafter.svg\" alt=\"Icon 1\"/> : <img src=\"/icon/redobefor.svg\" alt=\"Icon 2\"/>}\n        </button>}\n      </div>\n\n  );\n};\n\nexport default ShowImg;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC,cAAc;EAACC,MAAM;EAACC,SAAS;EAACC,UAAU;EAACC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMkB,UAAU,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMuB,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACzCZ,cAAc,CAACW,KAAK,CAAC;IACrBP,WAAW,CAAC,KAAK,CAAC;IAClBG,mBAAmB,CAAC,IAAI,CAAC;IACzB,MAAMM,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,qBAAqB,CAAC,CAAC;IACjD,MAAMC,UAAU,GAAGL,KAAK,GAAG,CAAC,KAAK,CAAC;IAClC,IAAIM,eAAe,GAAGD,UAAU,GAAGH,IAAI,CAACK,IAAI,GAAG,GAAG,GAAG,IAAI,GAAGL,IAAI,CAACM,KAAK,GAAE,EAAE,GAAI,IAAI;IAElFjB,cAAc,CAAC;MACbkB,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAG,GAAER,IAAI,CAACQ,GAAI,IAAG;MACpBH,IAAI,EAAED;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIvB,WAAW,KAAK,IAAI,EAAE;MACxBK,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAEH,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI9B,cAAc,IAAIM,WAAW,KAAK,IAAI,EAAE;MAC1C,MAAMyB,QAAQ,GAAG9B,MAAM,CAACK,WAAW,CAAC;MACpC,IAAI,CAACS,WAAW,CAACiB,QAAQ,CAACD,QAAQ,CAAC,EAAE;QACnC/B,cAAc,CAAC+B,QAAQ,CAAC;QACxBf,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEgB,QAAQ,CAAC,CAAC;MAC5C,CAAC,MAAM;QAELE,KAAK,CAAC,QAAQ,CAAC;MACjB;IACF;EACF,CAAC;EAEC,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBvB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAEDnB,SAAS,CAAC,MAAM;IAEd,MAAM2C,YAAY,GAAGA,CAAA,KAAM;MACzBrB,mBAAmB,CAAC,KAAK,CAAC;IAC5B,CAAC;IAGD,MAAMsB,kBAAkB,GAAIjB,KAAK,IAAK;MACpC,IAAIP,UAAU,CAACyB,OAAO,IAAI,CAACzB,UAAU,CAACyB,OAAO,CAACC,QAAQ,CAACnB,KAAK,CAACE,MAAM,CAAC,EAAE;QACpEP,mBAAmB,CAAC,KAAK,CAAC;MAC5B;IACF,CAAC;IAED,MAAMyB,cAAc,GAAG3B,UAAU,CAACyB,OAAO;IAEzCE,cAAc,CAACC,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IAGvDM,QAAQ,CAACD,gBAAgB,CAAC,WAAW,EAAEJ,kBAAkB,CAAC;IAG1DG,cAAc,CAACG,SAAS,GAAGH,cAAc,CAACI,YAAY;IAGtD,OAAO,MAAM;MACXJ,cAAc,CAACK,mBAAmB,CAAC,QAAQ,EAAET,YAAY,CAAC;MAC1DM,QAAQ,CAACG,mBAAmB,CAAC,WAAW,EAAER,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN5C,SAAS,CAAC,MAAM;IACd,IAAIoB,UAAU,CAACyB,OAAO,IAAIpC,MAAM,CAAC4C,MAAM,GAAG,CAAC,EAAE;MAC3C,MAAMC,KAAK,GAAGlC,UAAU,CAACyB,OAAO,CAACU,gBAAgB,CAAC,gBAAgB,CAAC;MACnE,IAAID,KAAK,CAACD,MAAM,GAAG,CAAC,EAAE;QACpB,MAAMG,gBAAgB,GAAGF,KAAK,CAACA,KAAK,CAACD,MAAM,GAAG,CAAC,CAAC;QAChDG,gBAAgB,CAACC,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MACzD;IACF;EACF,CAAC,EAAE,CAACjD,MAAM,CAAC4C,MAAM,CAAC,CAAC,CAAC,CAAC;;EAGrB,oBACIjD,OAAA;IAAKuD,SAAS,EAAC,eAAe;IAACC,GAAG,EAAExC,UAAW;IAAAyC,QAAA,GAC5C,CAACpD,MAAM,IAAI,EAAE,EAAEqD,GAAG,CAAC,CAACC,QAAQ,EAAErC,KAAK,kBAChCtB,OAAA;MACIuD,SAAS,EAAG,iBAAgB7C,WAAW,KAAKY,KAAK,GAAG,UAAU,GAAG,EAAG,EAAE;MAEtEsC,YAAY,EAAGC,CAAC,IAAKxC,gBAAgB,CAACC,KAAK,EAAEuC,CAAC,CAAE;MAAAJ,QAAA,eAElDzD,OAAA;QAAK8D,GAAG,EAAEH,QAAS;QAACI,GAAG,EAAG,WAAUzC,KAAK,GAAG,CAAE,EAAE;QAACiC,SAAS,EAAC;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,GAHrE7C,KAAK;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIT,CACR,CAAC,EACDzD,WAAW,KAAK,IAAI,IAAIO,gBAAgB,iBACrCjB,OAAA;MAAKuD,SAAS,EAAC,SAAS;MAACa,KAAK,EAAExD,WAAY;MAAA6C,QAAA,gBAC1CzD,OAAA;QAAQuD,SAAS,EAAC,cAAc;QAAAE,QAAA,eAC9BzD,OAAA;UAAKqE,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC,IAAI;UAACC,OAAO,EAAC,YAAY;UAACC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAC,4BAA4B;UAAAhB,QAAA,gBAC9FzD,OAAA;YAAM0E,CAAC,EAAC,GAAG;YAACC,CAAC,EAAC,GAAG;YAACN,KAAK,EAAC,KAAK;YAACC,MAAM,EAAC,IAAI;YAACM,EAAE,EAAC,IAAI;YAACJ,IAAI,EAAC,OAAO;YAACK,MAAM,EAAC,OAAO;YAAC,gBAAa;UAAG;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAChGnE,OAAA;YACI8E,CAAC,EAAC,i8LAAi8L;YACn8LN,IAAI,EAAC;UAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACpBnE,OAAA;YAAM,aAAU,SAAS;YAAC,aAAU,SAAS;YACvC8E,CAAC,EAAC,w6FAAw6F;YAC16FN,IAAI,EAAC;UAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC,eACTnE,OAAA;QAAQuD,SAAS,EAAC,cAAc;QAACwB,OAAO,EAAE7C,cAAe;QAAAuB,QAAA,gBACvDzD,OAAA;UAAKqE,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAACC,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAC,4BAA4B;UAAAhB,QAAA,eAC5FzD,OAAA;YACI8E,CAAC,EAAC,opBAAopB;YACtpBN,IAAI,EAAC;UAAc;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,4BAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnE,OAAA;QAAQuD,SAAS,EAAC,cAAc;QAACwB,OAAO,EAAE9C,eAAgB;QAAAwB,QAAA,gBACxDzD,OAAA;UAAKqE,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAACC,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAC,4BAA4B;UAAAhB,QAAA,eAC5FzD,OAAA;YACI8E,CAAC,EAAC,0yBAA0yB;YAC5yBN,IAAI,EAAC;UAAc;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,4BAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR,EACArD,QAAQ,iBACLd,OAAA,CAAAE,SAAA;MAAAuD,QAAA,gBACEzD,OAAA;QAAKuD,SAAS,EAAC,SAAS;QAACwB,OAAO,EAAEzC;MAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnDnE,OAAA;QAAKuD,SAAS,EAAC,wBAAwB;QAAAE,QAAA,gBACrCzD,OAAA;UACI8D,GAAG,EAAEzD,MAAM,CAACK,WAAW,CAAE;UACzBqD,GAAG,EAAG,UAASrD,WAAW,GAAG,CAAE,EAAE;UACjC6C,SAAS,EAAC;QAAc;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACFnE,OAAA;UAAQuD,SAAS,EAAC,cAAc;UAACwB,OAAO,EAAEzC,SAAU;UAAAmB,QAAA,EAAC;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA,eACN,CACL,EACA5D,UAAU,iBAAIP,OAAA;MAAQuD,SAAS,EAAC,mBAAmB;MAACwB,OAAO,EAAEzE,SAAU;MAAAmD,QAAA,EACrEjD,SAAS,gBAAGR,OAAA;QAAK8D,GAAG,EAAC,qBAAqB;QAACC,GAAG,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAAGnE,OAAA;QAAK8D,GAAG,EAAC,qBAAqB;QAACC,GAAG,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGZ,CAAC;AAAC1D,EAAA,CApJIN,OAAO;AAAA6E,EAAA,GAAP7E,OAAO;AAsJb,eAAeA,OAAO;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}