{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\containers\\\\Makeunit\\\\Makeunit.js\";\nimport React, { useState, useEffect } from 'react';\nimport StepBar from '../../components/StepBar/StepBar';\nimport MaterialLibrary from '../../components/MaterialLibrary/MaterialLibrary';\nimport SketchBox from '../../components/SketchBox/SketchBox';\nimport './Makeunit.css';\nimport FabricCanvas from \"../../components/SketchBox/remake\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Makeunit = props => {\n  // const { currentStep, handleNextStep, handlePrevStep, selectedMaterials, onAddMaterial, onSaveSketch } = props;\n  // const [targets, setTargets] = useState(() => {\n  //   const savedTargets = sessionStorage.getItem('sketchTargets');\n  //   return savedTargets ? JSON.parse(savedTargets) : [];\n  // });\n  //\n  // useEffect(() => {\n  //   sessionStorage.setItem('sketchTargets', JSON.stringify(targets));\n  // }, [targets]);\n  //\n  // useEffect(() => {\n  //   renderCanvas();\n  // }, [targets]); // �������а���targets������ÿ��targets����ʱ�����ᴥ����useEffect\n\n  // function renderCanvas() {\n  //   const sketchBox = document.querySelector('.sketch-box');\n  //   if (!sketchBox) return; // ȷ��sketchBox�Ѿ�����Ⱦ\n  //\n  //   const canvas = document.createElement('canvas');\n  //   const ctx = canvas.getContext('2d');\n  //   //\n  //   // canvas.width = sketchBox.offsetWidth;\n  //   // canvas.height = sketchBox.offsetHeight;\n  //\n  //   canvas.width = 512;\n  //   canvas.height = 512;\n\n  // const drawImageOnCanvas = (target) => new Promise((resolve) => {\n  //   const img = new Image();\n  //   img.src = target.src;\n  //   img.onload = () => {\n  //     ctx.save();\n  //     ctx.translate(target.x + target.width / 2, target.y + target.height / 2);\n  //     ctx.rotate(target.rotate * Math.PI / 180);\n  //     // ����ͼ���Ƿ���ȫ��������\n  //     const halfWidth = target.width / 2;\n  //     const halfHeight = target.height / 2;\n  //\n  //       ctx.drawImage(img, -halfWidth, -halfHeight, target.width, target.height);\n  //\n  //     ctx.restore();\n  //     resolve();\n  //   };\n  // });\n  //\n  //   Promise.all(targets.map(drawImageOnCanvas)).then(() => {\n  //     const dataURL = canvas.toDataURL('image/png', 1);\n  //     onSaveSketch(dataURL); // ��dataURL����������������������\n  //   });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(StepBar, {\n        currentStep: currentStep,\n        handleNextStep: handleNextStep,\n        handlePrevStep: handlePrevStep,\n        onSavePattern: renderCanvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bgcolor\",\n          children: /*#__PURE__*/_jsxDEV(FabricCanvas, {\n            targets: targets,\n            setTargets: setTargets\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unitbottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: /*#__PURE__*/_jsxDEV(MaterialLibrary, {\n        materials: selectedMaterials,\n        onAddMaterial: onAddMaterial\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n_c = Makeunit;\nexport default Makeunit;\nvar _c;\n$RefreshReg$(_c, \"Makeunit\");","map":{"version":3,"names":["React","useState","useEffect","StepBar","MaterialLibrary","SketchBox","FabricCanvas","jsxDEV","_jsxDEV","Makeunit","props","className","children","currentStep","handleNextStep","handlePrevStep","onSavePattern","renderCanvas","fileName","_jsxFileName","lineNumber","columnNumber","targets","setTargets","materials","selectedMaterials","onAddMaterial","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/containers/Makeunit/Makeunit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport StepBar from '../../components/StepBar/StepBar';\r\nimport MaterialLibrary from '../../components/MaterialLibrary/MaterialLibrary';\r\nimport SketchBox from '../../components/SketchBox/SketchBox';\r\nimport './Makeunit.css';\r\nimport FabricCanvas from \"../../components/SketchBox/remake\";\r\n\r\nconst Makeunit = (props) => {\r\n  // const { currentStep, handleNextStep, handlePrevStep, selectedMaterials, onAddMaterial, onSaveSketch } = props;\r\n  // const [targets, setTargets] = useState(() => {\r\n  //   const savedTargets = sessionStorage.getItem('sketchTargets');\r\n  //   return savedTargets ? JSON.parse(savedTargets) : [];\r\n  // });\r\n  //\r\n  // useEffect(() => {\r\n  //   sessionStorage.setItem('sketchTargets', JSON.stringify(targets));\r\n  // }, [targets]);\r\n  //\r\n  // useEffect(() => {\r\n  //   renderCanvas();\r\n  // }, [targets]); // �������а���targets������ÿ��targets����ʱ�����ᴥ����useEffect\r\n\r\n  // function renderCanvas() {\r\n  //   const sketchBox = document.querySelector('.sketch-box');\r\n  //   if (!sketchBox) return; // ȷ��sketchBox�Ѿ�����Ⱦ\r\n  //\r\n  //   const canvas = document.createElement('canvas');\r\n  //   const ctx = canvas.getContext('2d');\r\n  //   //\r\n  //   // canvas.width = sketchBox.offsetWidth;\r\n  //   // canvas.height = sketchBox.offsetHeight;\r\n  //\r\n  //   canvas.width = 512;\r\n  //   canvas.height = 512;\r\n\r\n    // const drawImageOnCanvas = (target) => new Promise((resolve) => {\r\n    //   const img = new Image();\r\n    //   img.src = target.src;\r\n    //   img.onload = () => {\r\n    //     ctx.save();\r\n    //     ctx.translate(target.x + target.width / 2, target.y + target.height / 2);\r\n    //     ctx.rotate(target.rotate * Math.PI / 180);\r\n    //     // ����ͼ���Ƿ���ȫ��������\r\n    //     const halfWidth = target.width / 2;\r\n    //     const halfHeight = target.height / 2;\r\n    //\r\n    //       ctx.drawImage(img, -halfWidth, -halfHeight, target.width, target.height);\r\n    //\r\n    //     ctx.restore();\r\n    //     resolve();\r\n    //   };\r\n    // });\r\n  //\r\n  //   Promise.all(targets.map(drawImageOnCanvas)).then(() => {\r\n  //     const dataURL = canvas.toDataURL('image/png', 1);\r\n  //     onSaveSketch(dataURL); // ��dataURL����������������������\r\n  //   });\r\n  // }\r\n\r\n  return (\r\n      <div className=\"container\">\r\n        <div className=\"left-side\">\r\n          <StepBar currentStep={currentStep} handleNextStep={handleNextStep} handlePrevStep={handlePrevStep} onSavePattern={renderCanvas} />\r\n          <div className=\"middle\">\r\n            <div className=\"bgcolor\">\r\n            <FabricCanvas targets={targets} setTargets={setTargets} />\r\n            </div>\r\n          </div>\r\n          <div className=\"unitbottom\"></div>\r\n        </div>\r\n        <div className=\"right-side\">\r\n          <MaterialLibrary materials={selectedMaterials} onAddMaterial={onAddMaterial} />\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Makeunit;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,eAAe,MAAM,kDAAkD;AAC9E,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAO,gBAAgB;AACvB,OAAOC,YAAY,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACF;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIF,OAAA;IAAKG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBJ,OAAA;MAAKG,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBJ,OAAA,CAACL,OAAO;QAACU,WAAW,EAAEA,WAAY;QAACC,cAAc,EAAEA,cAAe;QAACC,cAAc,EAAEA,cAAe;QAACC,aAAa,EAAEC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClIb,OAAA;QAAKG,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACrBJ,OAAA;UAAKG,SAAS,EAAC,SAAS;UAAAC,QAAA,eACxBJ,OAAA,CAACF,YAAY;YAACgB,OAAO,EAAEA,OAAQ;YAACC,UAAU,EAAEA;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNb,OAAA;QAAKG,SAAS,EAAC;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACNb,OAAA;MAAKG,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBJ,OAAA,CAACJ,eAAe;QAACoB,SAAS,EAAEC,iBAAkB;QAACC,aAAa,EAAEA;MAAc;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACM,EAAA,GApEIlB,QAAQ;AAsEd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}