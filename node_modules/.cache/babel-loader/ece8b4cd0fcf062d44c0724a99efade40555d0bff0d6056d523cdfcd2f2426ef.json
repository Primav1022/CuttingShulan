{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import Moveable from'react-moveable';import'./SketchBox.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SketchBox=_ref=>{let{targets,setTargets}=_ref;const[lastTranslate,setLastTranslate]=useState([0,0]);const[selectedTarget,setSelectedTarget]=useState(null);const[moveableTarget,setMoveableTarget]=useState(null);const[isDragging,setIsDragging]=useState(false);const deleteButtonSize=30;const deleteButtonOffset=deleteButtonSize/2;const[deleteButtonPosition,setDeleteButtonPosition]=useState({x:0,y:0});const calculateRotatedTopRight=(x,y,width,height,rotate)=>{// �?心点坐标\nconst centerX=x+width/2;const centerY=y+height/2;// 右上角相对于�?心点的相对位\nconst relativeX=width/2;const relativeY=-height/2;// 将旋�?角度从度�?�?为弧�?\nconst radians=rotate*(Math.PI/180);// 应用旋转\nconst rotatedX=relativeX*Math.cos(radians)-relativeY*Math.sin(radians);const rotatedY=relativeX*Math.sin(radians)+relativeY*Math.cos(radians);// �?换回绝�?�坐�?\nconst absoluteX=centerX+rotatedX;const absoluteY=centerY+rotatedY;return{x:absoluteX,y:absoluteY};};// 使用该函数来获取旋转后右上�?�的坐标\nlet rotatedTopRight={x:0,y:0};if(selectedTarget){rotatedTopRight=calculateRotatedTopRight(selectedTarget.x,selectedTarget.y,selectedTarget.width,selectedTarget.height,selectedTarget.rotate);}// 现在你可以使�? rotatedTopRight.x �? rotatedTopRight.y 作为删除�?的坐�?\nconst onDrag=_ref2=>{let{target,beforeTranslate}=_ref2;const id=parseInt(target.parentElement.getAttribute('data-id'));const targetData=targets.find(t=>t.id===id);if(targetData){const deltaX=beforeTranslate[0]-lastTranslate[0];const deltaY=beforeTranslate[1]-lastTranslate[1];const radians=targetData.rotate*(Math.PI/180);const cos=Math.cos(radians);const sin=Math.sin(radians);const adjustedX=deltaX*cos-deltaY*sin;const adjustedY=deltaY*cos+deltaX*sin;// 计算新位�?，但尚未应用边界限制\nlet newX=targetData.x+adjustedX;let newY=targetData.y+adjustedY;// 使用 SketchBox �? 60vh 作为活动区域的垂直限�?\n// const maxHeight = window.innerHeight * 0.6-targetData.height;\n// const maxWidth = window.innerHeight * 0.6-targetData.width;\nconst maxWidth=10000000000;const maxHeight=100000000000;// 应用边界限制\nnewX=Math.max(-100000100,Math.min(newX,maxWidth));newY=Math.max(-100000000,Math.min(newY,maxHeight));// 更新�?标位�?\nupdateTarget(id,{x:newX,y:newY});setLastTranslate(beforeTranslate);// 更新 lastTranslate 为当前的 beforeTranslate\n}};const onRotate=_ref3=>{let{target,beforeRotate}=_ref3;const id=parseInt(target.parentElement.getAttribute('data-id'));const targetData=targets.find(t=>t.id===id);if(targetData){const newRotate=targetData.rotate+beforeRotate;updateTarget(id,{rotate:newRotate});}};useEffect(()=>{if(selectedTarget){setMoveableTarget(document.querySelector(\".img-container[data-id=\\\"\".concat(selectedTarget.id,\"\\\"] > img\")));}},[selectedTarget,targets]);const[containerSize,setContainerSize]=useState({width:0,height:0});const containerRef=useRef(null);useEffect(()=>{if(containerRef.current){setContainerSize({width:containerRef.current.offsetWidth,height:containerRef.current.offsetHeight});}},[containerRef.current]);function onDrop(event){event.preventDefault();const data=event.dataTransfer.getData('application/json');// �?保只有当有数�?时才尝试解析\nif(data){const{type,url}=JSON.parse(data);if(type==='library'){// 获取 SketchBox 容器的边�?\nconst boxRect=event.currentTarget.getBoundingClientRect();// 调整坐标，使其相对于 SketchBox 容器\n// const x = event.clientX - boxRect.left;\n// const y = event.clientY - boxRect.top;\nconst x=0;const y=0;// 创建新图�?\nconst newImage={id:Date.now(),src:url,x:x,y:y,width:100,height:100,rotate:0};setTargets([...targets,newImage]);}}}useEffect(()=>{if(selectedTarget){// 使用计算旋转后右上�?�坐标的函数\nconst{x,y}=calculateRotatedTopRight(selectedTarget.x,selectedTarget.y,selectedTarget.width,selectedTarget.height,selectedTarget.rotate);// 更新删除�?的位�?状�?\nsetDeleteButtonPosition({x,y});}},[selectedTarget]);const onDragOver=event=>{event.preventDefault();};const onDragStart=_ref4=>{let{target}=_ref4;setIsDragging(true);const id=parseInt(target.parentElement.getAttribute('data-id'));const targetData=targets.find(target=>target.id===id);if(targetData){setLastTranslate([0,0]);// 重置为初始�?\n}};const onDragEnd=_ref5=>{let{target}=_ref5;setIsDragging(false);};const deleteImage=id=>{setTargets(targets.filter(target=>target.id!==id));setSelectedTarget(null);setMoveableTarget(null);};const updateTarget=(id,updatedFields)=>{setTargets(targets.map(target=>target.id===id?{...target,...updatedFields}:target));};const handleSketchBoxClick=event=>{const isImageOrContainerClicked=event.target.closest('.img-container');if(!isImageOrContainerClicked){setSelectedTarget(null);setMoveableTarget(null);}};const onResize=_ref6=>{let{target,width,height}=_ref6;const id=parseInt(target.parentElement.getAttribute('data-id'));const targetData=targets.find(t=>t.id===id);if(targetData){// 确定新的宽度和高度，但不允许超过 SketchBox 的尺寸\nconst newWidth=width;const newHeight=height;// 更新目标尺寸\nupdateTarget(id,{width:newWidth,height:newHeight});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"sketch-box\",ref:containerRef,onClick:handleSketchBoxClick,onDrop:onDrop,onDragOver:onDragOver,children:[targets.map(target=>{// 计算旋转后右上�?�的坐标，用于定位删除键\nconst{x,y}=calculateRotatedTopRight(target.x,target.y,target.width,target.height,target.rotate);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{\"data-id\":target.id,className:\"img-container\",style:{position:'absolute',left:target.x,top:target.y,transform:\"rotate(\".concat(target.rotate,\"deg)\"),width:\"\".concat(target.width,\"px\"),height:\"\".concat(target.height,\"px\")},children:/*#__PURE__*/_jsx(\"img\",{src:target.src,alt:\"Element \".concat(target.id),style:{width:'100%',height:'100%',cursor:'pointer'},onClick:()=>setSelectedTarget(target)})}),selectedTarget&&selectedTarget.id===target.id&&/*#__PURE__*/_jsx(\"div\",{onClick:()=>deleteImage(target.id),style:{position:'absolute',left:\"\".concat(x-deleteButtonOffset,\"px\"),// 调整以使圆心与右上顶点重�?\ntop:\"\".concat(y-deleteButtonOffset,\"px\"),// 调整以使圆心与右上顶点重�?\ncursor:'pointer',zIndex:100000000,// �?保删除按�?在图像上�?\nwidth:\"\".concat(deleteButtonSize,\"px\"),height:\"\".concat(deleteButtonSize,\"px\"),borderRadius:'50%',// 创建圆形按钮\nbackgroundColor:'red',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsxs(\"svg\",{width:\"30\",height:\"30\",viewBox:\"0 0 30 30\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"15\",cy:\"15\",r:\"15\",fill:\"#333333\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M10.7563 19.2422L19.2416 10.7569\",stroke:\"white\",strokeWidth:\"3\",strokeLinecap:\"round\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M19.2437 19.2422L10.7584 10.7569\",stroke:\"white\",strokeWidth:\"3\",strokeLinecap:\"round\"})]})})]},target.id);}),/*#__PURE__*/_jsx(Moveable,{target:moveableTarget,draggable:true,resizable:true,rotatable:true,onDragStart:onDragStart,onDragEnd:onDragEnd,onDrag:onDrag,onResize:onResize,onRotate:onRotate})]});};export default SketchBox;","map":{"version":3,"names":["React","useState","useEffect","useRef","Moveable","jsx","_jsx","jsxs","_jsxs","SketchBox","_ref","targets","setTargets","lastTranslate","setLastTranslate","selectedTarget","setSelectedTarget","moveableTarget","setMoveableTarget","isDragging","setIsDragging","deleteButtonSize","deleteButtonOffset","deleteButtonPosition","setDeleteButtonPosition","x","y","calculateRotatedTopRight","width","height","rotate","centerX","centerY","relativeX","relativeY","radians","Math","PI","rotatedX","cos","sin","rotatedY","absoluteX","absoluteY","rotatedTopRight","onDrag","_ref2","target","beforeTranslate","id","parseInt","parentElement","getAttribute","targetData","find","t","deltaX","deltaY","adjustedX","adjustedY","newX","newY","maxWidth","maxHeight","max","min","updateTarget","onRotate","_ref3","beforeRotate","newRotate","document","querySelector","concat","containerSize","setContainerSize","containerRef","current","offsetWidth","offsetHeight","onDrop","event","preventDefault","data","dataTransfer","getData","type","url","JSON","parse","boxRect","currentTarget","getBoundingClientRect","newImage","Date","now","src","onDragOver","onDragStart","_ref4","onDragEnd","_ref5","deleteImage","filter","updatedFields","map","handleSketchBoxClick","isImageOrContainerClicked","closest","onResize","_ref6","newWidth","newHeight","className","ref","onClick","children","Fragment","style","position","left","top","transform","alt","cursor","zIndex","borderRadius","backgroundColor","display","alignItems","justifyContent","viewBox","fill","xmlns","cx","cy","r","d","stroke","strokeWidth","strokeLinecap","draggable","resizable","rotatable"],"sources":["F:/同济实习/cutting/src/components/SketchBox/SketchBox.js"],"sourcesContent":["import React, { useState, useEffect ,useRef} from 'react';\r\nimport Moveable from 'react-moveable';\r\n\r\nimport './SketchBox.css';\r\n\r\n\r\nconst SketchBox = ({ targets, setTargets }) => {\r\n  const [lastTranslate, setLastTranslate] = useState([0, 0]);\r\n  const [selectedTarget, setSelectedTarget] = useState(null);\r\n  const [moveableTarget, setMoveableTarget] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const deleteButtonSize = 30;\r\n  const deleteButtonOffset = deleteButtonSize / 2;\r\n  const [deleteButtonPosition, setDeleteButtonPosition] = useState({ x: 0, y: 0 });\r\n\r\n  const calculateRotatedTopRight = (x, y, width, height, rotate) => {\r\n    // �?心点坐标\r\n    const centerX = x + width / 2;\r\n    const centerY = y + height / 2;\r\n  \r\n    // 右上角相对于�?心点的相对位\r\n    const relativeX = width / 2;\r\n    const relativeY = -height / 2;\r\n  \r\n    // 将旋�?角度从度�?�?为弧�?\r\n    const radians = rotate * (Math.PI / 180);\r\n  \r\n    // 应用旋转\r\n    const rotatedX = relativeX * Math.cos(radians) - relativeY * Math.sin(radians);\r\n    const rotatedY = relativeX * Math.sin(radians) + relativeY * Math.cos(radians);\r\n  \r\n    // �?换回绝�?�坐�?\r\n    const absoluteX = centerX + rotatedX;\r\n    const absoluteY = centerY + rotatedY;\r\n  \r\n    return { x: absoluteX, y: absoluteY };\r\n  };\r\n  \r\n  // 使用该函数来获取旋转后右上�?�的坐标\r\n  let rotatedTopRight = { x: 0, y: 0 };\r\n\r\nif (selectedTarget) {\r\n  rotatedTopRight = calculateRotatedTopRight(selectedTarget.x, selectedTarget.y, selectedTarget.width, selectedTarget.height, selectedTarget.rotate);\r\n}\r\n\r\n  \r\n  // 现在你可以使�? rotatedTopRight.x �? rotatedTopRight.y 作为删除�?的坐�?\r\n  \r\n  const onDrag = ({ target, beforeTranslate }) => {\r\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\r\n    const targetData = targets.find(t => t.id === id);\r\n  \r\n    if (targetData) {\r\n      const deltaX = beforeTranslate[0] - lastTranslate[0];\r\n      const deltaY = beforeTranslate[1] - lastTranslate[1];\r\n  \r\n      const radians = targetData.rotate * (Math.PI / 180);\r\n      const cos = Math.cos(radians);\r\n      const sin = Math.sin(radians);\r\n  \r\n      const adjustedX = deltaX * cos - deltaY * sin;\r\n      const adjustedY = deltaY * cos + deltaX * sin;\r\n   // 计算新位�?，但尚未应用边界限制\r\n   let newX = targetData.x + adjustedX;\r\n   let newY = targetData.y + adjustedY;\r\n\r\n   // 使用 SketchBox �? 60vh 作为活动区域的垂直限�?\r\n   // const maxHeight = window.innerHeight * 0.6-targetData.height;\r\n   // const maxWidth = window.innerHeight * 0.6-targetData.width;\r\nconst maxWidth=10000000000;\r\nconst maxHeight=100000000000;\r\n   // 应用边界限制\r\n   newX = Math.max(-100000100, Math.min(newX, maxWidth));\r\n    newY = Math.max(-100000000, Math.min(newY,maxHeight));\r\n\r\n   // 更新�?标位�?\r\n   updateTarget(id, {\r\n     x: newX,\r\n     y: newY\r\n   });\r\n  \r\n      setLastTranslate(beforeTranslate); // 更新 lastTranslate 为当前的 beforeTranslate\r\n    }\r\n  };\r\n  \r\n  \r\n  const onRotate = ({ target, beforeRotate }) => {\r\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\r\n    const targetData = targets.find(t => t.id === id);\r\n  \r\n    if (targetData) {\r\n     \r\n      const newRotate = targetData.rotate + beforeRotate;\r\n\r\n  \r\n      updateTarget(id, { rotate: newRotate });\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    if (selectedTarget) {\r\n      setMoveableTarget(document.querySelector(`.img-container[data-id=\"${selectedTarget.id}\"] > img`));\r\n    }\r\n  },\r\n   [selectedTarget, targets]);\r\n   \r\n   const [containerSize, setContainerSize] = useState({ width: 0, height: 0 });\r\n   const containerRef = useRef(null);\r\n \r\n   useEffect(() => {\r\n     if (containerRef.current) {\r\n       setContainerSize({\r\n         width: containerRef.current.offsetWidth,\r\n         height: containerRef.current.offsetHeight,\r\n       });\r\n     }\r\n   }, [containerRef.current]);\r\n   function onDrop(event) {\r\n    event.preventDefault();\r\n    const data = event.dataTransfer.getData('application/json');\r\n  \r\n    // �?保只有当有数�?时才尝试解析\r\n    if (data) {\r\n      const { type, url } = JSON.parse(data);\r\n  \r\n      if (type === 'library') {\r\n        // 获取 SketchBox 容器的边�?\r\n        const boxRect = event.currentTarget.getBoundingClientRect();\r\n  \r\n        // 调整坐标，使其相对于 SketchBox 容器\r\n        // const x = event.clientX - boxRect.left;\r\n        // const y = event.clientY - boxRect.top;\r\n        const x = 0;\r\n        const y = 0;\r\n  \r\n        // 创建新图�?\r\n        const newImage = {\r\n          id: Date.now(),\r\n          src: url,\r\n          x: x,\r\n          y: y,\r\n          width: 100,\r\n          height: 100,\r\n          rotate: 0,\r\n        };\r\n        setTargets([...targets, newImage]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (selectedTarget) {\r\n      // 使用计算旋转后右上�?�坐标的函数\r\n      const { x, y } = calculateRotatedTopRight(\r\n        selectedTarget.x,\r\n        selectedTarget.y,\r\n        selectedTarget.width,\r\n        selectedTarget.height,\r\n        selectedTarget.rotate\r\n      );\r\n  \r\n      // 更新删除�?的位�?状�?\r\n      setDeleteButtonPosition({ x, y });\r\n    }\r\n  }, [selectedTarget]);\r\n  \r\n  const onDragOver = (event) => {\r\n    event.preventDefault(); \r\n  };\r\n\r\n\r\n  const onDragStart = ({ target }) => {\r\n    setIsDragging(true); \r\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\r\n    const targetData = targets.find(target => target.id === id);\r\n    if (targetData) {\r\n      setLastTranslate([0, 0]); // 重置为初始�?\r\n    }\r\n  };\r\n   const onDragEnd = ({ target }) => {\r\n    setIsDragging(false); \r\n  };\r\n  const deleteImage = (id) => {\r\n    setTargets(targets.filter(target => target.id !== id));\r\n    setSelectedTarget(null);\r\n    setMoveableTarget(null);\r\n\r\n  };\r\n\r\n\r\n  const updateTarget = (id, updatedFields) => {\r\n    setTargets(targets.map(target => target.id === id ? { ...target, ...updatedFields } : target));\r\n  };\r\n\r\n  const handleSketchBoxClick = (event) => {\r\n\r\n    const isImageOrContainerClicked = event.target.closest('.img-container');\r\n\r\n\r\n    if (!isImageOrContainerClicked) {\r\n      setSelectedTarget(null);\r\n      setMoveableTarget(null);\r\n    }\r\n  };\r\n  const onResize = ({ target, width, height }) => {\r\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\r\n    const targetData = targets.find(t => t.id === id);\r\n  \r\n    if (targetData) {\r\n      // 确定新的宽度和高度，但不允许超过 SketchBox 的尺寸\r\n      const newWidth = width;\r\n      const newHeight = height;\r\n  \r\n      // 更新目标尺寸\r\n      updateTarget(id, { width: newWidth, height: newHeight });\r\n    }\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div className=\"sketch-box\" ref={containerRef} onClick={handleSketchBoxClick} onDrop={onDrop} onDragOver={onDragOver}>\r\n      {targets.map((target) => {\r\n        // 计算旋转后右上�?�的坐标，用于定位删除键\r\n        const { x, y } = calculateRotatedTopRight(target.x, target.y, target.width, target.height, target.rotate);\r\n\r\n        return (\r\n          <React.Fragment key={target.id}>\r\n      <div\r\n        data-id={target.id}\r\n        className=\"img-container\"\r\n        style={{\r\n          position: 'absolute',\r\n          left: target.x,\r\n          top: target.y,\r\n          transform: `rotate(${target.rotate}deg)`,\r\n          width: `${target.width}px`,\r\n          height: `${target.height}px`\r\n        }}\r\n      >\r\n        <img\r\n          src={target.src}\r\n          alt={`Element ${target.id}`}\r\n          style={{ width: '100%', height: '100%', cursor: 'pointer' }}\r\n          onClick={() => setSelectedTarget(target)}\r\n        />\r\n      </div>\r\n      {selectedTarget && selectedTarget.id === target.id && (\r\n        <div\r\n          onClick={() => deleteImage(target.id)}\r\n          style={{\r\n            position: 'absolute',\r\n            left: `${x - deleteButtonOffset}px`, // 调整以使圆心与右上顶点重�?\r\n            top: `${y - deleteButtonOffset}px`, // 调整以使圆心与右上顶点重�?\r\n            cursor: 'pointer',\r\n            zIndex: 100000000, // �?保删除按�?在图像上�?\r\n            width: `${deleteButtonSize}px`,\r\n            height: `${deleteButtonSize}px`,\r\n            borderRadius: '50%', // 创建圆形按钮\r\n            backgroundColor: 'red',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n             <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <circle cx=\"15\" cy=\"15\" r=\"15\" fill=\"#333333\"/>\r\n          <path d=\"M10.7563 19.2422L19.2416 10.7569\" stroke=\"white\" strokeWidth=\"3\" strokeLinecap=\"round\"/>\r\n          <path d=\"M19.2437 19.2422L10.7584 10.7569\" stroke=\"white\" strokeWidth=\"3\" strokeLinecap=\"round\"/>\r\n        </svg>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n        );\r\n      })}\r\n        <Moveable\r\n          target={moveableTarget}\r\n          draggable={true}\r\n          resizable={true}\r\n          rotatable={true}\r\n          onDragStart={onDragStart}\r\n          onDragEnd={onDragEnd}\r\n          onDrag={onDrag}\r\n        onResize={onResize}\r\n          onRotate={onRotate}\r\n            \r\n        />\r\n    </div>\r\n  );\r\n        }\r\nexport default SketchBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}