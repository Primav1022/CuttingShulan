{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\SketchBox\\\\remake.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { fabric } from 'fabric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FabricCanvas = () => {\n  _s();\n  const canvasContainerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fabricCanvasRef = useRef(null);\n  useEffect(() => {\n    fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\n      width: window.innerHeight * 0.6,\n      height: window.innerHeight * 0.6\n    });\n\n    // 在此处可以添加其他初始化操作，例如添加图形等\n\n    // 监听画布的dragover事件，防止默认行为（通常是不允许拖放）\n    canvasRef.current.addEventListener('dragover', e => {\n      e.preventDefault();\n    });\n\n    // 监听画布的drop事件\n    canvasRef.current.addEventListener('drop', handleDrop);\n    return () => {\n      // 清理fabric.Canvas对象\n      fabricCanvasRef.current.dispose();\n\n      // 移除事件监听器\n      canvasRef.current.removeEventListener('drop', handleDrop);\n    };\n  }, []);\n\n  // 处理drop事件\n  const handleDrop = e => {\n    e.preventDefault();\n\n    // 获取拖拽的文件\n    const file = e.dataTransfer.files[0];\n\n    // 检查文件类型是否为图片\n    if (file.type.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        // 创建fabric.Image对象\n        fabric.Image.fromURL(event.target.result, img => {\n          // 设置图片位置\n          img.set({\n            left: e.clientX - canvasRef.current.getBoundingClientRect().left,\n            top: e.clientY - canvasRef.current.getBoundingClientRect().top\n          });\n\n          // 添加图片到画布\n          fabricCanvasRef.current.add(img);\n        });\n      };\n\n      // 读取图片文件\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasContainerRef,\n    style: {\n      position: 'relative',\n      // 设置父元素的position为relative\n      width: '60vh',\n      height: '60vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 512,\n      height: 512,\n      style: {\n        border: '1px solid black',\n        maxWidth: '100%',\n        maxHeight: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(FabricCanvas, \"+vUUGH9l47RR1tbb0csIp6OUTcU=\");\n_c = FabricCanvas;\nexport default FabricCanvas;\nvar _c;\n$RefreshReg$(_c, \"FabricCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","fabric","jsxDEV","_jsxDEV","FabricCanvas","_s","canvasContainerRef","canvasRef","fabricCanvasRef","current","Canvas","width","window","innerHeight","height","addEventListener","e","preventDefault","handleDrop","dispose","removeEventListener","file","dataTransfer","files","type","startsWith","reader","FileReader","onload","event","Image","fromURL","target","result","img","set","left","clientX","getBoundingClientRect","top","clientY","add","readAsDataURL","ref","style","position","children","border","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/SketchBox/remake.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst FabricCanvas = () => {\r\n    const canvasContainerRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const fabricCanvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\r\n            width: window.innerHeight * 0.6,\r\n            height: window.innerHeight * 0.6,\r\n        });\r\n\r\n        // 在此处可以添加其他初始化操作，例如添加图形等\r\n\r\n        // 监听画布的dragover事件，防止默认行为（通常是不允许拖放）\r\n        canvasRef.current.addEventListener('dragover', (e) => {\r\n            e.preventDefault();\r\n        });\r\n\r\n        // 监听画布的drop事件\r\n        canvasRef.current.addEventListener('drop', handleDrop);\r\n\r\n        return () => {\r\n            // 清理fabric.Canvas对象\r\n            fabricCanvasRef.current.dispose();\r\n\r\n            // 移除事件监听器\r\n            canvasRef.current.removeEventListener('drop', handleDrop);\r\n        };\r\n    }, []);\r\n\r\n    // 处理drop事件\r\n    const handleDrop = (e) => {\r\n        e.preventDefault();\r\n\r\n        // 获取拖拽的文件\r\n        const file = e.dataTransfer.files[0];\r\n\r\n        // 检查文件类型是否为图片\r\n        if (file.type.startsWith('image/')) {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = (event) => {\r\n                // 创建fabric.Image对象\r\n                fabric.Image.fromURL(event.target.result, (img) => {\r\n                    // 设置图片位置\r\n                    img.set({\r\n                        left: e.clientX - canvasRef.current.getBoundingClientRect().left,\r\n                        top: e.clientY - canvasRef.current.getBoundingClientRect().top,\r\n                    });\r\n\r\n                    // 添加图片到画布\r\n                    fabricCanvasRef.current.add(img);\r\n                });\r\n            };\r\n\r\n            // 读取图片文件\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={canvasContainerRef}\r\n            style={{\r\n                position: 'relative', // 设置父元素的position为relative\r\n                width: '60vh',\r\n                height: '60vh',\r\n            }}\r\n        >\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={512}\r\n                height={512}\r\n                style={{ border: '1px solid black', maxWidth: '100%', maxHeight: '100%' }}\r\n            ></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FabricCanvas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}