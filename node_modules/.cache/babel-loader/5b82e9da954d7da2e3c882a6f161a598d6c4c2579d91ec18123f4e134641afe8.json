{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\SketchBox\\\\SketchBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Moveable from 'react-moveable';\nimport './SketchBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SketchBox = ({\n  targets,\n  setTargets\n}) => {\n  _s();\n  const [lastTranslate, setLastTranslate] = useState([0, 0]);\n  const [selectedTarget, setSelectedTarget] = useState(null);\n  const [moveableTarget, setMoveableTarget] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const deleteButtonSize = 30;\n  const deleteButtonOffset = deleteButtonSize / 2;\n  const [deleteButtonPosition, setDeleteButtonPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const calculateRotatedTopRight = (x, y, width, height, rotate) => {\n    // �?心点坐标\n    const centerX = x + width / 2;\n    const centerY = y + height / 2;\n\n    // 右上角相对于�?心点的相对位\n    const relativeX = width / 2;\n    const relativeY = -height / 2;\n\n    // 将旋�?角度从度�?�?为弧�?\n    const radians = rotate * (Math.PI / 180);\n\n    // 应用旋转\n    const rotatedX = relativeX * Math.cos(radians) - relativeY * Math.sin(radians);\n    const rotatedY = relativeX * Math.sin(radians) + relativeY * Math.cos(radians);\n\n    // �?换回绝�?�坐�?\n    const absoluteX = centerX + rotatedX;\n    const absoluteY = centerY + rotatedY;\n    return {\n      x: absoluteX,\n      y: absoluteY\n    };\n  };\n\n  // 使用该函数来获取旋转后右上�?�的坐标\n  let rotatedTopRight = {\n    x: 0,\n    y: 0\n  };\n  if (selectedTarget) {\n    rotatedTopRight = calculateRotatedTopRight(selectedTarget.x, selectedTarget.y, selectedTarget.width, selectedTarget.height, selectedTarget.rotate);\n  }\n\n  // 现在你可以使�? rotatedTopRight.x �? rotatedTopRight.y 作为删除�?的坐�?\n\n  const onDrag = ({\n    target,\n    beforeTranslate\n  }) => {\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\n    const targetData = targets.find(t => t.id === id);\n    if (targetData) {\n      const deltaX = beforeTranslate[0] - lastTranslate[0];\n      const deltaY = beforeTranslate[1] - lastTranslate[1];\n      const radians = targetData.rotate * (Math.PI / 180);\n      const cos = Math.cos(radians);\n      const sin = Math.sin(radians);\n      const adjustedX = deltaX * cos - deltaY * sin;\n      const adjustedY = deltaY * cos + deltaX * sin;\n      // 计算新位�?，但尚未应用边界限制\n      let newX = targetData.x + adjustedX;\n      let newY = targetData.y + adjustedY;\n\n      // 使用 SketchBox �? 60vh 作为活动区域的垂直限�?\n      // const maxHeight = window.innerHeight * 0.6-targetData.height;\n      // const maxWidth = window.innerHeight * 0.6-targetData.width;\n      const maxWidth = 10000000000;\n      const maxHeight = 100000000000;\n      // 应用边界限制\n      newX = Math.max(-100000100, Math.min(newX, maxWidth));\n      newY = Math.max(-100000000, Math.min(newY, maxHeight));\n\n      // 更新�?标位�?\n      updateTarget(id, {\n        x: newX,\n        y: newY\n      });\n      setLastTranslate(beforeTranslate); // 更新 lastTranslate 为当前的 beforeTranslate\n    }\n  };\n  const onRotate = ({\n    target,\n    beforeRotate\n  }) => {\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\n    const targetData = targets.find(t => t.id === id);\n    if (targetData) {\n      const newRotate = targetData.rotate + beforeRotate;\n      updateTarget(id, {\n        rotate: newRotate\n      });\n    }\n  };\n  useEffect(() => {\n    if (selectedTarget) {\n      setMoveableTarget(document.querySelector(`.img-container[data-id=\"${selectedTarget.id}\"] > img`));\n    }\n  }, [selectedTarget, targets]);\n  const [containerSize, setContainerSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (containerRef.current) {\n      setContainerSize({\n        width: containerRef.current.offsetWidth,\n        height: containerRef.current.offsetHeight\n      });\n    }\n  }, [containerRef.current]);\n  function onDrop(event) {\n    event.preventDefault();\n    const data = event.dataTransfer.getData('application/json');\n\n    // �?保只有当有数�?时才尝试解析\n    if (data) {\n      const {\n        type,\n        url\n      } = JSON.parse(data);\n      if (type === 'library') {\n        // 获取 SketchBox 容器的边�?\n        const boxRect = event.currentTarget.getBoundingClientRect();\n\n        // 调整坐标，使其相对于 SketchBox 容器\n        // const x = event.clientX - boxRect.left;\n        // const y = event.clientY - boxRect.top;\n        const x = 0;\n        const y = 0;\n\n        // 创建新图�?\n        const newImage = {\n          id: Date.now(),\n          src: url,\n          x: x,\n          y: y,\n          width: 100,\n          height: 100,\n          rotate: 0\n        };\n        setTargets([...targets, newImage]);\n      }\n    }\n  }\n  useEffect(() => {\n    if (selectedTarget) {\n      // 使用计算旋转后右上�?�坐标的函数\n      const {\n        x,\n        y\n      } = calculateRotatedTopRight(selectedTarget.x, selectedTarget.y, selectedTarget.width, selectedTarget.height, selectedTarget.rotate);\n\n      // 更新删除�?的位�?状�?\n      setDeleteButtonPosition({\n        x,\n        y\n      });\n    }\n  }, [selectedTarget]);\n  const onDragOver = event => {\n    event.preventDefault();\n  };\n  const onDragStart = ({\n    target\n  }) => {\n    setIsDragging(true);\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\n    const targetData = targets.find(target => target.id === id);\n    if (targetData) {\n      setLastTranslate([0, 0]); // 重置为初始�?\n    }\n  };\n  const onDragEnd = ({\n    target\n  }) => {\n    setIsDragging(false);\n  };\n  const deleteImage = id => {\n    setTargets(targets.filter(target => target.id !== id));\n    setSelectedTarget(null);\n    setMoveableTarget(null);\n  };\n  const updateTarget = (id, updatedFields) => {\n    setTargets(targets.map(target => target.id === id ? {\n      ...target,\n      ...updatedFields\n    } : target));\n  };\n  const handleSketchBoxClick = event => {\n    const isImageOrContainerClicked = event.target.closest('.img-container');\n    if (!isImageOrContainerClicked) {\n      setSelectedTarget(null);\n      setMoveableTarget(null);\n    }\n  };\n  const onResize = ({\n    target,\n    width,\n    height\n  }) => {\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\n    const targetData = targets.find(t => t.id === id);\n    if (targetData) {\n      // 确定新的宽度和高度，但不允许超过 SketchBox 的尺寸\n      const newWidth = width;\n      const newHeight = height;\n\n      // 更新目标尺寸\n      updateTarget(id, {\n        width: newWidth,\n        height: newHeight\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sketch-box\",\n    ref: containerRef,\n    onClick: handleSketchBoxClick,\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    children: [targets.map(target => {\n      // 计算旋转后右上�?�的坐标，用于定位删除键\n      const {\n        x,\n        y\n      } = calculateRotatedTopRight(target.x, target.y, target.width, target.height, target.rotate);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-id\": target.id,\n          className: \"img-container\",\n          style: {\n            position: 'absolute',\n            left: target.x,\n            top: target.y,\n            transform: `rotate(${target.rotate}deg)`,\n            width: `${target.width}px`,\n            height: `${target.height}px`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: target.src,\n            alt: `Element ${target.id}`,\n            style: {\n              width: '100%',\n              height: '100%',\n              cursor: 'pointer'\n            },\n            onClick: () => setSelectedTarget(target)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }, this), selectedTarget && selectedTarget.id === target.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => deleteImage(target.id),\n          style: {\n            position: 'absolute',\n            left: `${x - deleteButtonOffset}px`,\n            // 调整以使圆心与右上顶点重�?\n            top: `${y - deleteButtonOffset}px`,\n            // 调整以使圆心与右上顶点重�?\n            cursor: 'pointer',\n            zIndex: 100000000,\n            // �?保删除按�?在图像上�?\n            width: `${deleteButtonSize}px`,\n            height: `${deleteButtonSize}px`,\n            borderRadius: '50%',\n            // 创建圆形按钮\n            backgroundColor: 'red',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"30\",\n            height: \"30\",\n            viewBox: \"0 0 30 30\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"15\",\n              cy: \"15\",\n              r: \"15\",\n              fill: \"#333333\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M10.7563 19.2422L19.2416 10.7569\",\n              stroke: \"white\",\n              strokeWidth: \"3\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M19.2437 19.2422L10.7584 10.7569\",\n              stroke: \"white\",\n              strokeWidth: \"3\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }, this)]\n      }, target.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Moveable, {\n      target: moveableTarget,\n      draggable: true,\n      resizable: true,\n      rotatable: true,\n      onDragStart: onDragStart,\n      onDragEnd: onDragEnd,\n      onDrag: onDrag,\n      onResize: onResize,\n      onRotate: onRotate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(SketchBox, \"F6Kyd2IJ27vlyp1KfPg0NXP8Wwg=\");\n_c = SketchBox;\nexport default SketchBox;\nvar _c;\n$RefreshReg$(_c, \"SketchBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Moveable","jsxDEV","_jsxDEV","SketchBox","targets","setTargets","_s","lastTranslate","setLastTranslate","selectedTarget","setSelectedTarget","moveableTarget","setMoveableTarget","isDragging","setIsDragging","deleteButtonSize","deleteButtonOffset","deleteButtonPosition","setDeleteButtonPosition","x","y","calculateRotatedTopRight","width","height","rotate","centerX","centerY","relativeX","relativeY","radians","Math","PI","rotatedX","cos","sin","rotatedY","absoluteX","absoluteY","rotatedTopRight","onDrag","target","beforeTranslate","id","parseInt","parentElement","getAttribute","targetData","find","t","deltaX","deltaY","adjustedX","adjustedY","newX","newY","maxWidth","maxHeight","max","min","updateTarget","onRotate","beforeRotate","newRotate","document","querySelector","containerSize","setContainerSize","containerRef","current","offsetWidth","offsetHeight","onDrop","event","preventDefault","data","dataTransfer","getData","type","url","JSON","parse","boxRect","currentTarget","getBoundingClientRect","newImage","Date","now","src","onDragOver","onDragStart","onDragEnd","deleteImage","filter","updatedFields","map","handleSketchBoxClick","isImageOrContainerClicked","closest","onResize","newWidth","newHeight","className","ref","onClick","children","Fragment","style","position","left","top","transform","alt","cursor","fileName","_jsxFileName","lineNumber","columnNumber","zIndex","borderRadius","backgroundColor","display","alignItems","justifyContent","viewBox","fill","xmlns","cx","cy","r","d","stroke","strokeWidth","strokeLinecap","draggable","resizable","rotatable","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/SketchBox/SketchBox.js"],"sourcesContent":["import React, { useState, useEffect ,useRef} from 'react';\r\nimport Moveable from 'react-moveable';\r\n\r\nimport './SketchBox.css';\r\n\r\n\r\nconst SketchBox = ({ targets, setTargets }) => {\r\n  const [lastTranslate, setLastTranslate] = useState([0, 0]);\r\n  const [selectedTarget, setSelectedTarget] = useState(null);\r\n  const [moveableTarget, setMoveableTarget] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const deleteButtonSize = 30;\r\n  const deleteButtonOffset = deleteButtonSize / 2;\r\n  const [deleteButtonPosition, setDeleteButtonPosition] = useState({ x: 0, y: 0 });\r\n\r\n  const calculateRotatedTopRight = (x, y, width, height, rotate) => {\r\n    // �?心点坐标\r\n    const centerX = x + width / 2;\r\n    const centerY = y + height / 2;\r\n\r\n    // 右上角相对于�?心点的相对位\r\n    const relativeX = width / 2;\r\n    const relativeY = -height / 2;\r\n\r\n    // 将旋�?角度从度�?�?为弧�?\r\n    const radians = rotate * (Math.PI / 180);\r\n\r\n    // 应用旋转\r\n    const rotatedX = relativeX * Math.cos(radians) - relativeY * Math.sin(radians);\r\n    const rotatedY = relativeX * Math.sin(radians) + relativeY * Math.cos(radians);\r\n\r\n    // �?换回绝�?�坐�?\r\n    const absoluteX = centerX + rotatedX;\r\n    const absoluteY = centerY + rotatedY;\r\n\r\n    return { x: absoluteX, y: absoluteY };\r\n  };\r\n\r\n  // 使用该函数来获取旋转后右上�?�的坐标\r\n  let rotatedTopRight = { x: 0, y: 0 };\r\n\r\nif (selectedTarget) {\r\n  rotatedTopRight = calculateRotatedTopRight(selectedTarget.x, selectedTarget.y, selectedTarget.width, selectedTarget.height, selectedTarget.rotate);\r\n}\r\n\r\n\r\n  // 现在你可以使�? rotatedTopRight.x �? rotatedTopRight.y 作为删除�?的坐�?\r\n\r\n  const onDrag = ({ target, beforeTranslate }) => {\r\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\r\n    const targetData = targets.find(t => t.id === id);\r\n\r\n    if (targetData) {\r\n      const deltaX = beforeTranslate[0] - lastTranslate[0];\r\n      const deltaY = beforeTranslate[1] - lastTranslate[1];\r\n\r\n      const radians = targetData.rotate * (Math.PI / 180);\r\n      const cos = Math.cos(radians);\r\n      const sin = Math.sin(radians);\r\n\r\n      const adjustedX = deltaX * cos - deltaY * sin;\r\n      const adjustedY = deltaY * cos + deltaX * sin;\r\n   // 计算新位�?，但尚未应用边界限制\r\n   let newX = targetData.x + adjustedX;\r\n   let newY = targetData.y + adjustedY;\r\n\r\n   // 使用 SketchBox �? 60vh 作为活动区域的垂直限�?\r\n   // const maxHeight = window.innerHeight * 0.6-targetData.height;\r\n   // const maxWidth = window.innerHeight * 0.6-targetData.width;\r\nconst maxWidth=10000000000;\r\nconst maxHeight=100000000000;\r\n   // 应用边界限制\r\n   newX = Math.max(-100000100, Math.min(newX, maxWidth));\r\n    newY = Math.max(-100000000, Math.min(newY,maxHeight));\r\n\r\n   // 更新�?标位�?\r\n   updateTarget(id, {\r\n     x: newX,\r\n     y: newY\r\n   });\r\n\r\n      setLastTranslate(beforeTranslate); // 更新 lastTranslate 为当前的 beforeTranslate\r\n    }\r\n  };\r\n\r\n\r\n  const onRotate = ({ target, beforeRotate }) => {\r\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\r\n    const targetData = targets.find(t => t.id === id);\r\n\r\n    if (targetData) {\r\n\r\n      const newRotate = targetData.rotate + beforeRotate;\r\n\r\n\r\n      updateTarget(id, { rotate: newRotate });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectedTarget) {\r\n      setMoveableTarget(document.querySelector(`.img-container[data-id=\"${selectedTarget.id}\"] > img`));\r\n    }\r\n  },\r\n   [selectedTarget, targets]);\r\n\r\n   const [containerSize, setContainerSize] = useState({ width: 0, height: 0 });\r\n   const containerRef = useRef(null);\r\n\r\n   useEffect(() => {\r\n     if (containerRef.current) {\r\n       setContainerSize({\r\n         width: containerRef.current.offsetWidth,\r\n         height: containerRef.current.offsetHeight,\r\n       });\r\n     }\r\n   }, [containerRef.current]);\r\n   function onDrop(event) {\r\n    event.preventDefault();\r\n    const data = event.dataTransfer.getData('application/json');\r\n\r\n    // �?保只有当有数�?时才尝试解析\r\n    if (data) {\r\n      const { type, url } = JSON.parse(data);\r\n\r\n      if (type === 'library') {\r\n        // 获取 SketchBox 容器的边�?\r\n        const boxRect = event.currentTarget.getBoundingClientRect();\r\n\r\n        // 调整坐标，使其相对于 SketchBox 容器\r\n        // const x = event.clientX - boxRect.left;\r\n        // const y = event.clientY - boxRect.top;\r\n        const x = 0;\r\n        const y = 0;\r\n\r\n        // 创建新图�?\r\n        const newImage = {\r\n          id: Date.now(),\r\n          src: url,\r\n          x: x,\r\n          y: y,\r\n          width: 100,\r\n          height: 100,\r\n          rotate: 0,\r\n        };\r\n        setTargets([...targets, newImage]);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectedTarget) {\r\n      // 使用计算旋转后右上�?�坐标的函数\r\n      const { x, y } = calculateRotatedTopRight(\r\n        selectedTarget.x,\r\n        selectedTarget.y,\r\n        selectedTarget.width,\r\n        selectedTarget.height,\r\n        selectedTarget.rotate\r\n      );\r\n\r\n      // 更新删除�?的位�?状�?\r\n      setDeleteButtonPosition({ x, y });\r\n    }\r\n  }, [selectedTarget]);\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n\r\n  const onDragStart = ({ target }) => {\r\n    setIsDragging(true);\r\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\r\n    const targetData = targets.find(target => target.id === id);\r\n    if (targetData) {\r\n      setLastTranslate([0, 0]); // 重置为初始�?\r\n    }\r\n  };\r\n   const onDragEnd = ({ target }) => {\r\n    setIsDragging(false);\r\n  };\r\n  const deleteImage = (id) => {\r\n    setTargets(targets.filter(target => target.id !== id));\r\n    setSelectedTarget(null);\r\n    setMoveableTarget(null);\r\n\r\n  };\r\n\r\n\r\n  const updateTarget = (id, updatedFields) => {\r\n    setTargets(targets.map(target => target.id === id ? { ...target, ...updatedFields } : target));\r\n  };\r\n\r\n  const handleSketchBoxClick = (event) => {\r\n\r\n    const isImageOrContainerClicked = event.target.closest('.img-container');\r\n\r\n\r\n    if (!isImageOrContainerClicked) {\r\n      setSelectedTarget(null);\r\n      setMoveableTarget(null);\r\n    }\r\n  };\r\n  const onResize = ({ target, width, height }) => {\r\n    const id = parseInt(target.parentElement.getAttribute('data-id'));\r\n    const targetData = targets.find(t => t.id === id);\r\n\r\n    if (targetData) {\r\n      // 确定新的宽度和高度，但不允许超过 SketchBox 的尺寸\r\n      const newWidth = width;\r\n      const newHeight = height;\r\n\r\n      // 更新目标尺寸\r\n      updateTarget(id, { width: newWidth, height: newHeight });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"sketch-box\" ref={containerRef} onClick={handleSketchBoxClick} onDrop={onDrop} onDragOver={onDragOver}>\r\n      {targets.map((target) => {\r\n        // 计算旋转后右上�?�的坐标，用于定位删除键\r\n        const { x, y } = calculateRotatedTopRight(target.x, target.y, target.width, target.height, target.rotate);\r\n\r\n        return (\r\n          <React.Fragment key={target.id}>\r\n      <div\r\n        data-id={target.id}\r\n        className=\"img-container\"\r\n        style={{\r\n          position: 'absolute',\r\n          left: target.x,\r\n          top: target.y,\r\n          transform: `rotate(${target.rotate}deg)`,\r\n          width: `${target.width}px`,\r\n          height: `${target.height}px`\r\n        }}\r\n      >\r\n        <img\r\n          src={target.src}\r\n          alt={`Element ${target.id}`}\r\n          style={{ width: '100%', height: '100%', cursor: 'pointer' }}\r\n          onClick={() => setSelectedTarget(target)}\r\n        />\r\n      </div>\r\n      {selectedTarget && selectedTarget.id === target.id && (\r\n        <div\r\n          onClick={() => deleteImage(target.id)}\r\n          style={{\r\n            position: 'absolute',\r\n            left: `${x - deleteButtonOffset}px`, // 调整以使圆心与右上顶点重�?\r\n            top: `${y - deleteButtonOffset}px`, // 调整以使圆心与右上顶点重�?\r\n            cursor: 'pointer',\r\n            zIndex: 100000000, // �?保删除按�?在图像上�?\r\n            width: `${deleteButtonSize}px`,\r\n            height: `${deleteButtonSize}px`,\r\n            borderRadius: '50%', // 创建圆形按钮\r\n            backgroundColor: 'red',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n             <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <circle cx=\"15\" cy=\"15\" r=\"15\" fill=\"#333333\"/>\r\n          <path d=\"M10.7563 19.2422L19.2416 10.7569\" stroke=\"white\" strokeWidth=\"3\" strokeLinecap=\"round\"/>\r\n          <path d=\"M19.2437 19.2422L10.7584 10.7569\" stroke=\"white\" strokeWidth=\"3\" strokeLinecap=\"round\"/>\r\n        </svg>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n        );\r\n      })}\r\n        <Moveable\r\n          target={moveableTarget}\r\n          draggable={true}\r\n          resizable={true}\r\n          rotatable={true}\r\n          onDragStart={onDragStart}\r\n          onDragEnd={onDragEnd}\r\n          onDrag={onDrag}\r\n        onResize={onResize}\r\n          onRotate={onRotate}\r\n\r\n        />\r\n    </div>\r\n  );\r\n        }\r\nexport default SketchBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}