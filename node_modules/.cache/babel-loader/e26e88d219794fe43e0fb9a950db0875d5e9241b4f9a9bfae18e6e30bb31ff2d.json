{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\SketchBox\\\\remake.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Remake = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 512,\n    height: 512\n  });\n  const [context, setContext] = useState(null);\n  const [images, setImages] = useState([]); // ���ڴ洢�Ϸŵ�ͼƬURL����\n  const [deleteButtons, setDeleteButtons] = useState([]); // ���ڴ洢ɾ����ť��״̬\n\n  // ��������غ��ȡCanvas������\n  useEffect(() => {\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext('2d');\n      setContext(ctx);\n    }\n  }, [canvasRef.current]);\n\n  // ����ͼƬ��ɾ����ť\n  useEffect(() => {\n    if (context) {\n      context.clearRect(0, 0, canvasSize.width, canvasSize.height);\n      images.forEach((imageSrc, index) => {\n        if (imageSrc) {\n          const img = new Image();\n          img.src = imageSrc;\n          img.onload = () => {\n            // ����ͼƬ��СΪCanvas��С������֮һ\n            const scaledWidth = canvasSize.width / 3;\n            const scaledHeight = canvasSize.height / 3;\n            context.drawImage(img, 0, 0, img.width, img.height, 0, 0, scaledWidth, scaledHeight);\n            // �����Ӧ��ɾ����ť�ɼ���������\n            if (deleteButtons[index]) {\n              drawDeleteButton(context, deleteButtons[index]);\n            }\n          };\n        }\n      });\n    }\n  }, [context, images, deleteButtons, canvasSize]);\n\n  // �����Ϸ��¼�\n  const handleDrop = event => {\n    event.preventDefault();\n    const files = event.dataTransfer.files;\n    if (files.length > 0 && files[0].type.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImages(prevImages => [...prevImages, e.target.result]);\n      };\n      reader.readAsDataURL(files[0]);\n    }\n  };\n\n  // �����Ϸ�\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n\n  // ����Canvas����¼�\n  const handleCanvasClick = event => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    // �����λ���Ƿ����κ�ͼƬ��\n    const clickedImageIndex = images.findIndex((_, index) => {\n      const image = new Image();\n      image.src = images[index];\n      image.width = canvasSize.width / 3;\n      image.height = canvasSize.height / 3;\n      return x >= image.width * index && x <= image.width * (index + 1) && y >= 0 && y <= image.height;\n    });\n    if (clickedImageIndex !== -1) {\n      setDeleteButtons(prevButtons => {\n        const newButtons = [...prevButtons];\n        newButtons[clickedImageIndex] = {\n          x: canvasSize.width - 40,\n          y: 0\n        };\n        return newButtons;\n      });\n    } else {\n      setDeleteButtons(prevButtons => prevButtons.map(() => false));\n    }\n  };\n\n  // ����ɾ����ť\n  const drawDeleteButton = (ctx, position) => {\n    ctx.fillStyle = 'rgba(255, 0, 0, 0.8)';\n    ctx.beginPath();\n    ctx.arc(position.x, position.y, 20, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  // ����ɾ����ť����¼�\n  const handleDeleteButtonClick = index => {\n    setImages(prevImages => {\n      const newImages = [...prevImages];\n      newImages.splice(index, 1);\n      return newImages;\n    });\n    setDeleteButtons(prevButtons => {\n      const newButtons = [...prevButtons];\n      newButtons[index] = false;\n      return newButtons;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    style: {\n      height: '60vh',\n      width: '60vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasSize.width,\n      height: canvasSize.height,\n      style: {\n        border: '1px solid black'\n      },\n      onClick: handleCanvasClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), images.map((imageSrc, index) => deleteButtons[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: canvasSize.width - 40,\n        top: index * (canvasSize.height / 3),\n        width: 40,\n        height: 40,\n        backgroundColor: 'red',\n        color: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer'\n      },\n      onClick: () => handleDeleteButtonClick(index),\n      children: \"X\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Remake, \"NJJlLsTYVeQGFUomNINGmztsgMY=\");\n_c = Remake;\nexport default Remake;\nvar _c;\n$RefreshReg$(_c, \"Remake\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","Remake","_s","canvasRef","canvasSize","setCanvasSize","width","height","context","setContext","images","setImages","deleteButtons","setDeleteButtons","current","ctx","getContext","clearRect","forEach","imageSrc","index","img","Image","src","onload","scaledWidth","scaledHeight","drawImage","drawDeleteButton","handleDrop","event","preventDefault","files","dataTransfer","length","type","startsWith","reader","FileReader","e","prevImages","target","result","readAsDataURL","handleDragOver","handleCanvasClick","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","clickedImageIndex","findIndex","_","image","prevButtons","newButtons","map","position","fillStyle","beginPath","arc","Math","PI","fill","handleDeleteButtonClick","newImages","splice","onDrop","onDragOver","style","display","justifyContent","alignItems","overflow","children","ref","border","onClick","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/SketchBox/remake.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nconst Remake = () => {\r\n    const canvasRef = useRef(null);\r\n    const [canvasSize, setCanvasSize] = useState({ width: 512, height: 512 });\r\n    const [context, setContext] = useState(null);\r\n    const [images, setImages] = useState([]); // ���ڴ洢�Ϸŵ�ͼƬURL����\r\n    const [deleteButtons, setDeleteButtons] = useState([]); // ���ڴ洢ɾ����ť��״̬\r\n\r\n    // ��������غ��ȡCanvas������\r\n    useEffect(() => {\r\n        if (canvasRef.current) {\r\n            const ctx = canvasRef.current.getContext('2d');\r\n            setContext(ctx);\r\n        }\r\n    }, [canvasRef.current]);\r\n\r\n    // ����ͼƬ��ɾ����ť\r\n    useEffect(() => {\r\n        if (context) {\r\n            context.clearRect(0, 0, canvasSize.width, canvasSize.height);\r\n            images.forEach((imageSrc, index) => {\r\n                if (imageSrc) {\r\n                    const img = new Image();\r\n                    img.src = imageSrc;\r\n                    img.onload = () => {\r\n                        // ����ͼƬ��СΪCanvas��С������֮һ\r\n                        const scaledWidth = canvasSize.width / 3;\r\n                        const scaledHeight = canvasSize.height / 3;\r\n                        context.drawImage(img, 0, 0, img.width, img.height, 0, 0, scaledWidth, scaledHeight);\r\n                        // �����Ӧ��ɾ����ť�ɼ���������\r\n                        if (deleteButtons[index]) {\r\n                            drawDeleteButton(context, deleteButtons[index]);\r\n                        }\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }, [context, images, deleteButtons, canvasSize]);\r\n\r\n    // �����Ϸ��¼�\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        const files = event.dataTransfer.files;\r\n        if (files.length > 0 && files[0].type.startsWith('image/')) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                setImages((prevImages) => [...prevImages, e.target.result]);\r\n            };\r\n            reader.readAsDataURL(files[0]);\r\n        }\r\n    };\r\n\r\n    // �����Ϸ�\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    // ����Canvas����¼�\r\n    const handleCanvasClick = (event) => {\r\n        const rect = canvasRef.current.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n        // �����λ���Ƿ����κ�ͼƬ��\r\n        const clickedImageIndex = images.findIndex((_, index) => {\r\n            const image = new Image();\r\n            image.src = images[index];\r\n            image.width = canvasSize.width / 3;\r\n            image.height = canvasSize.height / 3;\r\n            return (\r\n                x >= image.width * index &&\r\n                x <= image.width * (index + 1) &&\r\n                y >= 0 &&\r\n                y <= image.height\r\n            );\r\n        });\r\n        if (clickedImageIndex !== -1) {\r\n            setDeleteButtons((prevButtons) => {\r\n                const newButtons = [...prevButtons];\r\n                newButtons[clickedImageIndex] = { x: canvasSize.width - 40, y: 0 };\r\n                return newButtons;\r\n            });\r\n        } else {\r\n            setDeleteButtons((prevButtons) => prevButtons.map(() => false));\r\n        }\r\n    };\r\n\r\n    // ����ɾ����ť\r\n    const drawDeleteButton = (ctx, position) => {\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.8)';\r\n        ctx.beginPath();\r\n        ctx.arc(position.x, position.y, 20, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n    };\r\n\r\n    // ����ɾ����ť����¼�\r\n    const handleDeleteButtonClick = (index) => {\r\n        setImages((prevImages) => {\r\n            const newImages = [...prevImages];\r\n            newImages.splice(index, 1);\r\n            return newImages;\r\n        });\r\n        setDeleteButtons((prevButtons) => {\r\n            const newButtons = [...prevButtons];\r\n            newButtons[index] = false;\r\n            return newButtons;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            style={{\r\n                height: '60vh',\r\n                width: '60vh',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={canvasSize.width}\r\n                height={canvasSize.height}\r\n                style={{ border: '1px solid black' }}\r\n                onClick={handleCanvasClick}\r\n            />\r\n            {images.map((imageSrc, index) =>\r\n                    deleteButtons[index] && (\r\n                        <div\r\n                            key={index}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                left: canvasSize.width - 40,\r\n                                top: index * (canvasSize.height / 3),\r\n                                width: 40,\r\n                                height: 40,\r\n                                backgroundColor: 'red',\r\n                                color: 'white',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => handleDeleteButtonClick(index)}\r\n                        >\r\n                            X\r\n                        </div>\r\n                    )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Remake;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;EACzE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACZ,IAAIK,SAAS,CAACW,OAAO,EAAE;MACnB,MAAMC,GAAG,GAAGZ,SAAS,CAACW,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;MAC9CP,UAAU,CAACM,GAAG,CAAC;IACnB;EACJ,CAAC,EAAE,CAACZ,SAAS,CAACW,OAAO,CAAC,CAAC;;EAEvB;EACAhB,SAAS,CAAC,MAAM;IACZ,IAAIU,OAAO,EAAE;MACTA,OAAO,CAACS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEb,UAAU,CAACE,KAAK,EAAEF,UAAU,CAACG,MAAM,CAAC;MAC5DG,MAAM,CAACQ,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QAChC,IAAID,QAAQ,EAAE;UACV,MAAME,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;UACvBD,GAAG,CAACE,GAAG,GAAGJ,QAAQ;UAClBE,GAAG,CAACG,MAAM,GAAG,MAAM;YACf;YACA,MAAMC,WAAW,GAAGrB,UAAU,CAACE,KAAK,GAAG,CAAC;YACxC,MAAMoB,YAAY,GAAGtB,UAAU,CAACG,MAAM,GAAG,CAAC;YAC1CC,OAAO,CAACmB,SAAS,CAACN,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEA,GAAG,CAACf,KAAK,EAAEe,GAAG,CAACd,MAAM,EAAE,CAAC,EAAE,CAAC,EAAEkB,WAAW,EAAEC,YAAY,CAAC;YACpF;YACA,IAAId,aAAa,CAACQ,KAAK,CAAC,EAAE;cACtBQ,gBAAgB,CAACpB,OAAO,EAAEI,aAAa,CAACQ,KAAK,CAAC,CAAC;YACnD;UACJ,CAAC;QACL;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACZ,OAAO,EAAEE,MAAM,EAAEE,aAAa,EAAER,UAAU,CAAC,CAAC;;EAEhD;EACA,MAAMyB,UAAU,GAAIC,KAAK,IAAK;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,KAAK,GAAGF,KAAK,CAACG,YAAY,CAACD,KAAK;IACtC,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,IAAIF,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;MACxD,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACb,MAAM,GAAIe,CAAC,IAAK;QACnB5B,SAAS,CAAE6B,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAED,CAAC,CAACE,MAAM,CAACC,MAAM,CAAC,CAAC;MAC/D,CAAC;MACDL,MAAM,CAACM,aAAa,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC;EACJ,CAAC;;EAED;EACA,MAAMY,cAAc,GAAId,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMc,iBAAiB,GAAIf,KAAK,IAAK;IACjC,MAAMgB,IAAI,GAAG3C,SAAS,CAACW,OAAO,CAACiC,qBAAqB,CAAC,CAAC;IACtD,MAAMC,CAAC,GAAGlB,KAAK,CAACmB,OAAO,GAAGH,IAAI,CAACI,IAAI;IACnC,MAAMC,CAAC,GAAGrB,KAAK,CAACsB,OAAO,GAAGN,IAAI,CAACO,GAAG;IAClC;IACA,MAAMC,iBAAiB,GAAG5C,MAAM,CAAC6C,SAAS,CAAC,CAACC,CAAC,EAAEpC,KAAK,KAAK;MACrD,MAAMqC,KAAK,GAAG,IAAInC,KAAK,CAAC,CAAC;MACzBmC,KAAK,CAAClC,GAAG,GAAGb,MAAM,CAACU,KAAK,CAAC;MACzBqC,KAAK,CAACnD,KAAK,GAAGF,UAAU,CAACE,KAAK,GAAG,CAAC;MAClCmD,KAAK,CAAClD,MAAM,GAAGH,UAAU,CAACG,MAAM,GAAG,CAAC;MACpC,OACIyC,CAAC,IAAIS,KAAK,CAACnD,KAAK,GAAGc,KAAK,IACxB4B,CAAC,IAAIS,KAAK,CAACnD,KAAK,IAAIc,KAAK,GAAG,CAAC,CAAC,IAC9B+B,CAAC,IAAI,CAAC,IACNA,CAAC,IAAIM,KAAK,CAAClD,MAAM;IAEzB,CAAC,CAAC;IACF,IAAI+C,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC1BzC,gBAAgB,CAAE6C,WAAW,IAAK;QAC9B,MAAMC,UAAU,GAAG,CAAC,GAAGD,WAAW,CAAC;QACnCC,UAAU,CAACL,iBAAiB,CAAC,GAAG;UAAEN,CAAC,EAAE5C,UAAU,CAACE,KAAK,GAAG,EAAE;UAAE6C,CAAC,EAAE;QAAE,CAAC;QAClE,OAAOQ,UAAU;MACrB,CAAC,CAAC;IACN,CAAC,MAAM;MACH9C,gBAAgB,CAAE6C,WAAW,IAAKA,WAAW,CAACE,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC;IACnE;EACJ,CAAC;;EAED;EACA,MAAMhC,gBAAgB,GAAGA,CAACb,GAAG,EAAE8C,QAAQ,KAAK;IACxC9C,GAAG,CAAC+C,SAAS,GAAG,sBAAsB;IACtC/C,GAAG,CAACgD,SAAS,CAAC,CAAC;IACfhD,GAAG,CAACiD,GAAG,CAACH,QAAQ,CAACb,CAAC,EAAEa,QAAQ,CAACV,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAGc,IAAI,CAACC,EAAE,CAAC;IACnDnD,GAAG,CAACoD,IAAI,CAAC,CAAC;EACd,CAAC;;EAED;EACA,MAAMC,uBAAuB,GAAIhD,KAAK,IAAK;IACvCT,SAAS,CAAE6B,UAAU,IAAK;MACtB,MAAM6B,SAAS,GAAG,CAAC,GAAG7B,UAAU,CAAC;MACjC6B,SAAS,CAACC,MAAM,CAAClD,KAAK,EAAE,CAAC,CAAC;MAC1B,OAAOiD,SAAS;IACpB,CAAC,CAAC;IACFxD,gBAAgB,CAAE6C,WAAW,IAAK;MAC9B,MAAMC,UAAU,GAAG,CAAC,GAAGD,WAAW,CAAC;MACnCC,UAAU,CAACvC,KAAK,CAAC,GAAG,KAAK;MACzB,OAAOuC,UAAU;IACrB,CAAC,CAAC;EACN,CAAC;EAED,oBACI3D,OAAA;IACIuE,MAAM,EAAE1C,UAAW;IACnB2C,UAAU,EAAE5B,cAAe;IAC3B6B,KAAK,EAAE;MACHlE,MAAM,EAAE,MAAM;MACdD,KAAK,EAAE,MAAM;MACboE,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE;IACd,CAAE;IAAAC,QAAA,gBAEF9E,OAAA;MACI+E,GAAG,EAAE5E,SAAU;MACfG,KAAK,EAAEF,UAAU,CAACE,KAAM;MACxBC,MAAM,EAAEH,UAAU,CAACG,MAAO;MAC1BkE,KAAK,EAAE;QAAEO,MAAM,EAAE;MAAkB,CAAE;MACrCC,OAAO,EAAEpC;IAAkB;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACD3E,MAAM,CAACkD,GAAG,CAAC,CAACzC,QAAQ,EAAEC,KAAK,KACpBR,aAAa,CAACQ,KAAK,CAAC,iBAChBpB,OAAA;MAEIyE,KAAK,EAAE;QACHZ,QAAQ,EAAE,UAAU;QACpBX,IAAI,EAAE9C,UAAU,CAACE,KAAK,GAAG,EAAE;QAC3B+C,GAAG,EAAEjC,KAAK,IAAIhB,UAAU,CAACG,MAAM,GAAG,CAAC,CAAC;QACpCD,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACV+E,eAAe,EAAE,KAAK;QACtBC,KAAK,EAAE,OAAO;QACdb,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBY,MAAM,EAAE;MACZ,CAAE;MACFP,OAAO,EAAEA,CAAA,KAAMb,uBAAuB,CAAChD,KAAK,CAAE;MAAA0D,QAAA,EACjD;IAED,GAjBS1D,KAAK;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBT,CAEjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnF,EAAA,CAxJID,MAAM;AAAAwF,EAAA,GAANxF,MAAM;AA0JZ,eAAeA,MAAM;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}