{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\containers\\\\ShowClothes\\\\ClothBox.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef } from 'react';\nimport './ShowClothes.css';\nimport clothImageSrc from './dress.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClothBox = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  sketchDataURL,\n  patternDataURL,\n  selected,\n  spacing\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const saveCanvasAsImage = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const imageData = patternDataURL;\n      const link = document.createElement('a');\n      link.href = imageData;\n      link.download = 'canvas-image.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }, [patternDataURL]);\n  useImperativeHandle(ref, () => ({\n    saveCanvasAsImage\n  }));\n\n  // useEffect(() => {\n  //   const clothCanvas = canvasRef.current;\n  //   const clothCtx = clothCanvas.getContext('2d');\n  //   const patternImage = new Image();\n  //   const clothImage = new Image();\n  //   const maskDataURL = '/image/img.png';\n  //   clothImage.onload = () => {\n  //     clothCanvas.width = clothImage.width;\n  //     clothCanvas.height = clothImage.height;\n  //     clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n  //     clothCtx.drawImage(clothImage, 0, 0);\n  //\n  //     patternImage.onload = () => {\n  //       const maskImage = new Image();\n  //       maskImage.onload = () => {\n  //         // ������ʱ����\n  //         const tempCanvas = document.createElement('canvas');\n  //         const tempCtx = tempCanvas.getContext('2d');\n  //         tempCanvas.width = clothCanvas.width;\n  //         tempCanvas.height = clothCanvas.height;\n  //\n  //         // ���ɰ������ϻ��ƻ���\n  //         tempCtx.drawImage(patternImage, 0, 0, maskImage.width, maskImage.height);\n  //\n  //         // �����������ƻ��ƻ���������ɰ�\n  //         const patternMaskCanvas = document.createElement('canvas');\n  //         const patternMaskCtx = patternMaskCanvas.getContext('2d');\n  //         patternMaskCanvas.width = maskImage.width;\n  //         patternMaskCanvas.height = maskImage.height;\n  //         patternMaskCtx.drawImage(maskImage, 0, 0);\n  //\n  //         // ����ʱ������Ӧ���ɰ�\n  //         const patternMaskImageData = patternMaskCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n  //         const tempImageData = tempCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n  //         for (let i = 0; i < patternMaskImageData.data.length; i += 4) {\n  //           if (patternMaskImageData.data[i + 3] === 0) {\n  //             tempImageData.data[i + 3] = 0;\n  //           }\n  //         }\n  //         tempCtx.putImageData(tempImageData, 0, 0);\n  //\n  //         // ������ʱ���������Ƶ��·�������\n  //         const scaleX = clothCanvas.width / maskImage.width;\n  //         const scaleY = clothCanvas.height / maskImage.height;\n  //         clothCtx.drawImage(tempCanvas, 0, 0, maskImage.width * scaleX, maskImage.height * scaleY);\n  //\n  //         // Reset composition operation\n  //         clothCtx.globalCompositeOperation = 'source-over';\n  //       };\n  //       maskImage.src = maskDataURL; // maskDataURL �Ǳ�ʾ�������Ĳ�������״�� PNG ͼƬ�� URL\n  //     };\n  //     patternImage.src = patternDataURL;\n  //   };\n  //\n  //   clothImage.src = clothImageSrc;\n  //\n  //\n  //\n  // }, [patternDataURL]);\n  useEffect(() => {\n    const clothCanvas = canvasRef.current;\n    const clothCtx = clothCanvas.getContext('2d');\n    const patternImage = new Image();\n    const clothImage = new Image();\n    const maskImage = new Image();\n    clothImage.onload = () => {\n      clothCanvas.width = clothImage.width;\n      clothCanvas.height = clothImage.height;\n      clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n      clothCtx.drawImage(clothImage, 0, 0);\n      patternImage.onload = () => {\n        maskImage.onload = () => {\n          // ���ɰ���������ɰ�ͼƬ\n          clothCtx.drawImage(maskImage, 0, 0);\n\n          // ���ɰ�������ƻ���ͼƬ\n          const patternImageData = clothCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n          const patternMaskImageData = clothCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n          for (let y = 0; y < maskImage.height; y++) {\n            for (let x = 0; x < maskImage.width; x++) {\n              const maskAlpha = patternMaskImageData.data[(y * maskImage.width + x) * 4 + 3];\n              if (maskAlpha > 0) {\n                const patternIndex = (y * maskImage.width + x) * 4;\n                patternImageData.data[patternIndex] = patternMaskImageData.data[patternIndex];\n                patternImageData.data[patternIndex + 1] = patternMaskImageData.data[patternIndex + 1];\n                patternImageData.data[patternIndex + 2] = patternMaskImageData.data[patternIndex + 2];\n                patternImageData.data[patternIndex + 3] = patternMaskImageData.data[patternIndex + 3];\n              }\n            }\n          }\n\n          // ���ϲ�����������ݻ��Ƶ��ɰ�������\n          clothCtx.putImageData(patternImageData, 0, 0);\n        };\n        maskImage.src = maskDataURL; // maskDataURL �Ǳ�ʾ�ɰ�����Ĳ�������״�� PNG ͼƬ�� URL\n      };\n      patternImage.src = patternDataURL; // patternDataURL �ǻ���ͼƬ�� URL\n    };\n    clothImage.src = clothImageSrc; // clothImageSrc ���·�ͼƬ�� URL\n  }, [patternDataURL, maskDataURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"cloth-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 7\n  }, this);\n}, \"7RjLYmlm9t/TsuBYxcEChX2Zm3k=\")), \"7RjLYmlm9t/TsuBYxcEChX2Zm3k=\");\n_c2 = ClothBox;\nexport default ClothBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClothBox$forwardRef\");\n$RefreshReg$(_c2, \"ClothBox\");","map":{"version":3,"names":["React","forwardRef","useCallback","useEffect","useImperativeHandle","useRef","clothImageSrc","jsxDEV","_jsxDEV","ClothBox","_s","_c","sketchDataURL","patternDataURL","selected","spacing","ref","canvasRef","saveCanvasAsImage","canvas","current","imageData","link","document","createElement","href","download","body","appendChild","click","removeChild","clothCanvas","clothCtx","getContext","patternImage","Image","clothImage","maskImage","onload","width","height","clearRect","drawImage","patternImageData","getImageData","patternMaskImageData","y","x","maskAlpha","data","patternIndex","putImageData","src","maskDataURL","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/containers/ShowClothes/ClothBox.js"],"sourcesContent":["import React, {forwardRef, useCallback, useEffect, useImperativeHandle, useRef} from 'react';\nimport './ShowClothes.css';\nimport clothImageSrc from './dress.png';\nconst ClothBox = forwardRef(({ sketchDataURL, patternDataURL,selected,spacing }, ref) => {\n  const canvasRef = useRef(null);\n\n\n  const saveCanvasAsImage = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const imageData = patternDataURL;\n      const link = document.createElement('a');\n      link.href = imageData;\n      link.download = 'canvas-image.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }, [patternDataURL]);\n\n\n  useImperativeHandle(ref, () => ({\n    saveCanvasAsImage,\n  }));\n\n  // useEffect(() => {\n  //   const clothCanvas = canvasRef.current;\n  //   const clothCtx = clothCanvas.getContext('2d');\n  //   const patternImage = new Image();\n  //   const clothImage = new Image();\n  //   const maskDataURL = '/image/img.png';\n  //   clothImage.onload = () => {\n  //     clothCanvas.width = clothImage.width;\n  //     clothCanvas.height = clothImage.height;\n  //     clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n  //     clothCtx.drawImage(clothImage, 0, 0);\n  //\n  //     patternImage.onload = () => {\n  //       const maskImage = new Image();\n  //       maskImage.onload = () => {\n  //         // ������ʱ����\n  //         const tempCanvas = document.createElement('canvas');\n  //         const tempCtx = tempCanvas.getContext('2d');\n  //         tempCanvas.width = clothCanvas.width;\n  //         tempCanvas.height = clothCanvas.height;\n  //\n  //         // ���ɰ������ϻ��ƻ���\n  //         tempCtx.drawImage(patternImage, 0, 0, maskImage.width, maskImage.height);\n  //\n  //         // �����������ƻ��ƻ���������ɰ�\n  //         const patternMaskCanvas = document.createElement('canvas');\n  //         const patternMaskCtx = patternMaskCanvas.getContext('2d');\n  //         patternMaskCanvas.width = maskImage.width;\n  //         patternMaskCanvas.height = maskImage.height;\n  //         patternMaskCtx.drawImage(maskImage, 0, 0);\n  //\n  //         // ����ʱ������Ӧ���ɰ�\n  //         const patternMaskImageData = patternMaskCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n  //         const tempImageData = tempCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n  //         for (let i = 0; i < patternMaskImageData.data.length; i += 4) {\n  //           if (patternMaskImageData.data[i + 3] === 0) {\n  //             tempImageData.data[i + 3] = 0;\n  //           }\n  //         }\n  //         tempCtx.putImageData(tempImageData, 0, 0);\n  //\n  //         // ������ʱ���������Ƶ��·�������\n  //         const scaleX = clothCanvas.width / maskImage.width;\n  //         const scaleY = clothCanvas.height / maskImage.height;\n  //         clothCtx.drawImage(tempCanvas, 0, 0, maskImage.width * scaleX, maskImage.height * scaleY);\n  //\n  //         // Reset composition operation\n  //         clothCtx.globalCompositeOperation = 'source-over';\n  //       };\n  //       maskImage.src = maskDataURL; // maskDataURL �Ǳ�ʾ�������Ĳ�������״�� PNG ͼƬ�� URL\n  //     };\n  //     patternImage.src = patternDataURL;\n  //   };\n  //\n  //   clothImage.src = clothImageSrc;\n  //\n  //\n  //\n  // }, [patternDataURL]);\n  useEffect(() => {\n    const clothCanvas = canvasRef.current;\n    const clothCtx = clothCanvas.getContext('2d');\n    const patternImage = new Image();\n    const clothImage = new Image();\n    const maskImage = new Image();\n\n    clothImage.onload = () => {\n      clothCanvas.width = clothImage.width;\n      clothCanvas.height = clothImage.height;\n      clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n      clothCtx.drawImage(clothImage, 0, 0);\n\n      patternImage.onload = () => {\n        maskImage.onload = () => {\n          // ���ɰ���������ɰ�ͼƬ\n          clothCtx.drawImage(maskImage, 0, 0);\n\n          // ���ɰ�������ƻ���ͼƬ\n          const patternImageData = clothCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n          const patternMaskImageData = clothCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n          for (let y = 0; y < maskImage.height; y++) {\n            for (let x = 0; x < maskImage.width; x++) {\n              const maskAlpha = patternMaskImageData.data[(y * maskImage.width + x) * 4 + 3];\n              if (maskAlpha > 0) {\n                const patternIndex = (y * maskImage.width + x) * 4;\n                patternImageData.data[patternIndex] = patternMaskImageData.data[patternIndex];\n                patternImageData.data[patternIndex + 1] = patternMaskImageData.data[patternIndex + 1];\n                patternImageData.data[patternIndex + 2] = patternMaskImageData.data[patternIndex + 2];\n                patternImageData.data[patternIndex + 3] = patternMaskImageData.data[patternIndex + 3];\n              }\n            }\n          }\n\n          // ���ϲ�����������ݻ��Ƶ��ɰ�������\n          clothCtx.putImageData(patternImageData, 0, 0);\n        };\n        maskImage.src = maskDataURL; // maskDataURL �Ǳ�ʾ�ɰ�����Ĳ�������״�� PNG ͼƬ�� URL\n      };\n      patternImage.src = patternDataURL; // patternDataURL �ǻ���ͼƬ�� URL\n    };\n\n    clothImage.src = clothImageSrc; // clothImageSrc ���·�ͼƬ�� URL\n  }, [patternDataURL, maskDataURL]);\n\n\n\n\n\n  return (\n\n      <div >\n        <canvas ref={canvasRef} className=\"cloth-canvas\" ></canvas>\n\n      </div>\n  );\n\n});\n\nexport default ClothBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}