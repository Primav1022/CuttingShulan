{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\SketchBox\\\\remake.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { fabric } from 'fabric';\nimport myimg from '../../images/show1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FabricCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const fabricCanvasRef = useRef(null);\n  const [defaultImageLoaded, setDefaultImageLoaded] = useState(false); // 新增状态用于追踪默认图片是否加载完成\n\n  useEffect(() => {\n    fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\n      width: window.innerHeight * 0.6,\n      height: window.innerHeight * 0.6,\n      selection: true,\n      preserveObjectStacking: true,\n      interactive: true\n    });\n\n    // 添加默认图片\n    fabric.Image.fromURL(myimg, img => {\n      img.set({\n        left: 50,\n        top: 50,\n        hasControls: true,\n        hasBorders: true,\n        cornerColor: 'black',\n        cornerSize: 10,\n        transparentCorners: false,\n        selectable: true,\n        originX: 'center',\n        originY: 'center',\n        lockRotation: false\n      });\n      fabricCanvasRef.current.add(img);\n      fabricCanvasRef.current.renderAll();\n      setDefaultImageLoaded(true); // 图片加载完成后设置状态为true\n    });\n\n    // 添加一个可交互的长方形\n    const rect = new fabric.Rect({\n      left: 150,\n      top: 150,\n      width: 100,\n      height: 100,\n      fill: 'red',\n      selectable: true,\n      hasControls: true,\n      hasBorders: true,\n      cornerColor: 'black',\n      cornerSize: 10,\n      originX: 'center',\n      originY: 'center',\n      lockRotation: false\n    });\n    fabricCanvasRef.current.add(rect);\n    fabricCanvasRef.current.renderAll();\n  }, []);\n  const handleDrop = e => {\n    e.preventDefault();\n    const dragData = e.dataTransfer.getData('application/json');\n    const {\n      type,\n      url\n    } = JSON.parse(dragData);\n    fabric.Image.fromURL(url, img => {\n      img.set({\n        left: e.clientX - canvasRef.current.getBoundingClientRect().left,\n        top: e.clientY - canvasRef.current.getBoundingClientRect().top,\n        width: 100,\n        height: 100,\n        hasControls: true,\n        hasBorders: true,\n        cornerColor: 'black',\n        cornerSize: 10,\n        transparentCorners: false,\n        selectable: true,\n        originX: 'center',\n        originY: 'center',\n        lockRotation: false\n      });\n      fabricCanvasRef.current.add(img);\n      fabricCanvasRef.current.setActiveObject(img);\n      fabricCanvasRef.current.renderAll();\n    });\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    style: {\n      border: '1px solid black',\n      maxWidth: '60vh',\n      maxHeight: '60vh',\n      position: 'relative'\n    },\n    children: defaultImageLoaded &&\n    /*#__PURE__*/\n    // 当默认图片加载完成后才渲染 Canvas\n    _jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 512,\n      height: 512,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(FabricCanvas, \"4cgouFA0p+Wpl+vHZfQRvHv6WRg=\");\n_c = FabricCanvas;\nexport default FabricCanvas;\nvar _c;\n$RefreshReg$(_c, \"FabricCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","fabric","myimg","jsxDEV","_jsxDEV","FabricCanvas","_s","canvasRef","fabricCanvasRef","defaultImageLoaded","setDefaultImageLoaded","current","Canvas","width","window","innerHeight","height","selection","preserveObjectStacking","interactive","Image","fromURL","img","set","left","top","hasControls","hasBorders","cornerColor","cornerSize","transparentCorners","selectable","originX","originY","lockRotation","add","renderAll","rect","Rect","fill","handleDrop","e","preventDefault","dragData","dataTransfer","getData","type","url","JSON","parse","clientX","getBoundingClientRect","clientY","setActiveObject","handleDragOver","onDrop","onDragOver","style","border","maxWidth","maxHeight","position","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/SketchBox/remake.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport myimg from '../../images/show1.png';\r\n\r\nconst FabricCanvas = () => {\r\n    const canvasRef = useRef(null);\r\n    const fabricCanvasRef = useRef(null);\r\n    const [defaultImageLoaded, setDefaultImageLoaded] = useState(false); // 新增状态用于追踪默认图片是否加载完成\r\n\r\n    useEffect(() => {\r\n        fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\r\n            width: window.innerHeight * 0.6,\r\n            height: window.innerHeight * 0.6,\r\n            selection: true,\r\n            preserveObjectStacking: true,\r\n            interactive: true,\r\n        });\r\n\r\n        // 添加默认图片\r\n        fabric.Image.fromURL(myimg, (img) => {\r\n            img.set({\r\n                left: 50,\r\n                top: 50,\r\n                hasControls: true,\r\n                hasBorders: true,\r\n                cornerColor: 'black',\r\n                cornerSize: 10,\r\n                transparentCorners: false,\r\n                selectable: true,\r\n                originX: 'center',\r\n                originY: 'center',\r\n                lockRotation: false\r\n            });\r\n            fabricCanvasRef.current.add(img);\r\n            fabricCanvasRef.current.renderAll();\r\n            setDefaultImageLoaded(true); // 图片加载完成后设置状态为true\r\n        });\r\n\r\n        // 添加一个可交互的长方形\r\n        const rect = new fabric.Rect({\r\n            left: 150,\r\n            top: 150,\r\n            width: 100,\r\n            height: 100,\r\n            fill: 'red',\r\n            selectable: true,\r\n            hasControls: true,\r\n            hasBorders: true,\r\n            cornerColor: 'black',\r\n            cornerSize: 10,\r\n            originX: 'center',\r\n            originY: 'center',\r\n            lockRotation: false\r\n        });\r\n        fabricCanvasRef.current.add(rect);\r\n        fabricCanvasRef.current.renderAll();\r\n    }, []);\r\n\r\n    const handleDrop = (e) => {\r\n        e.preventDefault();\r\n        const dragData = e.dataTransfer.getData('application/json');\r\n        const { type, url } = JSON.parse(dragData);\r\n        fabric.Image.fromURL(url, (img) => {\r\n            img.set({\r\n                left: e.clientX - canvasRef.current.getBoundingClientRect().left,\r\n                top: e.clientY - canvasRef.current.getBoundingClientRect().top,\r\n                width: 100,\r\n                height: 100,\r\n                hasControls: true,\r\n                hasBorders: true,\r\n                cornerColor: 'black',\r\n                cornerSize: 10,\r\n                transparentCorners: false,\r\n                selectable: true,\r\n                originX: 'center',\r\n                originY: 'center',\r\n                lockRotation: false,\r\n            });\r\n            fabricCanvasRef.current.add(img);\r\n            fabricCanvasRef.current.setActiveObject(img);\r\n            fabricCanvasRef.current.renderAll();\r\n        });\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            style={{ border: '1px solid black', maxWidth: '60vh', maxHeight: '60vh', position: 'relative' }}\r\n        >\r\n            {defaultImageLoaded && ( // 当默认图片加载完成后才渲染 Canvas\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    width={512}\r\n                    height={512}\r\n                    style={{ width: '100%', height: '100%' }}\r\n                ></canvas>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FabricCanvas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}