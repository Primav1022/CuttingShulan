{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\SketchBox\\\\remake.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from 'react';\n// import { fabric } from 'fabric';\n//\n// const FabricCanvas = ({ setDataUrl }) => {\n//     const canvasRef = useRef(null);\n//     const fabricCanvasRef = useRef(null);\n//     const [dataUrl, setDataUrlLocal] = useState(\"\");\n//\n//     const handleDragOver = (e) => {\n//         e.preventDefault();\n//     };\n//\n//     const handleDrop = (e) => {\n//         e.preventDefault();\n//         const dragData = e.dataTransfer.getData('application/json');\n//         const { type, url } = JSON.parse(dragData);\n//\n//         if (type === 'library') {\n//             fabric.Image.fromURL(\n//                 url,\n//                 (img) => {\n//                     img.set({\n//                         selectable: true,\n//                         scalable: true,\n//                         hasControls: true,\n//                     });\n//                     img.scale(0.25);\n//                     img.setCoords();\n//\n//                     addDeleteButton(img); // 添加删除按钮\n//                     saveCanvasToDataUrl();\n//                     fabricCanvasRef.current.add(img);\n//                 },\n//                 { crossOrigin: 'anonymous' }\n//             );\n//         }\n//     };\n//\n//     const addDeleteButton = (obj) => {\n//\n//         const deleteButton = new fabric.Text('x', {\n//             fontFamily: 'Arial',\n//             fontSize: 20,\n//             fill: 'red',\n//             originX: 'right',\n//             originY: 'top',\n//             selectable: false,\n//             evented: false,\n//         });\n//         deleteButton.set({\n//             top: obj.top,\n//             left: obj.left + obj.width,\n//         });\n//         deleteButton.on('mousedown', () => {\n//             fabricCanvasRef.current.remove(obj);\n//             fabricCanvasRef.current.remove(deleteButton);\n//             saveCanvasToDataUrl();\n//         });\n//         obj.deleteButton = deleteButton;\n//         fabricCanvasRef.current.add(deleteButton);\n//         fabricCanvasRef.current.bringToFront(deleteButton);\n//         fabricCanvasRef.current.renderAll();\n//     };\n//\n//     const removeDeleteButton = () => {\n//         fabricCanvasRef.current.getObjects().forEach(obj => {\n//             if (obj.deleteButton) {\n//                 fabricCanvasRef.current.remove(obj.deleteButton);\n//                 delete obj.deleteButton;\n//             }\n//         });\n//     };\n//\n//     const saveCanvasToDataUrl = () => {\n//         if (fabricCanvasRef.current) {\n//             const dataURL = fabricCanvasRef.current.toDataURL({\n//                 format: 'png',\n//                 multiplier: 1,\n//                 quality: 1\n//             });\n//             setDataUrlLocal(dataURL);\n//             setDataUrl(dataURL);\n//             console.log(dataURL);\n//         }\n//     };\n//\n//     useEffect(() => {\n//         if (!fabricCanvasRef.current) {\n//             fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\n//                 width: window.innerHeight * 0.6,\n//                 height: window.innerHeight * 0.6,\n//                 selection: true,\n//                 preserveObjectStacking: true,\n//                 interactive: true,\n//             });\n//         }\n//\n//         fabricCanvasRef.current.on('selection:cleared', removeDeleteButton);\n//\n//         return () => {\n//             fabricCanvasRef.current.off('selection:cleared', removeDeleteButton);\n//         };\n//\n//     }, []);\n//\n//     return (\n//         <div\n//             onDragOver={handleDragOver}\n//             onDrop={handleDrop}\n//             style={{ border: '1px solid black', maxWidth: '60vh', maxHeight: '60vh', position: 'relative', backgroundColor: 'white' }}\n//         >\n//             <canvas\n//                 ref={canvasRef}\n//                 width={512}\n//                 height={512}\n//                 style={{ width: '100%', height: '100%' }}\n//             ></canvas>\n//         </div>\n//     );\n// };\n//\n// export default FabricCanvas;\nimport React, { useRef, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FabricCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = new fabric.Canvas(canvasRef.current);\n\n    // 添加删除按钮\n    function addDeleteButton(object) {\n      var deleteButton = new fabric.Rect({\n        left: object.left + object.width / 2 - 10,\n        top: object.top - object.height / 2 - 10,\n        width: 20,\n        height: 20,\n        fill: 'red',\n        selectable: false\n      });\n      deleteButton.on('mousedown', function () {\n        canvas.remove(object);\n        canvas.remove(deleteButton);\n        canvas.renderAll();\n      });\n      canvas.add(deleteButton);\n    }\n\n    // 监听选定对象的事件，在选定对象时添加删除按钮\n    canvas.on('selection:created', function (event) {\n      var selectedObject = event.target;\n      addDeleteButton(selectedObject);\n    });\n\n    // 监听选定对象更新的事件，在更新时移除之前的删除按钮并添加新的删除按钮\n    canvas.on('selection:updated', function (event) {\n      var selectedObject = event.target;\n      canvas.remove(canvas.item(canvas.getObjects().length - 1)); // 移除之前的删除按钮\n      addDeleteButton(selectedObject);\n    });\n\n    // 监听取消选定对象的事件，在取消选定时移除删除按钮\n    canvas.on('selection:cleared', function (event) {\n      canvas.remove(canvas.item(canvas.getObjects().length - 1)); // 移除删除按钮\n    });\n\n    // 创建一个矩形对象\n    var rect = new fabric.Rect({\n      left: 100,\n      top: 100,\n      width: 50,\n      height: 50,\n      fill: 'red'\n    });\n    canvas.add(rect);\n    return () => {\n      canvas.dispose(); // 清理 Fabric.js 实例\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 400,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 12\n  }, this);\n};\n_s(FabricCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = FabricCanvas;\nexport default FabricCanvas;\nvar _c;\n$RefreshReg$(_c, \"FabricCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","fabric","jsxDEV","_jsxDEV","FabricCanvas","_s","canvasRef","canvas","Canvas","current","addDeleteButton","object","deleteButton","Rect","left","width","top","height","fill","selectable","on","remove","renderAll","add","event","selectedObject","target","item","getObjects","length","rect","dispose","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/SketchBox/remake.js"],"sourcesContent":["// import React, { useEffect, useRef, useState } from 'react';\r\n// import { fabric } from 'fabric';\r\n//\r\n// const FabricCanvas = ({ setDataUrl }) => {\r\n//     const canvasRef = useRef(null);\r\n//     const fabricCanvasRef = useRef(null);\r\n//     const [dataUrl, setDataUrlLocal] = useState(\"\");\r\n//\r\n//     const handleDragOver = (e) => {\r\n//         e.preventDefault();\r\n//     };\r\n//\r\n//     const handleDrop = (e) => {\r\n//         e.preventDefault();\r\n//         const dragData = e.dataTransfer.getData('application/json');\r\n//         const { type, url } = JSON.parse(dragData);\r\n//\r\n//         if (type === 'library') {\r\n//             fabric.Image.fromURL(\r\n//                 url,\r\n//                 (img) => {\r\n//                     img.set({\r\n//                         selectable: true,\r\n//                         scalable: true,\r\n//                         hasControls: true,\r\n//                     });\r\n//                     img.scale(0.25);\r\n//                     img.setCoords();\r\n//\r\n//                     addDeleteButton(img); // 添加删除按钮\r\n//                     saveCanvasToDataUrl();\r\n//                     fabricCanvasRef.current.add(img);\r\n//                 },\r\n//                 { crossOrigin: 'anonymous' }\r\n//             );\r\n//         }\r\n//     };\r\n//\r\n//     const addDeleteButton = (obj) => {\r\n//\r\n//         const deleteButton = new fabric.Text('x', {\r\n//             fontFamily: 'Arial',\r\n//             fontSize: 20,\r\n//             fill: 'red',\r\n//             originX: 'right',\r\n//             originY: 'top',\r\n//             selectable: false,\r\n//             evented: false,\r\n//         });\r\n//         deleteButton.set({\r\n//             top: obj.top,\r\n//             left: obj.left + obj.width,\r\n//         });\r\n//         deleteButton.on('mousedown', () => {\r\n//             fabricCanvasRef.current.remove(obj);\r\n//             fabricCanvasRef.current.remove(deleteButton);\r\n//             saveCanvasToDataUrl();\r\n//         });\r\n//         obj.deleteButton = deleteButton;\r\n//         fabricCanvasRef.current.add(deleteButton);\r\n//         fabricCanvasRef.current.bringToFront(deleteButton);\r\n//         fabricCanvasRef.current.renderAll();\r\n//     };\r\n//\r\n//     const removeDeleteButton = () => {\r\n//         fabricCanvasRef.current.getObjects().forEach(obj => {\r\n//             if (obj.deleteButton) {\r\n//                 fabricCanvasRef.current.remove(obj.deleteButton);\r\n//                 delete obj.deleteButton;\r\n//             }\r\n//         });\r\n//     };\r\n//\r\n//     const saveCanvasToDataUrl = () => {\r\n//         if (fabricCanvasRef.current) {\r\n//             const dataURL = fabricCanvasRef.current.toDataURL({\r\n//                 format: 'png',\r\n//                 multiplier: 1,\r\n//                 quality: 1\r\n//             });\r\n//             setDataUrlLocal(dataURL);\r\n//             setDataUrl(dataURL);\r\n//             console.log(dataURL);\r\n//         }\r\n//     };\r\n//\r\n//     useEffect(() => {\r\n//         if (!fabricCanvasRef.current) {\r\n//             fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\r\n//                 width: window.innerHeight * 0.6,\r\n//                 height: window.innerHeight * 0.6,\r\n//                 selection: true,\r\n//                 preserveObjectStacking: true,\r\n//                 interactive: true,\r\n//             });\r\n//         }\r\n//\r\n//         fabricCanvasRef.current.on('selection:cleared', removeDeleteButton);\r\n//\r\n//         return () => {\r\n//             fabricCanvasRef.current.off('selection:cleared', removeDeleteButton);\r\n//         };\r\n//\r\n//     }, []);\r\n//\r\n//     return (\r\n//         <div\r\n//             onDragOver={handleDragOver}\r\n//             onDrop={handleDrop}\r\n//             style={{ border: '1px solid black', maxWidth: '60vh', maxHeight: '60vh', position: 'relative', backgroundColor: 'white' }}\r\n//         >\r\n//             <canvas\r\n//                 ref={canvasRef}\r\n//                 width={512}\r\n//                 height={512}\r\n//                 style={{ width: '100%', height: '100%' }}\r\n//             ></canvas>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default FabricCanvas;\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst FabricCanvas = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvas = new fabric.Canvas(canvasRef.current);\r\n\r\n        // 添加删除按钮\r\n        function addDeleteButton(object) {\r\n            var deleteButton = new fabric.Rect({\r\n                left: object.left + object.width / 2 - 10,\r\n                top: object.top - object.height / 2 - 10,\r\n                width: 20,\r\n                height: 20,\r\n                fill: 'red',\r\n                selectable: false\r\n            });\r\n\r\n            deleteButton.on('mousedown', function() {\r\n                canvas.remove(object);\r\n                canvas.remove(deleteButton);\r\n                canvas.renderAll();\r\n            });\r\n\r\n            canvas.add(deleteButton);\r\n        }\r\n\r\n        // 监听选定对象的事件，在选定对象时添加删除按钮\r\n        canvas.on('selection:created', function(event) {\r\n            var selectedObject = event.target;\r\n            addDeleteButton(selectedObject);\r\n        });\r\n\r\n        // 监听选定对象更新的事件，在更新时移除之前的删除按钮并添加新的删除按钮\r\n        canvas.on('selection:updated', function(event) {\r\n            var selectedObject = event.target;\r\n            canvas.remove(canvas.item(canvas.getObjects().length - 1)); // 移除之前的删除按钮\r\n            addDeleteButton(selectedObject);\r\n        });\r\n\r\n        // 监听取消选定对象的事件，在取消选定时移除删除按钮\r\n        canvas.on('selection:cleared', function(event) {\r\n            canvas.remove(canvas.item(canvas.getObjects().length - 1)); // 移除删除按钮\r\n        });\r\n\r\n        // 创建一个矩形对象\r\n        var rect = new fabric.Rect({\r\n            left: 100,\r\n            top: 100,\r\n            width: 50,\r\n            height: 50,\r\n            fill: 'red'\r\n        });\r\n        canvas.add(rect);\r\n\r\n        return () => {\r\n            canvas.dispose(); // 清理 Fabric.js 实例\r\n        };\r\n    }, []);\r\n\r\n    return <canvas ref={canvasRef} width={400} height={400}></canvas>;\r\n};\r\n\r\nexport default FabricCanvas;\r\n"],"mappingshD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,MAAMO,MAAM,GAAG,IAAIN,MAAM,CAACO,MAAM,CAACF,SAAS,CAACG,OAAO,CAAC;;IAEnD;IACA,SAASC,eAAeA,CAACC,MAAM,EAAE;MAC7B,IAAIC,YAAY,GAAG,IAAIX,MAAM,CAACY,IAAI,CAAC;QAC/BC,IAAI,EAAEH,MAAM,CAACG,IAAI,GAAGH,MAAM,CAACI,KAAK,GAAG,CAAC,GAAG,EAAE;QACzCC,GAAG,EAAEL,MAAM,CAACK,GAAG,GAAGL,MAAM,CAACM,MAAM,GAAG,CAAC,GAAG,EAAE;QACxCF,KAAK,EAAE,EAAE;QACTE,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,KAAK;QACXC,UAAU,EAAE;MAChB,CAAC,CAAC;MAEFP,YAAY,CAACQ,EAAE,CAAC,WAAW,EAAE,YAAW;QACpCb,MAAM,CAACc,MAAM,CAACV,MAAM,CAAC;QACrBJ,MAAM,CAACc,MAAM,CAACT,YAAY,CAAC;QAC3BL,MAAM,CAACe,SAAS,CAAC,CAAC;MACtB,CAAC,CAAC;MAEFf,MAAM,CAACgB,GAAG,CAACX,YAAY,CAAC;IAC5B;;IAEA;IACAL,MAAM,CAACa,EAAE,CAAC,mBAAmB,EAAE,UAASI,KAAK,EAAE;MAC3C,IAAIC,cAAc,GAAGD,KAAK,CAACE,MAAM;MACjChB,eAAe,CAACe,cAAc,CAAC;IACnC,CAAC,CAAC;;IAEF;IACAlB,MAAM,CAACa,EAAE,CAAC,mBAAmB,EAAE,UAASI,KAAK,EAAE;MAC3C,IAAIC,cAAc,GAAGD,KAAK,CAACE,MAAM;MACjCnB,MAAM,CAACc,MAAM,CAACd,MAAM,CAACoB,IAAI,CAACpB,MAAM,CAACqB,UAAU,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5DnB,eAAe,CAACe,cAAc,CAAC;IACnC,CAAC,CAAC;;IAEF;IACAlB,MAAM,CAACa,EAAE,CAAC,mBAAmB,EAAE,UAASI,KAAK,EAAE;MAC3CjB,MAAM,CAACc,MAAM,CAACd,MAAM,CAACoB,IAAI,CAACpB,MAAM,CAACqB,UAAU,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC;;IAEF;IACA,IAAIC,IAAI,GAAG,IAAI7B,MAAM,CAACY,IAAI,CAAC;MACvBC,IAAI,EAAE,GAAG;MACTE,GAAG,EAAE,GAAG;MACRD,KAAK,EAAE,EAAE;MACTE,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE;IACV,CAAC,CAAC;IACFX,MAAM,CAACgB,GAAG,CAACO,IAAI,CAAC;IAEhB,OAAO,MAAM;MACTvB,MAAM,CAACwB,OAAO,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO5B,OAAA;IAAQ6B,GAAG,EAAE1B,SAAU;IAACS,KAAK,EAAE,GAAI;IAACE,MAAM,EAAE;EAAI;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AACrE,CAAC;AAAC/B,EAAA,CA5DID,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA8DlB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}