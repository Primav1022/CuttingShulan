{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\SketchBox\\\\remake.js\",\n  _s = $RefreshSig$();\n// FabricCanvas.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { fabric } from 'fabric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FabricCanvas = () => {\n  _s();\n  const canvasContainerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fabricCanvasRef = useRef(null);\n  const [eventListenersAdded, setEventListenersAdded] = useState(false);\n  useEffect(() => {\n    // 初始化fabric.Canvas\n    fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\n      width: window.innerHeight * 0.6,\n      height: window.innerHeight * 0.6\n    });\n\n    // 添加事件监听器\n    if (canvasRef.current) {\n      console.log(canvasRef.current);\n      canvasRef.current.addEventListener('dragover', handleDragOver);\n      console.log('dragover listener added');\n      canvasRef.current.addEventListener('drop', handleDrop);\n      console.log('drop listener added');\n      setEventListenersAdded(true);\n    }\n    return () => {\n      // 移除事件监听器\n      if (canvasRef.current) {\n        canvasRef.current.addEventListener('dragover', handleDragOver, true);\n        canvasRef.current.addEventListener('drop', handleDrop, true);\n      }\n    };\n  }, [eventListenersAdded]);\n\n  // 处理dragover事件\n  const handleDragOver = e => {\n    console.log('handleDragOver called'); // 确保这行代码在函数的第一行\n    console.log(e);\n    e.preventDefault();\n  };\n  const handleDrop = e => {\n    console.log('handleDrop called'); // 确保这行代码在函数的第一行\n    e.preventDefault();\n    // 其他处理逻辑...\n  };\n  // 处理drop事件\n  // const handleDrop = (e) => {\n  //     console.log('sucai')\n  //     e.preventDefault();\n  //     console.log('sucai')\n  //     // 获取拖拽的数据\n  //     const dragData = e.dataTransfer.getData('application/json');\n  //     const { type, url } = JSON.parse(dragData);\n  //\n  //     // 如果是来自素材库的拖拽数据\n  //     // 如果是来自素材库的拖拽数据\n  //     if (1) {\n  //         console.log('sucai')\n  //         // 创建fabric.Image对象\n  //         fabric.Image.fromURL(url, (img) => {\n  //             // 获取鼠标在画布容器中的相对位置\n  //             const offsetX = e.clientX - canvasContainerRef.current.getBoundingClientRect().left;\n  //             const offsetY = e.clientY - canvasContainerRef.current.getBoundingClientRect().top;\n  //\n  //             // 设置图片位置\n  //             img.set({\n  //                 left: offsetX - img.width / 2, // 让鼠标指针位于图像中心\n  //                 top: offsetY - img.height / 2,\n  //                 scaleX: 0.25, // 设置图片宽度为原来的四分之一\n  //                 scaleY: 0.25, // 设置图片高度为原来的四分之一\n  //             });\n  //\n  //             // 添加图片到画布\n  //             // 添加图片到画布\n  //             fabricCanvasRef.current.add(img);\n  //             console.log('shangchuan');\n  //             fabricCanvasRef.current.requestRenderAll(); // 强制画布重新渲染\n  //         });\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasContainerRef,\n    style: {\n      position: 'relative',\n      width: '60vh',\n      height: '60vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 512,\n      height: 512,\n      style: {\n        border: '1px solid black',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        backgroundColor: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(FabricCanvas, \"JEG6qngqPZzEnukqttlI/AhQIlo=\");\n_c = FabricCanvas;\nexport default FabricCanvas;\nvar _c;\n$RefreshReg$(_c, \"FabricCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","fabric","jsxDEV","_jsxDEV","FabricCanvas","_s","canvasContainerRef","canvasRef","fabricCanvasRef","eventListenersAdded","setEventListenersAdded","current","Canvas","width","window","innerHeight","height","console","log","addEventListener","handleDragOver","handleDrop","e","preventDefault","ref","style","position","children","border","maxWidth","maxHeight","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/SketchBox/remake.js"],"sourcesContent":["// FabricCanvas.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst FabricCanvas = () => {\r\n    const canvasContainerRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const fabricCanvasRef = useRef(null);\r\n    const [eventListenersAdded, setEventListenersAdded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // 初始化fabric.Canvas\r\n        fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\r\n            width: window.innerHeight * 0.6,\r\n            height: window.innerHeight * 0.6,\r\n        });\r\n\r\n        // 添加事件监听器\r\n        if (canvasRef.current) {\r\n            console.log(canvasRef.current)\r\n            canvasRef.current.addEventListener('dragover', handleDragOver);\r\n            console.log('dragover listener added');\r\n            canvasRef.current.addEventListener('drop', handleDrop);\r\n            console.log('drop listener added');\r\n            setEventListenersAdded(true);\r\n        }\r\n\r\n        return () => {\r\n            // 移除事件监听器\r\n            if (canvasRef.current) {\r\n                canvasRef.current.addEventListener('dragover', handleDragOver, true);\r\n                canvasRef.current.addEventListener('drop', handleDrop, true);\r\n\r\n            }\r\n        };\r\n    }, [eventListenersAdded]);\r\n\r\n    // 处理dragover事件\r\n    const handleDragOver = (e) => {\r\n        console.log('handleDragOver called'); // 确保这行代码在函数的第一行\r\n        console.log(e);\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDrop = (e) => {\r\n        console.log('handleDrop called'); // 确保这行代码在函数的第一行\r\n        e.preventDefault();\r\n        // 其他处理逻辑...\r\n    };\r\n    // 处理drop事件\r\n    // const handleDrop = (e) => {\r\n    //     console.log('sucai')\r\n    //     e.preventDefault();\r\n    //     console.log('sucai')\r\n    //     // 获取拖拽的数据\r\n    //     const dragData = e.dataTransfer.getData('application/json');\r\n    //     const { type, url } = JSON.parse(dragData);\r\n    //\r\n    //     // 如果是来自素材库的拖拽数据\r\n    //     // 如果是来自素材库的拖拽数据\r\n    //     if (1) {\r\n    //         console.log('sucai')\r\n    //         // 创建fabric.Image对象\r\n    //         fabric.Image.fromURL(url, (img) => {\r\n    //             // 获取鼠标在画布容器中的相对位置\r\n    //             const offsetX = e.clientX - canvasContainerRef.current.getBoundingClientRect().left;\r\n    //             const offsetY = e.clientY - canvasContainerRef.current.getBoundingClientRect().top;\r\n    //\r\n    //             // 设置图片位置\r\n    //             img.set({\r\n    //                 left: offsetX - img.width / 2, // 让鼠标指针位于图像中心\r\n    //                 top: offsetY - img.height / 2,\r\n    //                 scaleX: 0.25, // 设置图片宽度为原来的四分之一\r\n    //                 scaleY: 0.25, // 设置图片高度为原来的四分之一\r\n    //             });\r\n    //\r\n    //             // 添加图片到画布\r\n    //             // 添加图片到画布\r\n    //             fabricCanvasRef.current.add(img);\r\n    //             console.log('shangchuan');\r\n    //             fabricCanvasRef.current.requestRenderAll(); // 强制画布重新渲染\r\n    //         });\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div\r\n            ref={canvasContainerRef}\r\n            style={{\r\n                position: 'relative',\r\n                width: '60vh',\r\n                height: '60vh',\r\n            }}\r\n        >\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={512}\r\n                height={512}\r\n                style={{ border: '1px solid black', maxWidth: '100%', maxHeight: '100%', backgroundColor: 'white' }}\r\n            ></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FabricCanvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}