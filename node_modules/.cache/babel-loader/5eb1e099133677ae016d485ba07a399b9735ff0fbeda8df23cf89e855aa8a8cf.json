{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\containers\\\\ShowClothes\\\\ClothBox.js\",\n  _s = $RefreshSig$();\n// import React, {forwardRef, useCallback, useEffect, useImperativeHandle, useRef} from 'react';\n// import './ShowClothes.css';\n// import clothImageSrc from './dress.png';\n// const ClothBox = forwardRef(({ sketchDataURL, patternDataURL,selected,spacing }, ref) => {\n//   const canvasRef = useRef(null);\n//\n//\n//   const saveCanvasAsImage = useCallback(() => {\n//     const canvas = canvasRef.current;\n//     if (canvas) {\n//       const imageData = patternDataURL;\n//       const link = document.createElement('a');\n//       link.href = imageData;\n//       link.download = 'canvas-image.png';\n//       document.body.appendChild(link);\n//       link.click();\n//       document.body.removeChild(link);\n//     }\n//   }, [patternDataURL]);\n//\n//\n//   useImperativeHandle(ref, () => ({\n//     saveCanvasAsImage,\n//   }));\n//\n//   useEffect(() => {\n//     const clothCanvas = canvasRef.current;\n//     const clothCtx = clothCanvas.getContext('2d');\n//     const patternImage = new Image();\n//     const clothImage = new Image();\n//     const maskDataURL = '/image/img.png';\n//     clothImage.onload = () => {\n//       clothCanvas.width = clothImage.width;\n//       clothCanvas.height = clothImage.height;\n//       clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n//       clothCtx.drawImage(clothImage, 0, 0);\n//\n//       patternImage.onload = () => {\n//         const maskImage = new Image();\n//         maskImage.onload = () => {\n//           // ������ʱ����\n//           const tempCanvas = document.createElement('canvas');\n//           const tempCtx = tempCanvas.getContext('2d');\n//           tempCanvas.width = clothCanvas.width;\n//           tempCanvas.height = clothCanvas.height;\n//\n//           // ���ɰ������ϻ��ƻ���\n//           tempCtx.drawImage(patternImage, 0, 0, maskImage.width, maskImage.height);\n//\n//           // �����������ƻ��ƻ���������ɰ�\n//           const patternMaskCanvas = document.createElement('canvas');\n//           const patternMaskCtx = patternMaskCanvas.getContext('2d');\n//           patternMaskCanvas.width = maskImage.width;\n//           patternMaskCanvas.height = maskImage.height;\n//           patternMaskCtx.drawImage(maskImage, 0, 0);\n//\n//           // ����ʱ������Ӧ���ɰ�\n//           const patternMaskImageData = patternMaskCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n//           const tempImageData = tempCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n//           for (let i = 0; i < patternMaskImageData.data.length; i += 4) {\n//             if (patternMaskImageData.data[i + 3] === 0) {\n//               tempImageData.data[i + 3] = 0;\n//             }\n//           }\n//           tempCtx.putImageData(tempImageData, 0, 0);\n//\n//           // ������ʱ���������Ƶ��·�������\n//           const scaleX = clothCanvas.width / maskImage.width;\n//           const scaleY = clothCanvas.height / maskImage.height;\n//           clothCtx.drawImage(tempCanvas, 0, 0, maskImage.width * scaleX, maskImage.height * scaleY);\n//\n//           // Reset composition operation\n//           clothCtx.globalCompositeOperation = 'source-over';\n//         };\n//         maskImage.src = maskDataURL; // maskDataURL �Ǳ�ʾ�������Ĳ�������״�� PNG ͼƬ�� URL\n//       };\n//       patternImage.src = patternDataURL;\n//     };\n//\n//     clothImage.src = clothImageSrc;\n//\n//\n//\n//   }, [patternDataURL]);\n//\n//\n//\n//\n//\n//\n//   return (\n//\n//       <div >\n//         <canvas ref={canvasRef} className=\"cloth-canvas\" ></canvas>\n//\n//       </div>\n//   );\n//\n// });\n//\n// export default ClothBox;\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef } from 'react';\nimport './ShowClothes.css';\nimport clothImageSrc from './dress.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClothBox = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  patternDataURL\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const saveCanvasAsImage = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const link = document.createElement('a');\n      link.href = canvas.toDataURL();\n      link.download = 'canvas-image.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }, []);\n  useImperativeHandle(ref, () => ({\n    saveCanvasAsImage\n  }));\n  useEffect(() => {\n    const clothCanvas = canvasRef.current;\n    const clothCtx = clothCanvas.getContext('2d');\n    const patternImage = new Image();\n    const maskImage = new Image();\n    patternImage.onload = () => {\n      clothCanvas.width = patternImage.width;\n      clothCanvas.height = patternImage.height;\n      clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n      clothCtx.drawImage(patternImage, 0, 0);\n      maskImage.onload = () => {\n        // �����ɰ�\n        const maskCanvas = document.createElement('canvas');\n        const maskCtx = maskCanvas.getContext('2d');\n        maskCanvas.width = patternImage.width;\n        maskCanvas.height = patternImage.height;\n        maskCtx.drawImage(maskImage, 0, 0);\n        const patternImageData = clothCtx.getImageData(0, 0, patternImage.width, patternImage.height);\n        const maskImageData = maskCtx.getImageData(0, 0, patternImage.width, patternImage.height);\n        for (let i = 0; i < patternImageData.data.length; i += 4) {\n          if (maskImageData.data[i + 3] === 0) {\n            // ���ɰ����򲻻�������\n            patternImageData.data[i + 3] = 0;\n          }\n        }\n        clothCtx.putImageData(patternImageData, 0, 0);\n      };\n      maskImage.src = '/image/mask.png'; // �����ɰ�ͼƬ�� URL\n    };\n    patternImage.src = patternDataURL;\n  }, [patternDataURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"cloth-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 7\n  }, this);\n}, \"7RjLYmlm9t/TsuBYxcEChX2Zm3k=\")), \"7RjLYmlm9t/TsuBYxcEChX2Zm3k=\");\n_c2 = ClothBox;\nexport default ClothBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClothBox$forwardRef\");\n$RefreshReg$(_c2, \"ClothBox\");","map":{"version":3,"names":["React","forwardRef","useCallback","useEffect","useImperativeHandle","useRef","clothImageSrc","jsxDEV","_jsxDEV","ClothBox","_s","_c","patternDataURL","ref","canvasRef","saveCanvasAsImage","canvas","current","link","document","createElement","href","toDataURL","download","body","appendChild","click","removeChild","clothCanvas","clothCtx","getContext","patternImage","Image","maskImage","onload","width","height","clearRect","drawImage","maskCanvas","maskCtx","patternImageData","getImageData","maskImageData","i","data","length","putImageData","src","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/containers/ShowClothes/ClothBox.js"],"sourcesContent":["// import React, {forwardRef, useCallback, useEffect, useImperativeHandle, useRef} from 'react';\n// import './ShowClothes.css';\n// import clothImageSrc from './dress.png';\n// const ClothBox = forwardRef(({ sketchDataURL, patternDataURL,selected,spacing }, ref) => {\n//   const canvasRef = useRef(null);\n//\n//\n//   const saveCanvasAsImage = useCallback(() => {\n//     const canvas = canvasRef.current;\n//     if (canvas) {\n//       const imageData = patternDataURL;\n//       const link = document.createElement('a');\n//       link.href = imageData;\n//       link.download = 'canvas-image.png';\n//       document.body.appendChild(link);\n//       link.click();\n//       document.body.removeChild(link);\n//     }\n//   }, [patternDataURL]);\n//\n//\n//   useImperativeHandle(ref, () => ({\n//     saveCanvasAsImage,\n//   }));\n//\n//   useEffect(() => {\n//     const clothCanvas = canvasRef.current;\n//     const clothCtx = clothCanvas.getContext('2d');\n//     const patternImage = new Image();\n//     const clothImage = new Image();\n//     const maskDataURL = '/image/img.png';\n//     clothImage.onload = () => {\n//       clothCanvas.width = clothImage.width;\n//       clothCanvas.height = clothImage.height;\n//       clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n//       clothCtx.drawImage(clothImage, 0, 0);\n//\n//       patternImage.onload = () => {\n//         const maskImage = new Image();\n//         maskImage.onload = () => {\n//           // ������ʱ����\n//           const tempCanvas = document.createElement('canvas');\n//           const tempCtx = tempCanvas.getContext('2d');\n//           tempCanvas.width = clothCanvas.width;\n//           tempCanvas.height = clothCanvas.height;\n//\n//           // ���ɰ������ϻ��ƻ���\n//           tempCtx.drawImage(patternImage, 0, 0, maskImage.width, maskImage.height);\n//\n//           // �����������ƻ��ƻ���������ɰ�\n//           const patternMaskCanvas = document.createElement('canvas');\n//           const patternMaskCtx = patternMaskCanvas.getContext('2d');\n//           patternMaskCanvas.width = maskImage.width;\n//           patternMaskCanvas.height = maskImage.height;\n//           patternMaskCtx.drawImage(maskImage, 0, 0);\n//\n//           // ����ʱ������Ӧ���ɰ�\n//           const patternMaskImageData = patternMaskCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n//           const tempImageData = tempCtx.getImageData(0, 0, maskImage.width, maskImage.height);\n//           for (let i = 0; i < patternMaskImageData.data.length; i += 4) {\n//             if (patternMaskImageData.data[i + 3] === 0) {\n//               tempImageData.data[i + 3] = 0;\n//             }\n//           }\n//           tempCtx.putImageData(tempImageData, 0, 0);\n//\n//           // ������ʱ���������Ƶ��·�������\n//           const scaleX = clothCanvas.width / maskImage.width;\n//           const scaleY = clothCanvas.height / maskImage.height;\n//           clothCtx.drawImage(tempCanvas, 0, 0, maskImage.width * scaleX, maskImage.height * scaleY);\n//\n//           // Reset composition operation\n//           clothCtx.globalCompositeOperation = 'source-over';\n//         };\n//         maskImage.src = maskDataURL; // maskDataURL �Ǳ�ʾ�������Ĳ�������״�� PNG ͼƬ�� URL\n//       };\n//       patternImage.src = patternDataURL;\n//     };\n//\n//     clothImage.src = clothImageSrc;\n//\n//\n//\n//   }, [patternDataURL]);\n//\n//\n//\n//\n//\n//\n//   return (\n//\n//       <div >\n//         <canvas ref={canvasRef} className=\"cloth-canvas\" ></canvas>\n//\n//       </div>\n//   );\n//\n// });\n//\n// export default ClothBox;\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef } from 'react';\nimport './ShowClothes.css';\nimport clothImageSrc from './dress.png';\n\nconst ClothBox = forwardRef(({ patternDataURL }, ref) => {\n  const canvasRef = useRef(null);\n\n  const saveCanvasAsImage = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const link = document.createElement('a');\n      link.href = canvas.toDataURL();\n      link.download = 'canvas-image.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    saveCanvasAsImage,\n  }));\n\n  useEffect(() => {\n    const clothCanvas = canvasRef.current;\n    const clothCtx = clothCanvas.getContext('2d');\n    const patternImage = new Image();\n    const maskImage = new Image();\n\n    patternImage.onload = () => {\n      clothCanvas.width = patternImage.width;\n      clothCanvas.height = patternImage.height;\n      clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n      clothCtx.drawImage(patternImage, 0, 0);\n\n      maskImage.onload = () => {\n        // �����ɰ�\n        const maskCanvas = document.createElement('canvas');\n        const maskCtx = maskCanvas.getContext('2d');\n        maskCanvas.width = patternImage.width;\n        maskCanvas.height = patternImage.height;\n        maskCtx.drawImage(maskImage, 0, 0);\n\n        const patternImageData = clothCtx.getImageData(0, 0, patternImage.width, patternImage.height);\n        const maskImageData = maskCtx.getImageData(0, 0, patternImage.width, patternImage.height);\n\n        for (let i = 0; i < patternImageData.data.length; i += 4) {\n          if (maskImageData.data[i + 3] === 0) {\n            // ���ɰ����򲻻�������\n            patternImageData.data[i + 3] = 0;\n          }\n        }\n\n        clothCtx.putImageData(patternImageData, 0, 0);\n      };\n\n      maskImage.src = '/image/mask.png'; // �����ɰ�ͼƬ�� URL\n    };\n\n    patternImage.src = patternDataURL;\n  }, [patternDataURL]);\n\n  return (\n      <div>\n        <canvas ref={canvasRef} className=\"cloth-canvas\"></canvas>\n      </div>\n  );\n});\n\nexport default ClothBox;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}