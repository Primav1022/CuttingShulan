{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\SketchBox\\\\remake.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Remake = ({\n  targets,\n  setTargets\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 800,\n    height: 600\n  });\n  const [canvas, setCanvas] = useState(null);\n  useEffect(() => {\n    if (!canvas) {\n      const newCanvas = new fabric.Canvas(canvasRef.current, {\n        width: canvasSize.width,\n        height: canvasSize.height,\n        backgroundColor: 'white'\n      });\n      newCanvas.on('object:modified', e => {\n        const modifiedObject = e.target;\n        const updatedTargets = targets.map(target => {\n          if (target.id === modifiedObject.id) {\n            return {\n              ...target,\n              x: modifiedObject.left,\n              y: modifiedObject.top,\n              width: modifiedObject.getScaledWidth(),\n              height: modifiedObject.getScaledHeight(),\n              rotate: modifiedObject.angle\n            };\n          }\n          return target;\n        });\n        setTargets(updatedTargets);\n      });\n      setCanvas(newCanvas);\n    }\n    return () => {\n      if (canvas) {\n        canvas.dispose(); // 清理fabric.Canvas对象\n        setCanvas(null);\n      }\n    };\n  }, [canvas, canvasSize, targets, setTargets]);\n  useEffect(() => {\n    if (canvas && targets.length > 0) {\n      targets.forEach(target => {\n        fabric.Image.fromURL(target.src, img => {\n          img.set({\n            left: target.x,\n            top: target.y,\n            width: target.width,\n            height: target.height,\n            angle: target.rotate,\n            selectable: true\n          });\n          canvas.add(img);\n          canvas.renderAll();\n        });\n      });\n    }\n  }, [canvas, targets]);\n  const handleDrop = event => {\n    event.preventDefault();\n    const files = event.dataTransfer.files;\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const newTarget = {\n            id: new Date().getTime(),\n            // 为每个目标分配唯一ID\n            src: e.target.result,\n            x: canvasSize.width / 2,\n            // 放置在画布中心\n            y: canvasSize.height / 2,\n            // 放置在画布中心\n            width: 100,\n            // 默认宽度\n            height: 100,\n            // 默认高度\n            rotate: 0 // 默认旋转角度\n          };\n          setTargets(prevTargets => [...prevTargets, newTarget]);\n        };\n        reader.readAsDataURL(files[i]);\n      }\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    style: {\n      height: '60vh',\n      width: '80vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Remake, \"J3G/yyHo+q5Pk/LjyePT4PomNmw=\");\n_c = Remake;\nexport default Remake;\nvar _c;\n$RefreshReg$(_c, \"Remake\");","map":{"version":3,"names":["React","useRef","useState","useEffect","fabric","jsxDEV","_jsxDEV","Remake","targets","setTargets","_s","canvasRef","canvasSize","setCanvasSize","width","height","canvas","setCanvas","newCanvas","Canvas","current","backgroundColor","on","e","modifiedObject","target","updatedTargets","map","id","x","left","y","top","getScaledWidth","getScaledHeight","rotate","angle","dispose","length","forEach","Image","fromURL","src","img","set","selectable","add","renderAll","handleDrop","event","preventDefault","files","dataTransfer","i","type","startsWith","reader","FileReader","onload","newTarget","Date","getTime","result","prevTargets","readAsDataURL","handleDragOver","onDrop","onDragOver","style","display","justifyContent","alignItems","overflow","position","children","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/SketchBox/remake.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst Remake = ({ targets, setTargets }) => {\r\n    const canvasRef = useRef(null);\r\n    const [canvasSize, setCanvasSize] = useState({ width: 800, height: 600 });\r\n    const [canvas, setCanvas] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!canvas) {\r\n            const newCanvas = new fabric.Canvas(canvasRef.current, {\r\n                width: canvasSize.width,\r\n                height: canvasSize.height,\r\n                backgroundColor: 'white',\r\n            });\r\n\r\n            newCanvas.on('object:modified', e => {\r\n                const modifiedObject = e.target;\r\n                const updatedTargets = targets.map(target => {\r\n                    if (target.id === modifiedObject.id) {\r\n                        return {\r\n                            ...target,\r\n                            x: modifiedObject.left,\r\n                            y: modifiedObject.top,\r\n                            width: modifiedObject.getScaledWidth(),\r\n                            height: modifiedObject.getScaledHeight(),\r\n                            rotate: modifiedObject.angle,\r\n                        };\r\n                    }\r\n                    return target;\r\n                });\r\n                setTargets(updatedTargets);\r\n            });\r\n\r\n            setCanvas(newCanvas);\r\n        }\r\n\r\n        return () => {\r\n            if (canvas) {\r\n                canvas.dispose(); // 清理fabric.Canvas对象\r\n                setCanvas(null);\r\n            }\r\n        };\r\n    }, [canvas, canvasSize, targets, setTargets]);\r\n\r\n    useEffect(() => {\r\n        if (canvas && targets.length > 0) {\r\n            targets.forEach(target => {\r\n                fabric.Image.fromURL(target.src, img => {\r\n                    img.set({\r\n                        left: target.x,\r\n                        top: target.y,\r\n                        width: target.width,\r\n                        height: target.height,\r\n                        angle: target.rotate,\r\n                        selectable: true,\r\n                    });\r\n                    canvas.add(img);\r\n                    canvas.renderAll();\r\n                });\r\n            });\r\n        }\r\n    }, [canvas, targets]);\r\n\r\n    const handleDrop = event => {\r\n        event.preventDefault();\r\n        const files = event.dataTransfer.files;\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (files[i].type.startsWith('image/')) {\r\n                const reader = new FileReader();\r\n                reader.onload = e => {\r\n                    const newTarget = {\r\n                        id: new Date().getTime(), // 为每个目标分配唯一ID\r\n                        src: e.target.result,\r\n                        x: canvasSize.width / 2, // 放置在画布中心\r\n                        y: canvasSize.height / 2, // 放置在画布中心\r\n                        width: 100, // 默认宽度\r\n                        height: 100, // 默认高度\r\n                        rotate: 0, // 默认旋转角度\r\n                    };\r\n                    setTargets(prevTargets => [...prevTargets, newTarget]);\r\n                };\r\n                reader.readAsDataURL(files[i]);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDragOver = event => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            style={{\r\n                height: '60vh',\r\n                width: '80vh',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                overflow: 'hidden',\r\n                position: 'relative',\r\n            }}\r\n        >\r\n            <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Remake;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC;IAAEY,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;EACzE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACa,MAAM,EAAE;MACT,MAAME,SAAS,GAAG,IAAId,MAAM,CAACe,MAAM,CAACR,SAAS,CAACS,OAAO,EAAE;QACnDN,KAAK,EAAEF,UAAU,CAACE,KAAK;QACvBC,MAAM,EAAEH,UAAU,CAACG,MAAM;QACzBM,eAAe,EAAE;MACrB,CAAC,CAAC;MAEFH,SAAS,CAACI,EAAE,CAAC,iBAAiB,EAAEC,CAAC,IAAI;QACjC,MAAMC,cAAc,GAAGD,CAAC,CAACE,MAAM;QAC/B,MAAMC,cAAc,GAAGlB,OAAO,CAACmB,GAAG,CAACF,MAAM,IAAI;UACzC,IAAIA,MAAM,CAACG,EAAE,KAAKJ,cAAc,CAACI,EAAE,EAAE;YACjC,OAAO;cACH,GAAGH,MAAM;cACTI,CAAC,EAAEL,cAAc,CAACM,IAAI;cACtBC,CAAC,EAAEP,cAAc,CAACQ,GAAG;cACrBlB,KAAK,EAAEU,cAAc,CAACS,cAAc,CAAC,CAAC;cACtClB,MAAM,EAAES,cAAc,CAACU,eAAe,CAAC,CAAC;cACxCC,MAAM,EAAEX,cAAc,CAACY;YAC3B,CAAC;UACL;UACA,OAAOX,MAAM;QACjB,CAAC,CAAC;QACFhB,UAAU,CAACiB,cAAc,CAAC;MAC9B,CAAC,CAAC;MAEFT,SAAS,CAACC,SAAS,CAAC;IACxB;IAEA,OAAO,MAAM;MACT,IAAIF,MAAM,EAAE;QACRA,MAAM,CAACqB,OAAO,CAAC,CAAC,CAAC,CAAC;QAClBpB,SAAS,CAAC,IAAI,CAAC;MACnB;IACJ,CAAC;EACL,CAAC,EAAE,CAACD,MAAM,EAAEJ,UAAU,EAAEJ,OAAO,EAAEC,UAAU,CAAC,CAAC;EAE7CN,SAAS,CAAC,MAAM;IACZ,IAAIa,MAAM,IAAIR,OAAO,CAAC8B,MAAM,GAAG,CAAC,EAAE;MAC9B9B,OAAO,CAAC+B,OAAO,CAACd,MAAM,IAAI;QACtBrB,MAAM,CAACoC,KAAK,CAACC,OAAO,CAAChB,MAAM,CAACiB,GAAG,EAAEC,GAAG,IAAI;UACpCA,GAAG,CAACC,GAAG,CAAC;YACJd,IAAI,EAAEL,MAAM,CAACI,CAAC;YACdG,GAAG,EAAEP,MAAM,CAACM,CAAC;YACbjB,KAAK,EAAEW,MAAM,CAACX,KAAK;YACnBC,MAAM,EAAEU,MAAM,CAACV,MAAM;YACrBqB,KAAK,EAAEX,MAAM,CAACU,MAAM;YACpBU,UAAU,EAAE;UAChB,CAAC,CAAC;UACF7B,MAAM,CAAC8B,GAAG,CAACH,GAAG,CAAC;UACf3B,MAAM,CAAC+B,SAAS,CAAC,CAAC;QACtB,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAC/B,MAAM,EAAER,OAAO,CAAC,CAAC;EAErB,MAAMwC,UAAU,GAAGC,KAAK,IAAI;IACxBA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,KAAK,GAAGF,KAAK,CAACG,YAAY,CAACD,KAAK;IACtC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACb,MAAM,EAAEe,CAAC,EAAE,EAAE;MACnC,IAAIF,KAAK,CAACE,CAAC,CAAC,CAACC,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;QACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAGnC,CAAC,IAAI;UACjB,MAAMoC,SAAS,GAAG;YACd/B,EAAE,EAAE,IAAIgC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;YAAE;YAC1BnB,GAAG,EAAEnB,CAAC,CAACE,MAAM,CAACqC,MAAM;YACpBjC,CAAC,EAAEjB,UAAU,CAACE,KAAK,GAAG,CAAC;YAAE;YACzBiB,CAAC,EAAEnB,UAAU,CAACG,MAAM,GAAG,CAAC;YAAE;YAC1BD,KAAK,EAAE,GAAG;YAAE;YACZC,MAAM,EAAE,GAAG;YAAE;YACboB,MAAM,EAAE,CAAC,CAAE;UACf,CAAC;UACD1B,UAAU,CAACsD,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAEJ,SAAS,CAAC,CAAC;QAC1D,CAAC;QACDH,MAAM,CAACQ,aAAa,CAACb,KAAK,CAACE,CAAC,CAAC,CAAC;MAClC;IACJ;EACJ,CAAC;EAED,MAAMY,cAAc,GAAGhB,KAAK,IAAI;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;EAC1B,CAAC;EAED,oBACI5C,OAAA;IACI4D,MAAM,EAAElB,UAAW;IACnBmB,UAAU,EAAEF,cAAe;IAC3BG,KAAK,EAAE;MACHrD,MAAM,EAAE,MAAM;MACdD,KAAK,EAAE,MAAM;MACbuD,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAE;IACd,CAAE;IAAAC,QAAA,eAEFpE,OAAA;MAAQqE,GAAG,EAAEhE,SAAU;MAACyD,KAAK,EAAE;QAAEQ,MAAM,EAAE;MAAkB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEd,CAAC;AAACtE,EAAA,CAzGIH,MAAM;AAAA0E,EAAA,GAAN1E,MAAM;AA2GZ,eAAeA,MAAM;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}