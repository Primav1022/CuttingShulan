{"ast":null,"code":"var _this=this;import React,{useRef,useEffect,useCallback,forwardRef,useState}from'react';import'./ContinuousPatterns.css';// 引入样式文件\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ContinuousPatterns=/*#__PURE__*/forwardRef((_ref,ref)=>{let{dataUrl,sketchDataURL,selectedColor,connectionType,currentStep,onSave,spacing,setSpacing,imgscale,setImgscale}=_ref;const canvasRef=useRef(null);const[offsetX,setOffsetX]=useState(0);// 用于存储X轴偏移量的状态\n// 用于设置 canvas 尺寸的函数\nconst setCanvasSize=useCallback(()=>{const canvas=canvasRef.current;if(canvas&&canvas.parentElement){canvas.width=4096;canvas.height=2048;}},[]);// 绘制图案到 canvas\nconst drawPattern=useCallback(()=>{const canvas=canvasRef.current;const context=canvas.getContext('2d');// 清除 canvas\nclearCanvas();// 设置 canvas 背景颜色\ncontext.fillStyle=selectedColor;// 使用 selectedColor 作为背景颜色\ncontext.fillRect(0,0,canvas.width,canvas.height);// 填充整个 canvas\nconst img=new Image();img.onload=()=>{// const scaledWidth = img.width * 0.25+spacing; 'Butting',\n//     'Lapping 1/4 on a row',\n//     'Lapping 1/3 on a row',\n//     'Lapping 1/2 on a row',\n//     'Lapping 2/3 on a row',\n//     'Lapping 3/4 on a row'\n// const scaledHeight = img.height * 0.25+spacing;\nconst scaledWidth=img.width*imgscale;const scaledHeight=img.height*imgscale;const numTilesY=Math.ceil(canvas.height/scaledHeight);const offsetMap={'Butting':0,'Lapping 1/4 on a row':0.25,'Lapping 1/3 on a row':1/3,'Lapping 1/2 on a row':0.5,'Lapping 2/3 on a row':2/3,'Lapping 3/4 on a row':0.75};const jumpOffset=offsetMap[connectionType]||0;let currentOffsetX=0;for(let y=0;y<numTilesY;y++){currentOffsetX=y*(scaledWidth+spacing)*jumpOffset%(scaledWidth+spacing);for(let x=currentOffsetX-scaledWidth-spacing;x<canvas.width;x+=scaledWidth+spacing){context.drawImage(img,x,y*(scaledHeight+spacing),scaledWidth,scaledHeight);}}// 更新 offsetX 状态以存储当前的 X 轴偏移量\nsetOffsetX(currentOffsetX);handleSave();};img.src=dataUrl;},[dataUrl,connectionType,currentStep,selectedColor,setOffsetX,spacing,imgscale]);// 添加 setOffsetX 作为依赖项\nconst handleSave=useCallback(()=>{const canvas=canvasRef.current;if(canvas){const imageData=canvas.toDataURL(\"image/png\",1,300);onSave(imageData);// 将图像数据传递给父组件\n}},[onSave]);// 防抖函数\nconst debounce=useCallback((func,wait)=>{let timeout;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}clearTimeout(timeout);timeout=setTimeout(()=>{func.apply(_this,args);},wait);};},[]);const clearCanvas=()=>{const canvas=canvasRef.current;if(!canvas)return;const context=canvas.getContext('2d');// 清除画布\ncontext.clearRect(0,0,canvas.width,canvas.height);};useEffect(()=>{clearCanvas();// 清除画布\n// 设置 canvas 尺寸\nsetCanvasSize();// 绘制新的图案\ndrawPattern();// 定义窗口大小调整时的处理函数，该函数使用防抖以减少执行次数\nconst handleResize=debounce(()=>{clearCanvas();// 在设置新尺寸之前先清除画布\nsetCanvasSize();drawPattern();// 重新绘制图案\n},250);// 监听窗口大小调整事件\nwindow.addEventListener('resize',handleResize);// 清理函数\nreturn()=>{window.removeEventListener('resize',handleResize);};},[debounce,setCanvasSize,drawPattern,sketchDataURL,selectedColor,connectionType,currentStep,spacing,imgscale]);// 将spacing添加到依赖项数组中\nreturn/*#__PURE__*/ (// <div className=\"continuous-patterns\" style={{ backgroundColor: selectedColor }}>\n_jsx(\"div\",{className:\"continuous-patterns\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,id:\"myCanvas\",style:{width:'60vw',height:'60vh'}})}));});export default ContinuousPatterns;","map":{"version":3,"names":["React","useRef","useEffect","useCallback","forwardRef","useState","jsx","_jsx","ContinuousPatterns","_ref","ref","dataUrl","sketchDataURL","selectedColor","connectionType","currentStep","onSave","spacing","setSpacing","imgscale","setImgscale","canvasRef","offsetX","setOffsetX","setCanvasSize","canvas","current","parentElement","width","height","drawPattern","context","getContext","clearCanvas","fillStyle","fillRect","img","Image","onload","scaledWidth","scaledHeight","numTilesY","Math","ceil","offsetMap","jumpOffset","currentOffsetX","y","x","drawImage","handleSave","src","imageData","toDataURL","debounce","func","wait","timeout","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","_this","clearRect","handleResize","window","addEventListener","removeEventListener","className","children","id","style"],"sources":["F:/同济实习/cutting英文版/cutting/src/components/ContinuousPatterns/ContinuousPatterns.js"],"sourcesContent":["import React, {useRef, useEffect, useCallback, forwardRef, useState} from 'react';\r\nimport './ContinuousPatterns.css'; // 引入样式文件\r\n\r\n\r\n\r\n\r\nconst ContinuousPatterns = forwardRef(({ dataUrl,sketchDataURL, selectedColor, connectionType, currentStep, onSave,spacing,setSpacing,imgscale,setImgscale }, ref) => {\r\n    const canvasRef = useRef(null);\r\n    const [offsetX, setOffsetX] = useState(0); // 用于存储X轴偏移量的状态\r\n\r\n    // 用于设置 canvas 尺寸的函数\r\n    const setCanvasSize = useCallback(() => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas && canvas.parentElement) {\r\n            canvas.width = 4096;\r\n            canvas.height = 2048;\r\n\r\n        }\r\n    }, []);\r\n\r\n    // 绘制图案到 canvas\r\n    const drawPattern = useCallback(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n\r\n        // 清除 canvas\r\n        clearCanvas();\r\n        // 设置 canvas 背景颜色\r\n\r\n\r\n        context.fillStyle = selectedColor; // 使用 selectedColor 作为背景颜色\r\n        context.fillRect(0, 0, canvas.width, canvas.height); // 填充整个 canvas\r\n\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n            // const scaledWidth = img.width * 0.25+spacing; 'Butting',\r\n            //     'Lapping 1/4 on a row',\r\n            //     'Lapping 1/3 on a row',\r\n            //     'Lapping 1/2 on a row',\r\n            //     'Lapping 2/3 on a row',\r\n            //     'Lapping 3/4 on a row'\r\n            // const scaledHeight = img.height * 0.25+spacing;\r\n            const scaledWidth = img.width*imgscale ;\r\n            const scaledHeight = img.height*imgscale ;\r\n            const numTilesY = Math.ceil(canvas.height / scaledHeight);\r\n            const offsetMap = {\r\n                'Butting': 0,\r\n                'Lapping 1/4 on a row': 0.25,\r\n                'Lapping 1/3 on a row': 1 / 3,\r\n                'Lapping 1/2 on a row': 0.5,\r\n                'Lapping 2/3 on a row': 2 / 3,\r\n                'Lapping 3/4 on a row': 0.75,\r\n            };\r\n            const jumpOffset = offsetMap[connectionType] || 0;\r\n\r\n            let currentOffsetX = 0;\r\n\r\n            for (let y = 0; y < numTilesY; y++) {\r\n                currentOffsetX = y * (scaledWidth + spacing) * jumpOffset % (scaledWidth + spacing);\r\n\r\n                for (let x = currentOffsetX - scaledWidth - spacing; x < canvas.width; x += scaledWidth + spacing) {\r\n                    context.drawImage(img, x, y * (scaledHeight + spacing), scaledWidth, scaledHeight);\r\n                }\r\n            }\r\n\r\n            // 更新 offsetX 状态以存储当前的 X 轴偏移量\r\n            setOffsetX(currentOffsetX);\r\n            handleSave();\r\n        };\r\n\r\n        img.src = dataUrl;\r\n\r\n\r\n    }, [dataUrl, connectionType, currentStep, selectedColor, setOffsetX,spacing,imgscale]); // 添加 setOffsetX 作为依赖项\r\n    const handleSave = useCallback(() => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n            const imageData = canvas.toDataURL(\"image/png\", 1, 300);\r\n            onSave(imageData); // 将图像数据传递给父组件\r\n        }\r\n    }, [onSave]);\r\n    \r\n    // 防抖函数\r\n    const debounce = useCallback((func, wait) => {\r\n        let timeout;\r\n        return (...args) => {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => {\r\n                func.apply(this, args);\r\n            }, wait);\r\n        };\r\n    }, []);\r\n    const clearCanvas = () => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n        const context = canvas.getContext('2d');\r\n        // 清除画布\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        clearCanvas(); // 清除画布\r\n\r\n        // 设置 canvas 尺寸\r\n        setCanvasSize();\r\n\r\n        // 绘制新的图案\r\n        drawPattern();\r\n\r\n        // 定义窗口大小调整时的处理函数，该函数使用防抖以减少执行次数\r\n        const handleResize = debounce(() => {\r\n            clearCanvas(); // 在设置新尺寸之前先清除画布\r\n            setCanvasSize();\r\n            drawPattern(); // 重新绘制图案\r\n        }, 250);\r\n\r\n        // 监听窗口大小调整事件\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        // 清理函数\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, [debounce, setCanvasSize, drawPattern, sketchDataURL, selectedColor, connectionType, currentStep, spacing,imgscale]); // 将spacing添加到依赖项数组中\r\n\r\n    return (\r\n         // <div className=\"continuous-patterns\" style={{ backgroundColor: selectedColor }}>\r\n             <div className=\"continuous-patterns\" >\r\n        <canvas ref={canvasRef} id=\"myCanvas\" style={{ width: '60vw', height: '60vh' }}/>\r\n        {/*<button onClick={handleSave}>Save next</button>*/}\r\n        {/*<button onClick={saveCanvasAsImage}>Save as Image</button>*/}\r\n    </div>\r\n    );\r\n});\r\n\r\nexport default ContinuousPatterns;"],"mappings":"eAAA,MAAO,CAAAA,KAAK,EAAGC,MAAM,CAAEC,SAAS,CAAEC,WAAW,CAAEC,UAAU,CAAEC,QAAQ,KAAO,OAAO,CACjF,MAAO,0BAA0B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAKnC,KAAM,CAAAC,kBAAkB,cAAGJ,UAAU,CAAC,CAAAK,IAAA,CAAwHC,GAAG,GAAK,IAA/H,CAAEC,OAAO,CAACC,aAAa,CAAEC,aAAa,CAAEC,cAAc,CAAEC,WAAW,CAAEC,MAAM,CAACC,OAAO,CAACC,UAAU,CAACC,QAAQ,CAACC,WAAY,CAAC,CAAAX,IAAA,CACxJ,KAAM,CAAAY,SAAS,CAAGpB,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAACqB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAE;AAE3C;AACA,KAAM,CAAAmB,aAAa,CAAGrB,WAAW,CAAC,IAAM,CACpC,KAAM,CAAAsB,MAAM,CAAGJ,SAAS,CAACK,OAAO,CAChC,GAAID,MAAM,EAAIA,MAAM,CAACE,aAAa,CAAE,CAChCF,MAAM,CAACG,KAAK,CAAG,IAAI,CACnBH,MAAM,CAACI,MAAM,CAAG,IAAI,CAExB,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,WAAW,CAAG3B,WAAW,CAAC,IAAM,CAClC,KAAM,CAAAsB,MAAM,CAAGJ,SAAS,CAACK,OAAO,CAChC,KAAM,CAAAK,OAAO,CAAGN,MAAM,CAACO,UAAU,CAAC,IAAI,CAAC,CAEvC;AACAC,WAAW,CAAC,CAAC,CACb;AAGAF,OAAO,CAACG,SAAS,CAAGrB,aAAa,CAAE;AACnCkB,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAEV,MAAM,CAACG,KAAK,CAAEH,MAAM,CAACI,MAAM,CAAC,CAAE;AAErD,KAAM,CAAAO,GAAG,CAAG,GAAI,CAAAC,KAAK,CAAC,CAAC,CAEvBD,GAAG,CAACE,MAAM,CAAG,IAAM,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAC,WAAW,CAAGH,GAAG,CAACR,KAAK,CAACT,QAAQ,CACtC,KAAM,CAAAqB,YAAY,CAAGJ,GAAG,CAACP,MAAM,CAACV,QAAQ,CACxC,KAAM,CAAAsB,SAAS,CAAGC,IAAI,CAACC,IAAI,CAAClB,MAAM,CAACI,MAAM,CAAGW,YAAY,CAAC,CACzD,KAAM,CAAAI,SAAS,CAAG,CACd,SAAS,CAAE,CAAC,CACZ,sBAAsB,CAAE,IAAI,CAC5B,sBAAsB,CAAE,CAAC,CAAG,CAAC,CAC7B,sBAAsB,CAAE,GAAG,CAC3B,sBAAsB,CAAE,CAAC,CAAG,CAAC,CAC7B,sBAAsB,CAAE,IAC5B,CAAC,CACD,KAAM,CAAAC,UAAU,CAAGD,SAAS,CAAC9B,cAAc,CAAC,EAAI,CAAC,CAEjD,GAAI,CAAAgC,cAAc,CAAG,CAAC,CAEtB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGN,SAAS,CAAEM,CAAC,EAAE,CAAE,CAChCD,cAAc,CAAGC,CAAC,EAAIR,WAAW,CAAGtB,OAAO,CAAC,CAAG4B,UAAU,EAAIN,WAAW,CAAGtB,OAAO,CAAC,CAEnF,IAAK,GAAI,CAAA+B,CAAC,CAAGF,cAAc,CAAGP,WAAW,CAAGtB,OAAO,CAAE+B,CAAC,CAAGvB,MAAM,CAACG,KAAK,CAAEoB,CAAC,EAAIT,WAAW,CAAGtB,OAAO,CAAE,CAC/Fc,OAAO,CAACkB,SAAS,CAACb,GAAG,CAAEY,CAAC,CAAED,CAAC,EAAIP,YAAY,CAAGvB,OAAO,CAAC,CAAEsB,WAAW,CAAEC,YAAY,CAAC,CACtF,CACJ,CAEA;AACAjB,UAAU,CAACuB,cAAc,CAAC,CAC1BI,UAAU,CAAC,CAAC,CAChB,CAAC,CAEDd,GAAG,CAACe,GAAG,CAAGxC,OAAO,CAGrB,CAAC,CAAE,CAACA,OAAO,CAAEG,cAAc,CAAEC,WAAW,CAAEF,aAAa,CAAEU,UAAU,CAACN,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAE;AACxF,KAAM,CAAA+B,UAAU,CAAG/C,WAAW,CAAC,IAAM,CACjC,KAAM,CAAAsB,MAAM,CAAGJ,SAAS,CAACK,OAAO,CAChC,GAAID,MAAM,CAAE,CACR,KAAM,CAAA2B,SAAS,CAAG3B,MAAM,CAAC4B,SAAS,CAAC,WAAW,CAAE,CAAC,CAAE,GAAG,CAAC,CACvDrC,MAAM,CAACoC,SAAS,CAAC,CAAE;AACvB,CACJ,CAAC,CAAE,CAACpC,MAAM,CAAC,CAAC,CAEZ;AACA,KAAM,CAAAsC,QAAQ,CAAGnD,WAAW,CAAC,CAACoD,IAAI,CAAEC,IAAI,GAAK,CACzC,GAAI,CAAAC,OAAO,CACX,MAAO,WAAa,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAATC,IAAI,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAJF,IAAI,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GACXC,YAAY,CAACP,OAAO,CAAC,CACrBA,OAAO,CAAGQ,UAAU,CAAC,IAAM,CACvBV,IAAI,CAACW,KAAK,CAACC,KAAI,CAAEN,IAAI,CAAC,CAC1B,CAAC,CAAEL,IAAI,CAAC,CACZ,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CACN,KAAM,CAAAvB,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAR,MAAM,CAAGJ,SAAS,CAACK,OAAO,CAChC,GAAI,CAACD,MAAM,CAAE,OACb,KAAM,CAAAM,OAAO,CAAGN,MAAM,CAACO,UAAU,CAAC,IAAI,CAAC,CACvC;AACAD,OAAO,CAACqC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE3C,MAAM,CAACG,KAAK,CAAEH,MAAM,CAACI,MAAM,CAAC,CACxD,CAAC,CAID3B,SAAS,CAAC,IAAM,CACZ+B,WAAW,CAAC,CAAC,CAAE;AAEf;AACAT,aAAa,CAAC,CAAC,CAEf;AACAM,WAAW,CAAC,CAAC,CAEb;AACA,KAAM,CAAAuC,YAAY,CAAGf,QAAQ,CAAC,IAAM,CAChCrB,WAAW,CAAC,CAAC,CAAE;AACfT,aAAa,CAAC,CAAC,CACfM,WAAW,CAAC,CAAC,CAAE;AACnB,CAAC,CAAE,GAAG,CAAC,CAEP;AACAwC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,CAAEF,YAAY,CAAC,CAE/C;AACA,MAAO,IAAM,CACTC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CACtD,CAAC,CACL,CAAC,CAAE,CAACf,QAAQ,CAAE9B,aAAa,CAAEM,WAAW,CAAElB,aAAa,CAAEC,aAAa,CAAEC,cAAc,CAAEC,WAAW,CAAEE,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAE;AAEzH,oBACK;AACIZ,IAAA,QAAKkE,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cACzCnE,IAAA,WAAQG,GAAG,CAAEW,SAAU,CAACsD,EAAE,CAAC,UAAU,CAACC,KAAK,CAAE,CAAEhD,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAC,CAAC,CAGhF,CAAC,EAEV,CAAC,CAAC,CAEF,cAAe,CAAArB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}