{"ast":null,"code":"// import React from 'react';\n// import './MaterialLibrary.css'; // 确保你有一个CSS文件来定义样式\n//\n// function MaterialLibrary({ materials }) { // 通过props接收materials\n//   // 不再需要内部状态images，因为我们将使用从props传递过来的materials数组\n//  // console.log(materials)\n//  // 在 MaterialLibrary 组件中\n// // MaterialLibrary 组件内\n// function handleDragStart(event, imageUrl) {\n//   // 将图片 URL 作为拖拽数据设置\n//   const dragData = JSON.stringify({ type: 'library', url: imageUrl });\n//   event.dataTransfer.setData('application/json', dragData);\n// }\n//   return (\n//     <div className=\"materialall\">\n//       <div className=\"title-bar\">\n//         <span>\n//             <svg width=\"15\" height=\"13\" viewBox=\"0 0 25 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n// <path\n//     d=\"M16.3894 6.75092L15.941 6.9722L16.3894 6.75092L13.8451 1.5957C13.2949 0.480832 11.7051 0.480838 11.1549 1.5957L8.61064 6.75092C8.53781 6.89849 8.39703 7.00078 8.23418 7.02444L2.54506 7.85112C1.31472 8.02989 0.823464 9.54185 1.71374 10.4097L5.83042 14.4224C5.94826 14.5373 6.00204 14.7028 5.97422 14.865L5.0024 20.5311C4.79224 21.7565 6.07839 22.6909 7.17883 22.1124L12.2673 19.4372C12.413 19.3606 12.587 19.3606 12.7327 19.4372L17.8212 22.1124C18.9216 22.6909 20.2078 21.7565 19.9976 20.5311L19.0258 14.865C18.998 14.7028 19.0517 14.5373 19.1696 14.4224L23.2863 10.4097C24.1765 9.54185 23.6853 8.02989 22.4549 7.85112L16.7658 7.02444C16.603 7.00077 16.4622 6.89849 16.3894 6.75092Z\"\n//     fill=\"#333333\" stroke=\"#333333\"/>\n// </svg>\n// <span className=\"skipspan\"> </span>\n//             Material Library</span>\n//       </div>\n//         <div className=\"image-container\">\n//             {materials && materials.map((image, index) => ( // 使用传入的materials渲染图片\n//                 <img\n//                     key={index}\n//                     src={image}\n//                     draggable=\"true\"\n//                     onDragStart={(e) => handleDragStart(e, image)}\n//                     alt={`Material ${index}`}\n//                     className=\"material-image\"\n//                 />\n//\n//             ))}\n//         </div>\n//     </div>\n//   );\n// }\n//\n// export default MaterialLibrary;\n\n// import React from 'react';\n// import './MaterialLibrary.css'; // 确保你有一个CSS文件来定义样式\n//\n// function MaterialLibrary({ materials, onDragStart }) { // 修改函数签名，添加onDragStart props\n//                                                        // 不再需要内部状态images，因为我们将使用从props传递过来的materials数组\n//                                                        // console.log(materials)\n//                                                        // 在 MaterialLibrary 组件内\n//                                                        // MaterialLibrary 组件内\n//     function handleDragStart(event, imageUrl) {\n//         // 将图片 URL 作为拖拽数据设置\n//         const dragData = JSON.stringify({ type: 'library', url: imageUrl });\n//         event.dataTransfer.setData('application/json', dragData);\n//     }\n//\n//     return (\n//         <div className=\"materialall\">\n//             <div className=\"title-bar\">\n//         <span>\n//             <svg width=\"15\" height=\"13\" viewBox=\"0 0 25 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n// <path\n//     d=\"M16.3894 6.75092L15.941 6.9722L16.3894 6.75092L13.8451 1.5957C13.2949 0.480832 11.7051 0.480838 11.1549 1.5957L8.61064 6.75092C8.53781 6.89849 8.39703 7.00078 8.23418 7.02444L2.54506 7.85112C1.31472 8.02989 0.823464 9.54185 1.71374 10.4097L5.83042 14.4224C5.94826 14.5373 6.00204 14.7028 5.97422 14.865L5.0024 20.5311C4.79224 21.7565 6.07839 22.6909 7.17883 22.1124L12.2673 19.4372C12.413 19.3606 12.587 19.3606 12.7327 19.4372L17.8212 22.1124C18.9216 22.6909 20.2078 21.7565 19.9976 20.5311L19.0258 14.865C18.998 14.7028 19.0517 14.5373 19.1696 14.4224L23.2863 10.4097C24.1765 9.54185 23.6853 8.02989 22.4549 7.85112L16.7658 7.02444C16.603 7.00077 16.4622 6.89849 16.3894 6.75092Z\"\n//     fill=\"#333333\" stroke=\"#333333\"/>\n// </svg>\n// <span className=\"skipspan\"> </span>\n//             Material Library</span>\n//             </div>\n//             <div className=\"image-container\">\n//                 {materials && materials.map((image, index) => ( // 使用传入的materials渲染图片\n//                     <img\n//                         key={index}\n//                         src={image}\n//                         draggable=\"true\"\n//                         onDragStart={(e) => handleDragStart(e, image)}\n//                         alt={`Material ${index}`}\n//                         className=\"material-image\"\n//                     />\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default MaterialLibrary;","map":{"version":3,"names":[],"sources":["F:/同济实习/cutting/src/components/MaterialLibrary/MaterialLibrary.js"],"sourcesContent":["// import React from 'react';\r\n// import './MaterialLibrary.css'; // 确保你有一个CSS文件来定义样式\r\n//\r\n// function MaterialLibrary({ materials }) { // 通过props接收materials\r\n//   // 不再需要内部状态images，因为我们将使用从props传递过来的materials数组\r\n//  // console.log(materials)\r\n//  // 在 MaterialLibrary 组件中\r\n// // MaterialLibrary 组件内\r\n// function handleDragStart(event, imageUrl) {\r\n//   // 将图片 URL 作为拖拽数据设置\r\n//   const dragData = JSON.stringify({ type: 'library', url: imageUrl });\r\n//   event.dataTransfer.setData('application/json', dragData);\r\n// }\r\n//   return (\r\n//     <div className=\"materialall\">\r\n//       <div className=\"title-bar\">\r\n//         <span>\r\n//             <svg width=\"15\" height=\"13\" viewBox=\"0 0 25 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n// <path\r\n//     d=\"M16.3894 6.75092L15.941 6.9722L16.3894 6.75092L13.8451 1.5957C13.2949 0.480832 11.7051 0.480838 11.1549 1.5957L8.61064 6.75092C8.53781 6.89849 8.39703 7.00078 8.23418 7.02444L2.54506 7.85112C1.31472 8.02989 0.823464 9.54185 1.71374 10.4097L5.83042 14.4224C5.94826 14.5373 6.00204 14.7028 5.97422 14.865L5.0024 20.5311C4.79224 21.7565 6.07839 22.6909 7.17883 22.1124L12.2673 19.4372C12.413 19.3606 12.587 19.3606 12.7327 19.4372L17.8212 22.1124C18.9216 22.6909 20.2078 21.7565 19.9976 20.5311L19.0258 14.865C18.998 14.7028 19.0517 14.5373 19.1696 14.4224L23.2863 10.4097C24.1765 9.54185 23.6853 8.02989 22.4549 7.85112L16.7658 7.02444C16.603 7.00077 16.4622 6.89849 16.3894 6.75092Z\"\r\n//     fill=\"#333333\" stroke=\"#333333\"/>\r\n// </svg>\r\n// <span className=\"skipspan\"> </span>\r\n//             Material Library</span>\r\n//       </div>\r\n//         <div className=\"image-container\">\r\n//             {materials && materials.map((image, index) => ( // 使用传入的materials渲染图片\r\n//                 <img\r\n//                     key={index}\r\n//                     src={image}\r\n//                     draggable=\"true\"\r\n//                     onDragStart={(e) => handleDragStart(e, image)}\r\n//                     alt={`Material ${index}`}\r\n//                     className=\"material-image\"\r\n//                 />\r\n//\r\n//             ))}\r\n//         </div>\r\n//     </div>\r\n//   );\r\n// }\r\n//\r\n// export default MaterialLibrary;\r\n\r\n\r\n// import React from 'react';\r\n// import './MaterialLibrary.css'; // 确保你有一个CSS文件来定义样式\r\n//\r\n// function MaterialLibrary({ materials, onDragStart }) { // 修改函数签名，添加onDragStart props\r\n//                                                        // 不再需要内部状态images，因为我们将使用从props传递过来的materials数组\r\n//                                                        // console.log(materials)\r\n//                                                        // 在 MaterialLibrary 组件内\r\n//                                                        // MaterialLibrary 组件内\r\n//     function handleDragStart(event, imageUrl) {\r\n//         // 将图片 URL 作为拖拽数据设置\r\n//         const dragData = JSON.stringify({ type: 'library', url: imageUrl });\r\n//         event.dataTransfer.setData('application/json', dragData);\r\n//     }\r\n//\r\n//     return (\r\n//         <div className=\"materialall\">\r\n//             <div className=\"title-bar\">\r\n//         <span>\r\n//             <svg width=\"15\" height=\"13\" viewBox=\"0 0 25 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n// <path\r\n//     d=\"M16.3894 6.75092L15.941 6.9722L16.3894 6.75092L13.8451 1.5957C13.2949 0.480832 11.7051 0.480838 11.1549 1.5957L8.61064 6.75092C8.53781 6.89849 8.39703 7.00078 8.23418 7.02444L2.54506 7.85112C1.31472 8.02989 0.823464 9.54185 1.71374 10.4097L5.83042 14.4224C5.94826 14.5373 6.00204 14.7028 5.97422 14.865L5.0024 20.5311C4.79224 21.7565 6.07839 22.6909 7.17883 22.1124L12.2673 19.4372C12.413 19.3606 12.587 19.3606 12.7327 19.4372L17.8212 22.1124C18.9216 22.6909 20.2078 21.7565 19.9976 20.5311L19.0258 14.865C18.998 14.7028 19.0517 14.5373 19.1696 14.4224L23.2863 10.4097C24.1765 9.54185 23.6853 8.02989 22.4549 7.85112L16.7658 7.02444C16.603 7.00077 16.4622 6.89849 16.3894 6.75092Z\"\r\n//     fill=\"#333333\" stroke=\"#333333\"/>\r\n// </svg>\r\n// <span className=\"skipspan\"> </span>\r\n//             Material Library</span>\r\n//             </div>\r\n//             <div className=\"image-container\">\r\n//                 {materials && materials.map((image, index) => ( // 使用传入的materials渲染图片\r\n//                     <img\r\n//                         key={index}\r\n//                         src={image}\r\n//                         draggable=\"true\"\r\n//                         onDragStart={(e) => handleDragStart(e, image)}\r\n//                         alt={`Material ${index}`}\r\n//                         className=\"material-image\"\r\n//                     />\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default MaterialLibrary;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}