{"ast":null,"code":"import React,{useRef,useImperativeHandle,forwardRef,useCallback}from'react';import StepBar from'../../components/StepBar/StepBar';import'./MakeContinuous.css';import ColorSelector from'../../components/ColorSelector.js/ColorSelector';import ConnectionSelector from'../../components/ColorSelector.js/ConnectionSelector';import ContinuousPatterns from'../../components/ContinuousPatterns/ContinuousPatterns';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MakeContinuous=/*#__PURE__*/forwardRef((props,ref)=>{const canvasRef=useRef(null);useImperativeHandle(ref,()=>({clearCanvas(){const canvas=canvasRef.current;if(!canvas)return;const context=canvas.getContext('2d');context.clearRect(0,0,canvas.width,canvas.height);}}));// const [connectionType, setConnectionType] = useState('ƽ��');\n// �� props �н⹹����Ҫ�Ĳ���\nconst{currentStep,handleNextStep,handlePrevStep,sketchDataURL,onSave,spacing,setSpacing,imgscale,setImgscale,selectedColor,setSelectedColor,setConnectionType,connectionType}=props;// const [selectedColor, setSelectedColor] = useState('#FFFFFF'); // Ĭ��Ϊ��ɫ\nconst handleConnectionTypeChange=useCallback(newType=>{setConnectionType(newType);},[setConnectionType]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container containerColumn\",style:props.style,children:[/*#__PURE__*/_jsx(StepBar,{currentStep:currentStep,handleNextStep:handleNextStep,handlePrevStep:handlePrevStep}),/*#__PURE__*/_jsx(\"div\",{className:\"middle\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bgcolor\",children:/*#__PURE__*/_jsx(ContinuousPatterns,{imgscale:imgscale,setImgscale:setImgscale,spacing:spacing,setSpacing:setSpacing,onSave:onSave,sketchDataURL:sketchDataURL,selectedColor:selectedColor,connectionType:connectionType,ref:ref,setConnectionType:setConnectionType})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"selectors-wrapper\",children:[/*#__PURE__*/_jsx(ColorSelector,{onColorSelect:setSelectedColor,selectedColor:selectedColor}),/*#__PURE__*/_jsx(ConnectionSelector,{selectedConnection:connectionType,onConnectionTypeChange:handleConnectionTypeChange,onColorSelect:setSelectedColor,selectedColor:selectedColor,setConnectionType:setConnectionType})]})})]});});export default MakeContinuous;","map":{"version":3,"names":["React","useRef","useImperativeHandle","forwardRef","useCallback","StepBar","ColorSelector","ConnectionSelector","ContinuousPatterns","jsx","_jsx","jsxs","_jsxs","MakeContinuous","props","ref","canvasRef","clearCanvas","canvas","current","context","getContext","clearRect","width","height","currentStep","handleNextStep","handlePrevStep","sketchDataURL","onSave","spacing","setSpacing","imgscale","setImgscale","selectedColor","setSelectedColor","setConnectionType","connectionType","handleConnectionTypeChange","newType","className","style","children","onColorSelect","selectedConnection","onConnectionTypeChange"],"sources":["F:/同济实习/cutting/src/containers/MakeContinuous/MakeContinuous.js"],"sourcesContent":["\r\nimport React, {  useRef, useImperativeHandle, forwardRef, useCallback} from 'react';\r\nimport StepBar from '../../components/StepBar/StepBar';\r\nimport './MakeContinuous.css';\r\nimport ColorSelector from '../../components/ColorSelector.js/ColorSelector';\r\nimport ConnectionSelector from '../../components/ColorSelector.js/ConnectionSelector';\r\nimport ContinuousPatterns from '../../components/ContinuousPatterns/ContinuousPatterns';\r\n\r\n\r\nconst MakeContinuous = forwardRef((props, ref) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n      clearCanvas() {\r\n          const canvas = canvasRef.current;\r\n          if (!canvas) return;\r\n          const context = canvas.getContext('2d');\r\n          context.clearRect(0, 0, canvas.width, canvas.height);\r\n      }\r\n  }));\r\n  // const [connectionType, setConnectionType] = useState('ƽ��');\r\n  // �� props �н⹹����Ҫ�Ĳ���\r\n  const { currentStep, handleNextStep, handlePrevStep, sketchDataURL, onSave,spacing,setSpacing,imgscale,setImgscale,selectedColor,setSelectedColor,setConnectionType,connectionType} = props;\r\n  // const [selectedColor, setSelectedColor] = useState('#FFFFFF'); // Ĭ��Ϊ��ɫ\r\n  const handleConnectionTypeChange = useCallback((newType) => {\r\n    setConnectionType(newType);\r\n  }, [setConnectionType]);\r\n\r\n\r\n  return ( \r\n    <div className=\"container containerColumn\" style={props.style}>\r\n      \r\n        <StepBar currentStep={currentStep} handleNextStep={handleNextStep} handlePrevStep={handlePrevStep} />\r\n        <div className=\"middle\">\r\n            <div className=\"bgcolor\">\r\n          <ContinuousPatterns imgscale={imgscale} setImgscale={setImgscale} spacing={spacing} setSpacing={setSpacing} onSave={onSave} sketchDataURL={sketchDataURL} selectedColor={selectedColor} connectionType={connectionType} ref={ref} setConnectionType={setConnectionType}/>\r\n            </div>\r\n            </div>\r\n        <div className=\"bottom\">\r\n\r\n        <div className=\"selectors-wrapper\">\r\n <ColorSelector onColorSelect={setSelectedColor} selectedColor={selectedColor}/>\r\n      <ConnectionSelector selectedConnection={connectionType} onConnectionTypeChange={handleConnectionTypeChange}  onColorSelect={setSelectedColor} selectedColor={selectedColor} setConnectionType={setConnectionType}/>\r\n    </div>\r\n        </div>\r\n       \r\n      \r\n    </div>\r\n  );\r\n})\r\n\r\nexport default MakeContinuous;\r\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAKC,MAAM,CAAEC,mBAAmB,CAAEC,UAAU,CAAEC,WAAW,KAAO,OAAO,CACnF,MAAO,CAAAC,OAAO,KAAM,kCAAkC,CACtD,MAAO,sBAAsB,CAC7B,MAAO,CAAAC,aAAa,KAAM,iDAAiD,CAC3E,MAAO,CAAAC,kBAAkB,KAAM,sDAAsD,CACrF,MAAO,CAAAC,kBAAkB,KAAM,wDAAwD,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGxF,KAAM,CAAAC,cAAc,cAAGV,UAAU,CAAC,CAACW,KAAK,CAAEC,GAAG,GAAK,CAChD,KAAM,CAAAC,SAAS,CAAGf,MAAM,CAAC,IAAI,CAAC,CAE9BC,mBAAmB,CAACa,GAAG,CAAE,KAAO,CAC5BE,WAAWA,CAAA,CAAG,CACV,KAAM,CAAAC,MAAM,CAAGF,SAAS,CAACG,OAAO,CAChC,GAAI,CAACD,MAAM,CAAE,OACb,KAAM,CAAAE,OAAO,CAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC,CACvCD,OAAO,CAACE,SAAS,CAAC,CAAC,CAAE,CAAC,CAAEJ,MAAM,CAACK,KAAK,CAAEL,MAAM,CAACM,MAAM,CAAC,CACxD,CACJ,CAAC,CAAC,CAAC,CACH;AACA;AACA,KAAM,CAAEC,WAAW,CAAEC,cAAc,CAAEC,cAAc,CAAEC,aAAa,CAAEC,MAAM,CAACC,OAAO,CAACC,UAAU,CAACC,QAAQ,CAACC,WAAW,CAACC,aAAa,CAACC,gBAAgB,CAACC,iBAAiB,CAACC,cAAc,CAAC,CAAGvB,KAAK,CAC3L;AACA,KAAM,CAAAwB,0BAA0B,CAAGlC,WAAW,CAAEmC,OAAO,EAAK,CAC1DH,iBAAiB,CAACG,OAAO,CAAC,CAC5B,CAAC,CAAE,CAACH,iBAAiB,CAAC,CAAC,CAGvB,mBACExB,KAAA,QAAK4B,SAAS,CAAC,2BAA2B,CAACC,KAAK,CAAE3B,KAAK,CAAC2B,KAAM,CAAAC,QAAA,eAE1DhC,IAAA,CAACL,OAAO,EAACoB,WAAW,CAAEA,WAAY,CAACC,cAAc,CAAEA,cAAe,CAACC,cAAc,CAAEA,cAAe,CAAE,CAAC,cACrGjB,IAAA,QAAK8B,SAAS,CAAC,QAAQ,CAAAE,QAAA,cACnBhC,IAAA,QAAK8B,SAAS,CAAC,SAAS,CAAAE,QAAA,cAC1BhC,IAAA,CAACF,kBAAkB,EAACwB,QAAQ,CAAEA,QAAS,CAACC,WAAW,CAAEA,WAAY,CAACH,OAAO,CAAEA,OAAQ,CAACC,UAAU,CAAEA,UAAW,CAACF,MAAM,CAAEA,MAAO,CAACD,aAAa,CAAEA,aAAc,CAACM,aAAa,CAAEA,aAAc,CAACG,cAAc,CAAEA,cAAe,CAACtB,GAAG,CAAEA,GAAI,CAACqB,iBAAiB,CAAEA,iBAAkB,CAAC,CAAC,CAClQ,CAAC,CACD,CAAC,cACV1B,IAAA,QAAK8B,SAAS,CAAC,QAAQ,CAAAE,QAAA,cAEvB9B,KAAA,QAAK4B,SAAS,CAAC,mBAAmB,CAAAE,QAAA,eACzChC,IAAA,CAACJ,aAAa,EAACqC,aAAa,CAAER,gBAAiB,CAACD,aAAa,CAAEA,aAAc,CAAC,CAAC,cAC1ExB,IAAA,CAACH,kBAAkB,EAACqC,kBAAkB,CAAEP,cAAe,CAACQ,sBAAsB,CAAEP,0BAA2B,CAAEK,aAAa,CAAER,gBAAiB,CAACD,aAAa,CAAEA,aAAc,CAACE,iBAAiB,CAAEA,iBAAkB,CAAC,CAAC,EAChN,CAAC,CACG,CAAC,EAGL,CAAC,CAEV,CAAC,CAAC,CAEF,cAAe,CAAAvB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}