{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\containers\\\\GenerationImg\\\\GenerationImg.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport StepBar from '../../components/StepBar/StepBar';\nimport MaterialLibrary from '../../components/MaterialLibrary/MaterialLibrary';\nimport ShowImg from '../../components/ShowImg/ShowImg';\nimport './GenerationImg.css';\nimport LoadingAnimation from \"../../components/loadingicon/loadingicon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerationImg = ({\n  currentStep,\n  handleNextStep,\n  handlePrevStep,\n  selectedMaterials,\n  onAddMaterial\n}) => {\n  _s();\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null); // 存储选中的图片索引\n  const [prompt, setPrompt] = useState(''); // 存储用户输入的提示词\n  const [generatedImages, setGeneratedImages] = useState([]); // 存储生成的图片\n  const [isUploading, setIsUploading] = useState(false); // 上传状态\n\n  // 选中图片时的回调函数\n  const handleSelectImage = index => {\n    setSelectedImageIndex(index); // 更新选中的图片索引\n  };\n\n  // 输入框内容变化时的回调函数\n  const handleInputChange = e => {\n    if (e.target.name === \"prompt\") {\n      setPrompt(e.target.value); // 更新提示词\n    }\n  };\n\n  // 点击上传按钮时的回调函数\n  const handleUpload = async () => {\n    setIsUploading(true); // 设置上传状态为 true\n\n    // 判断是否有选中的图片\n    if (selectedImageIndex !== null) {\n      // 构建请求体\n      const requestBody = {\n        prompt: prompt,\n        // 使用用户输入的提示词作为 prompt\n        imageIndex: selectedImageIndex // 上传选中的图片索引\n      };\n      try {\n        // 发送 POST 请求\n        const response = await fetch('http://example.com/generate-image', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestBody)\n        });\n        if (response.ok) {\n          // 如果请求成功，获取生成的图片\n          const generatedImages = await response.json();\n          setGeneratedImages(generatedImages);\n        } else {\n          console.error('Failed to generate image');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    } else {\n      // 如果没有选中的图片，提示用户选择图片\n      alert('请先选择一张图片');\n    }\n    setIsUploading(false); // 设置上传状态为 false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(StepBar, {\n        currentStep: currentStep,\n        handleNextStep: handleNextStep,\n        handlePrevStep: handlePrevStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bgcolor\",\n          children: /*#__PURE__*/_jsxDEV(ShowImg, {\n            images: selectedMaterials,\n            onSelectImage: handleSelectImage,\n            selectedImageIndex: selectedImageIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"prompt\",\n          value: prompt,\n          onChange: handleInputChange,\n          placeholder: selectedImageIndex !== null ? `选中的图片编号：${selectedImageIndex}` : \"请输入内容作为生成垫图的 prompt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-button\",\n          onClick: handleUpload,\n          disabled: isUploading,\n          children: isUploading ? /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 40\n          }, this) : '上传'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: /*#__PURE__*/_jsxDEV(MaterialLibrary, {\n        materials: selectedMaterials\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(GenerationImg, \"TYBrmD/SSEimhT4moj2ap2c8PS0=\");\n_c = GenerationImg;\nexport default GenerationImg;\nvar _c;\n$RefreshReg$(_c, \"GenerationImg\");","map":{"version":3,"names":["React","useState","StepBar","MaterialLibrary","ShowImg","LoadingAnimation","jsxDEV","_jsxDEV","GenerationImg","currentStep","handleNextStep","handlePrevStep","selectedMaterials","onAddMaterial","_s","selectedImageIndex","setSelectedImageIndex","prompt","setPrompt","generatedImages","setGeneratedImages","isUploading","setIsUploading","handleSelectImage","index","handleInputChange","e","target","name","value","handleUpload","requestBody","imageIndex","response","fetch","method","headers","body","JSON","stringify","ok","json","console","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","images","onSelectImage","type","onChange","placeholder","onClick","disabled","materials","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/containers/GenerationImg/GenerationImg.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport StepBar from '../../components/StepBar/StepBar';\r\nimport MaterialLibrary from '../../components/MaterialLibrary/MaterialLibrary';\r\nimport ShowImg from '../../components/ShowImg/ShowImg';\r\nimport './GenerationImg.css';\r\nimport LoadingAnimation from \"../../components/loadingicon/loadingicon\";\r\n\r\nconst GenerationImg = ({ currentStep, handleNextStep, handlePrevStep, selectedMaterials, onAddMaterial }) => {\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null); // 存储选中的图片索引\r\n    const [prompt, setPrompt] = useState(''); // 存储用户输入的提示词\r\n    const [generatedImages, setGeneratedImages] = useState([]); // 存储生成的图片\r\n    const [isUploading, setIsUploading] = useState(false); // 上传状态\r\n\r\n    // 选中图片时的回调函数\r\n    const handleSelectImage = (index) => {\r\n        setSelectedImageIndex(index); // 更新选中的图片索引\r\n    };\r\n\r\n    // 输入框内容变化时的回调函数\r\n    const handleInputChange = (e) => {\r\n        if (e.target.name === \"prompt\") {\r\n            setPrompt(e.target.value); // 更新提示词\r\n        }\r\n    };\r\n\r\n    // 点击上传按钮时的回调函数\r\n    const handleUpload = async () => {\r\n        setIsUploading(true); // 设置上传状态为 true\r\n\r\n        // 判断是否有选中的图片\r\n        if (selectedImageIndex !== null) {\r\n            // 构建请求体\r\n            const requestBody = {\r\n                prompt: prompt, // 使用用户输入的提示词作为 prompt\r\n                imageIndex: selectedImageIndex // 上传选中的图片索引\r\n            };\r\n\r\n            try {\r\n                // 发送 POST 请求\r\n                const response = await fetch('http://example.com/generate-image', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(requestBody)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    // 如果请求成功，获取生成的图片\r\n                    const generatedImages = await response.json();\r\n                    setGeneratedImages(generatedImages);\r\n                } else {\r\n                    console.error('Failed to generate image');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        } else {\r\n            // 如果没有选中的图片，提示用户选择图片\r\n            alert('请先选择一张图片');\r\n        }\r\n\r\n        setIsUploading(false); // 设置上传状态为 false\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"left-side\">\r\n                <StepBar currentStep={currentStep} handleNextStep={handleNextStep} handlePrevStep={handlePrevStep} />\r\n                <div className=\"middle\">\r\n                    <div className=\"bgcolor\">\r\n                        <ShowImg images={selectedMaterials} onSelectImage={handleSelectImage} selectedImageIndex={selectedImageIndex} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"prompt\"\r\n                        value={prompt}\r\n                        onChange={handleInputChange}\r\n                        placeholder={selectedImageIndex !== null ? `选中的图片编号：${selectedImageIndex}` : \"请输入内容作为生成垫图的 prompt\"}\r\n                    />\r\n                    <button className=\"upload-button\" onClick={handleUpload} disabled={isUploading}>\r\n                        {isUploading ? <LoadingAnimation /> : '上传'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-side\">\r\n                <MaterialLibrary materials={selectedMaterials} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenerationImg;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}