{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\SketchBox\\\\remake.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { fabric } from 'fabric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FabricCanvas = ({\n  setDataUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const fabricCanvasRef = useRef(null);\n  useEffect(() => {\n    // 尝试从本地存储中获取之前保存的画布数据\n    const savedCanvasData = localStorage.getItem('fabricCanvasData');\n    if (savedCanvasData) {\n      // 如果存在保存的画布数据，则恢复画布\n      fabricCanvasRef.current = new fabric.Canvas(canvasRef.current);\n      fabricCanvasRef.current.loadFromJSON(savedCanvasData, () => {\n        fabricCanvasRef.current.renderAll(); // 渲染画布\n      });\n    } else {\n      // 如果没有保存的画布数据，则创建新的画布\n      fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\n        width: window.innerHeight * 0.6,\n        height: window.innerHeight * 0.6,\n        selection: true,\n        preserveObjectStacking: true,\n        interactive: true\n      });\n    }\n\n    // 事件处理函数\n    const handleDragOver = e => {\n      e.preventDefault();\n    };\n    const handleDrop = e => {\n      e.preventDefault();\n      const dragData = e.dataTransfer.getData('application/json');\n      const {\n        type,\n        url\n      } = JSON.parse(dragData);\n      if (type === 'library') {\n        fabric.Image.fromURL(url, img => {\n          img.set({\n            selectable: true,\n            scalable: true,\n            hasControls: true\n          });\n          img.scale(0.25);\n          img.setCoords();\n          addDeleteButton(img); // 添加删除按钮\n          fabricCanvasRef.current.add(img);\n        }, {\n          crossOrigin: 'anonymous'\n        });\n      }\n    };\n    const addDeleteButton = obj => {\n      const deleteButton = new fabric.Text('x', {\n        fontFamily: 'Arial',\n        fontSize: 20,\n        fill: 'red',\n        originX: 'right',\n        originY: 'top',\n        selectable: false,\n        evented: false\n      });\n      deleteButton.set({\n        top: obj.top,\n        left: obj.left + obj.width\n      });\n      deleteButton.on('mousedown', () => {\n        fabricCanvasRef.current.remove(obj);\n        fabricCanvasRef.current.remove(deleteButton);\n      });\n      obj.deleteButton = deleteButton;\n      fabricCanvasRef.current.add(deleteButton);\n      fabricCanvasRef.current.bringToFront(deleteButton);\n    };\n    const removeDeleteButton = () => {\n      fabricCanvasRef.current.getObjects().forEach(obj => {\n        if (obj.deleteButton) {\n          fabricCanvasRef.current.remove(obj.deleteButton);\n          delete obj.deleteButton;\n        }\n      });\n    };\n\n    // 添加事件监听器\n    fabricCanvasRef.current.on('selection:cleared', removeDeleteButton);\n    fabricCanvasRef.current.on('object:added', removeDeleteButton);\n    fabricCanvasRef.current.on('object:removed', removeDeleteButton);\n\n    // 返回清理函数\n    return () => {\n      fabricCanvasRef.current.off('selection:cleared', removeDeleteButton);\n      fabricCanvasRef.current.off('object:added', removeDeleteButton);\n      fabricCanvasRef.current.off('object:removed', removeDeleteButton);\n    };\n  }, []); // 仅在组件挂载时运行一次\n\n  useEffect(() => {\n    const saveCanvasToDataUrl = () => {\n      if (fabricCanvasRef.current) {\n        const dataURL = fabricCanvasRef.current.toDataURL({\n          format: 'png',\n          multiplier: 1,\n          quality: 1\n        });\n        setDataUrl(dataURL);\n      }\n    };\n    saveCanvasToDataUrl();\n    const canvasStateChangeListener = () => {\n      saveCanvasToDataUrl();\n      // 将画布信息保存到LocalStorage中\n      localStorage.setItem('fabricCanvasData', JSON.stringify(fabricCanvasRef.current.toJSON()));\n    };\n    fabricCanvasRef.current.on('object:added', canvasStateChangeListener);\n    fabricCanvasRef.current.on('object:removed', canvasStateChangeListener);\n    return () => {\n      fabricCanvasRef.current.off('object:added', canvasStateChangeListener);\n      fabricCanvasRef.current.off('object:removed', canvasStateChangeListener);\n    };\n  }, [setDataUrl]);\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const dragData = e.dataTransfer.getData('application/json');\n    const {\n      type,\n      url\n    } = JSON.parse(dragData);\n    if (type === 'library') {\n      fabric.Image.fromURL(url, img => {\n        img.set({\n          selectable: true,\n          scalable: true,\n          hasControls: true\n        });\n        img.scale(0.25);\n        img.setCoords();\n        // addDeleteButton(img); // 添加删除按钮\n        fabricCanvasRef.current.add(img);\n      }, {\n        crossOrigin: 'anonymous'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    style: {\n      border: '1px solid black',\n      maxWidth: '60vh',\n      maxHeight: '60vh',\n      position: 'relative',\n      backgroundColor: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 512,\n      height: 512,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n_s(FabricCanvas, \"3kUN7d9dHr6FpV9Db3Jm0MrzQ04=\");\n_c = FabricCanvas;\nexport default FabricCanvas;\nvar _c;\n$RefreshReg$(_c, \"FabricCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","fabric","jsxDEV","_jsxDEV","FabricCanvas","setDataUrl","_s","canvasRef","fabricCanvasRef","savedCanvasData","localStorage","getItem","current","Canvas","loadFromJSON","renderAll","width","window","innerHeight","height","selection","preserveObjectStacking","interactive","handleDragOver","e","preventDefault","handleDrop","dragData","dataTransfer","getData","type","url","JSON","parse","Image","fromURL","img","set","selectable","scalable","hasControls","scale","setCoords","addDeleteButton","add","crossOrigin","obj","deleteButton","Text","fontFamily","fontSize","fill","originX","originY","evented","top","left","on","remove","bringToFront","removeDeleteButton","getObjects","forEach","off","saveCanvasToDataUrl","dataURL","toDataURL","format","multiplier","quality","canvasStateChangeListener","setItem","stringify","toJSON","onDragOver","onDrop","style","border","maxWidth","maxHeight","position","backgroundColor","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/SketchBox/remake.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst FabricCanvas = ({ setDataUrl }) => {\r\n    const canvasRef = useRef(null);\r\n    const fabricCanvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // 尝试从本地存储中获取之前保存的画布数据\r\n        const savedCanvasData = localStorage.getItem('fabricCanvasData');\r\n        if (savedCanvasData) {\r\n            // 如果存在保存的画布数据，则恢复画布\r\n            fabricCanvasRef.current = new fabric.Canvas(canvasRef.current);\r\n            fabricCanvasRef.current.loadFromJSON(savedCanvasData, () => {\r\n                fabricCanvasRef.current.renderAll(); // 渲染画布\r\n            });\r\n        } else {\r\n            // 如果没有保存的画布数据，则创建新的画布\r\n            fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\r\n                width: window.innerHeight * 0.6,\r\n                height: window.innerHeight * 0.6,\r\n                selection: true,\r\n                preserveObjectStacking: true,\r\n                interactive: true,\r\n            });\r\n        }\r\n\r\n        // 事件处理函数\r\n        const handleDragOver = (e) => {\r\n            e.preventDefault();\r\n        };\r\n\r\n        const handleDrop = (e) => {\r\n            e.preventDefault();\r\n            const dragData = e.dataTransfer.getData('application/json');\r\n            const { type, url } = JSON.parse(dragData);\r\n\r\n            if (type === 'library') {\r\n                fabric.Image.fromURL(\r\n                    url,\r\n                    (img) => {\r\n                        img.set({\r\n                            selectable: true,\r\n                            scalable: true,\r\n                            hasControls: true,\r\n                        });\r\n                        img.scale(0.25);\r\n                        img.setCoords();\r\n                        addDeleteButton(img); // 添加删除按钮\r\n                        fabricCanvasRef.current.add(img);\r\n                    },\r\n                    { crossOrigin: 'anonymous' }\r\n                );\r\n            }\r\n        };\r\n\r\n        const addDeleteButton = (obj) => {\r\n            const deleteButton = new fabric.Text('x', {\r\n                fontFamily: 'Arial',\r\n                fontSize: 20,\r\n                fill: 'red',\r\n                originX: 'right',\r\n                originY: 'top',\r\n                selectable: false,\r\n                evented: false,\r\n            });\r\n            deleteButton.set({\r\n                top: obj.top,\r\n                left: obj.left + obj.width,\r\n            });\r\n            deleteButton.on('mousedown', () => {\r\n                fabricCanvasRef.current.remove(obj);\r\n                fabricCanvasRef.current.remove(deleteButton);\r\n            });\r\n            obj.deleteButton = deleteButton;\r\n            fabricCanvasRef.current.add(deleteButton);\r\n            fabricCanvasRef.current.bringToFront(deleteButton);\r\n        };\r\n\r\n        const removeDeleteButton = () => {\r\n            fabricCanvasRef.current.getObjects().forEach(obj => {\r\n                if (obj.deleteButton) {\r\n                    fabricCanvasRef.current.remove(obj.deleteButton);\r\n                    delete obj.deleteButton;\r\n                }\r\n            });\r\n        };\r\n\r\n        // 添加事件监听器\r\n        fabricCanvasRef.current.on('selection:cleared', removeDeleteButton);\r\n        fabricCanvasRef.current.on('object:added', removeDeleteButton);\r\n        fabricCanvasRef.current.on('object:removed', removeDeleteButton);\r\n\r\n        // 返回清理函数\r\n        return () => {\r\n            fabricCanvasRef.current.off('selection:cleared', removeDeleteButton);\r\n            fabricCanvasRef.current.off('object:added', removeDeleteButton);\r\n            fabricCanvasRef.current.off('object:removed', removeDeleteButton);\r\n        };\r\n\r\n    }, []); // 仅在组件挂载时运行一次\r\n\r\n    useEffect(() => {\r\n        const saveCanvasToDataUrl = () => {\r\n            if (fabricCanvasRef.current) {\r\n                const dataURL = fabricCanvasRef.current.toDataURL({\r\n                    format: 'png',\r\n                    multiplier: 1,\r\n                    quality: 1\r\n                });\r\n                setDataUrl(dataURL);\r\n            }\r\n        };\r\n\r\n        saveCanvasToDataUrl();\r\n\r\n        const canvasStateChangeListener = () => {\r\n            saveCanvasToDataUrl();\r\n            // 将画布信息保存到LocalStorage中\r\n            localStorage.setItem('fabricCanvasData', JSON.stringify(fabricCanvasRef.current.toJSON()));\r\n        };\r\n\r\n        fabricCanvasRef.current.on('object:added', canvasStateChangeListener);\r\n        fabricCanvasRef.current.on('object:removed', canvasStateChangeListener);\r\n\r\n        return () => {\r\n            fabricCanvasRef.current.off('object:added', canvasStateChangeListener);\r\n            fabricCanvasRef.current.off('object:removed', canvasStateChangeListener);\r\n        };\r\n    }, [setDataUrl]);\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDrop = (e) => {\r\n        e.preventDefault();\r\n        const dragData = e.dataTransfer.getData('application/json');\r\n        const { type, url } = JSON.parse(dragData);\r\n\r\n        if (type === 'library') {\r\n            fabric.Image.fromURL(\r\n                url,\r\n                (img) => {\r\n                    img.set({\r\n                        selectable: true,\r\n                        scalable: true,\r\n                        hasControls: true,\r\n                    });\r\n                    img.scale(0.25);\r\n                    img.setCoords();\r\n                    // addDeleteButton(img); // 添加删除按钮\r\n                    fabricCanvasRef.current.add(img);\r\n                },\r\n                { crossOrigin: 'anonymous' }\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onDragOver={handleDragOver}\r\n            onDrop={handleDrop}\r\n            style={{ border: '1px solid black', maxWidth: '60vh', maxHeight: '60vh', position: 'relative', backgroundColor: 'white' }}\r\n        >\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={512}\r\n                height={512}\r\n                style={{ width: '100%', height: '100%' }}\r\n            ></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FabricCanvas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}