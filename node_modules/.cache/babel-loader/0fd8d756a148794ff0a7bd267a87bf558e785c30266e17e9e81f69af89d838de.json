{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\containers\\\\ShowClothes\\\\ClothBox2.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useCallback, useEffect, useRef, useImperativeHandle } from 'react';\nimport './ShowClothes.css';\nimport clothImageSrc from './Remove-bg.ai_1713274468747(1).png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClothBox = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  imgscale,\n  sketchDataURL,\n  patternDataURL,\n  selected,\n  spacing,\n  selectedcolor\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const saveCanvasAsImage = useCallback(() => {\n    const clothCanvas = canvasRef.current;\n    if (!clothCanvas) return;\n    const clothCtx = clothCanvas.getContext('2d');\n    const imageData = clothCanvas.toDataURL('image/png', 1.0); // Save entire canvas\n\n    const link = document.createElement('a');\n    link.href = imageData;\n    link.download = 'cloth-image.png';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, []);\n  useImperativeHandle(ref, () => ({\n    saveCanvasAsImage\n  }));\n  useEffect(() => {\n    const clothCanvas = canvasRef.current;\n    if (!clothCanvas) return;\n    const clothCtx = clothCanvas.getContext('2d');\n    const patternImage = new Image();\n    const clothImage = new Image();\n    const maskImage = new Image();\n    const neckWidth = clothCanvas.width * 0.3;\n    const neckHeight = clothCanvas.height * 0.1;\n    const neckX = (clothCanvas.width - neckWidth) / 2;\n    const neckY = 0;\n    clothImage.onload = () => {\n      clothCanvas.width = clothImage.width;\n      clothCanvas.height = clothImage.height;\n      clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\n      clothCtx.drawImage(clothImage, 0, 0);\n\n      // Draw selected color over the entire cloth\n      clothCtx.fillStyle = selectedcolor ? selectedcolor : 'transparent';\n      clothCtx.fillRect(0, 0, clothCanvas.width, clothCanvas.height);\n      patternImage.onload = () => {\n        const tempCanvas = document.createElement('canvas');\n        const tempCtx = tempCanvas.getContext('2d');\n        tempCanvas.width = clothCanvas.width;\n        tempCanvas.height = clothCanvas.height;\n        const scaleX = tempCanvas.width / patternImage.width;\n        const scaleY = tempCanvas.height / patternImage.height;\n        const scale = Math.max(scaleX, scaleY);\n        const patternWidth = patternImage.width * scale;\n        const patternHeight = patternImage.height * scale;\n        const offsetX = (tempCanvas.width - patternWidth) / 2;\n        const offsetY = (tempCanvas.height - patternHeight) / 2;\n        tempCtx.drawImage(patternImage, offsetX, offsetY, patternWidth, patternHeight);\n\n        // Create mask canvas for the neck area\n        const patternMaskCanvas = document.createElement('canvas');\n        const patternMaskCtx = patternMaskCanvas.getContext('2d');\n        patternMaskCanvas.width = clothCanvas.width;\n        patternMaskCanvas.height = clothCanvas.height;\n        patternMaskCtx.fillStyle = '#000';\n        patternMaskCtx.fillRect(neckX, neckY, neckWidth, neckHeight);\n\n        // Apply mask to pattern\n        tempCtx.globalCompositeOperation = 'destination-out';\n        tempCtx.drawImage(patternMaskCanvas, 0, 0);\n\n        // Apply pattern to cloth\n        clothCtx.globalCompositeOperation = 'multiply';\n        clothCtx.drawImage(tempCanvas, 0, 0);\n\n        // Reset composite operations\n        tempCtx.globalCompositeOperation = 'source-over';\n        clothCtx.globalCompositeOperation = 'source-over';\n      };\n      patternImage.src = patternDataURL;\n    };\n    clothImage.src = clothImageSrc;\n  }, [patternDataURL, selectedcolor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    style: {\n      marginTop: '50px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"cloth-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}, \"7RjLYmlm9t/TsuBYxcEChX2Zm3k=\")), \"7RjLYmlm9t/TsuBYxcEChX2Zm3k=\");\n_c2 = ClothBox;\nexport default ClothBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClothBox$forwardRef\");\n$RefreshReg$(_c2, \"ClothBox\");","map":{"version":3,"names":["React","forwardRef","useCallback","useEffect","useRef","useImperativeHandle","clothImageSrc","jsxDEV","_jsxDEV","ClothBox","_s","_c","imgscale","sketchDataURL","patternDataURL","selected","spacing","selectedcolor","ref","canvasRef","saveCanvasAsImage","clothCanvas","current","clothCtx","getContext","imageData","toDataURL","link","document","createElement","href","download","body","appendChild","click","removeChild","patternImage","Image","clothImage","maskImage","neckWidth","width","neckHeight","height","neckX","neckY","onload","clearRect","drawImage","fillStyle","fillRect","tempCanvas","tempCtx","scaleX","scaleY","scale","Math","max","patternWidth","patternHeight","offsetX","offsetY","patternMaskCanvas","patternMaskCtx","globalCompositeOperation","src","className","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/containers/ShowClothes/ClothBox2.js"],"sourcesContent":["import React, { forwardRef, useCallback, useEffect, useRef, useImperativeHandle } from 'react';\r\nimport './ShowClothes.css';\r\nimport clothImageSrc from './Remove-bg.ai_1713274468747(1).png';\r\n\r\nconst ClothBox = forwardRef(({ imgscale, sketchDataURL, patternDataURL, selected, spacing, selectedcolor }, ref) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    const saveCanvasAsImage = useCallback(() => {\r\n        const clothCanvas = canvasRef.current;\r\n        if (!clothCanvas) return;\r\n\r\n        const clothCtx = clothCanvas.getContext('2d');\r\n        const imageData = clothCanvas.toDataURL('image/png', 1.0); // Save entire canvas\r\n\r\n        const link = document.createElement('a');\r\n        link.href = imageData;\r\n        link.download = 'cloth-image.png';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        saveCanvasAsImage,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const clothCanvas = canvasRef.current;\r\n        if (!clothCanvas) return;\r\n\r\n        const clothCtx = clothCanvas.getContext('2d');\r\n        const patternImage = new Image();\r\n        const clothImage = new Image();\r\n        const maskImage = new Image();\r\n\r\n        const neckWidth = clothCanvas.width * 0.3;\r\n        const neckHeight = clothCanvas.height * 0.1;\r\n        const neckX = (clothCanvas.width - neckWidth) / 2;\r\n        const neckY = 0;\r\n\r\n        clothImage.onload = () => {\r\n            clothCanvas.width = clothImage.width;\r\n            clothCanvas.height = clothImage.height;\r\n            clothCtx.clearRect(0, 0, clothCanvas.width, clothCanvas.height);\r\n            clothCtx.drawImage(clothImage, 0, 0);\r\n\r\n            // Draw selected color over the entire cloth\r\n            clothCtx.fillStyle = selectedcolor ? selectedcolor : 'transparent';\r\n            clothCtx.fillRect(0, 0, clothCanvas.width, clothCanvas.height);\r\n\r\n            patternImage.onload = () => {\r\n                const tempCanvas = document.createElement('canvas');\r\n                const tempCtx = tempCanvas.getContext('2d');\r\n                tempCanvas.width = clothCanvas.width;\r\n                tempCanvas.height = clothCanvas.height;\r\n\r\n                const scaleX = tempCanvas.width / patternImage.width;\r\n                const scaleY = tempCanvas.height / patternImage.height;\r\n                const scale = Math.max(scaleX, scaleY);\r\n\r\n                const patternWidth = patternImage.width * scale;\r\n                const patternHeight = patternImage.height * scale;\r\n                const offsetX = (tempCanvas.width - patternWidth) / 2;\r\n                const offsetY = (tempCanvas.height - patternHeight) / 2;\r\n\r\n                tempCtx.drawImage(patternImage, offsetX, offsetY, patternWidth, patternHeight);\r\n\r\n                // Create mask canvas for the neck area\r\n                const patternMaskCanvas = document.createElement('canvas');\r\n                const patternMaskCtx = patternMaskCanvas.getContext('2d');\r\n                patternMaskCanvas.width = clothCanvas.width;\r\n                patternMaskCanvas.height = clothCanvas.height;\r\n                patternMaskCtx.fillStyle = '#000';\r\n                patternMaskCtx.fillRect(neckX, neckY, neckWidth, neckHeight);\r\n\r\n                // Apply mask to pattern\r\n                tempCtx.globalCompositeOperation = 'destination-out';\r\n                tempCtx.drawImage(patternMaskCanvas, 0, 0);\r\n\r\n                // Apply pattern to cloth\r\n                clothCtx.globalCompositeOperation = 'multiply';\r\n                clothCtx.drawImage(tempCanvas, 0, 0);\r\n\r\n                // Reset composite operations\r\n                tempCtx.globalCompositeOperation = 'source-over';\r\n                clothCtx.globalCompositeOperation = 'source-over';\r\n            };\r\n            patternImage.src = patternDataURL;\r\n        };\r\n\r\n        clothImage.src = clothImageSrc;\r\n    }, [patternDataURL, selectedcolor]);\r\n\r\n    return (\r\n        <div className=\"canvas-container\" style={{ marginTop: '50px' }}>\r\n            <canvas ref={canvasRef} className=\"cloth-canvas\"></canvas>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ClothBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}