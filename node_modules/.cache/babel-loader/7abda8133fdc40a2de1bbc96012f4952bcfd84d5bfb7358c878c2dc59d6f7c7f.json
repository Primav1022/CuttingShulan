{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u540C\\u6D4E\\u5B9E\\u4E60\\\\cutting\\\\src\\\\components\\\\StepBar\\\\StepBar.js\";\n// StepBar.js\nimport React from 'react';\nimport './StepBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StepBar({\n  currentStep,\n  handleNextStep,\n  handlePrevStep,\n  onSavePattern\n}) {\n  const stepNames = {\n    1: 'Base pattern generation',\n    2: 'Unit pattern production',\n    3: 'Continuous pattern making',\n    4: 'Costume effect preview'\n  };\n  const CheckmarkIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"16\",\n    height: \"13\",\n    viewBox: \"0 0 19 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M2 6.71429L7 13L17 2\",\n      stroke: \"white\",\n      \"stroke-width\": \"3\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"4vw\",\n        height: \"4.5vw\",\n        viewBox: \"0 0 80 86\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"fill-rule\": \"evenodd\",\n          \"clip-rule\": \"evenodd\",\n          d: \"M36.9998 66C33.6402 66 30.4014 65.4823 27.3591 64.5222C27.6646 63.3947 27.8277 62.2085 27.8277 60.9843C27.8277 53.5328 21.7871 47.4922 14.3356 47.4922C12.286 47.4922 10.3431 47.9492 8.60334 48.7669C6.30119 44.349 4.99981 39.3265 4.99981 34C4.99981 16.3269 19.3267 2 36.9998 2C54.6729 2 68.9998 16.3269 68.9998 34C68.9998 39.3259 67.6987 44.3479 65.397 48.7656C63.658 47.9487 61.7161 47.4922 59.6677 47.4922C52.2162 47.4922 46.1756 53.5328 46.1756 60.9843C46.1756 62.2081 46.3385 63.3939 46.6439 64.5211C43.6006 65.4819 40.3607 66 36.9998 66ZM36.9998 68C40.5942 68 44.0583 67.4423 47.3103 66.4086C47.3765 66.3875 47.4426 66.3663 47.5086 66.3449C56.0149 63.5831 63.0509 57.559 67.1402 49.7489C69.6055 45.0406 70.9998 39.6831 70.9998 34C70.9998 15.2223 55.7775 0 36.9998 0C18.2221 0 2.99981 15.2223 2.99981 34C2.99981 39.6838 4.39449 45.0419 6.8603 49.7506C6.94022 49.9032 7.02127 50.0552 7.10343 50.2064C11.2584 57.8551 18.2631 63.7311 26.6925 66.4096C29.9436 67.4426 33.4066 68 36.9998 68ZM36.9998 30C36.6726 31.3802 36.0204 32.8602 35.4075 34.2511C34.2662 36.841 33.261 39.1222 34.7433 39.8756C35.7148 40.3694 36.6736 39.2748 36.9998 38.6666C37.3261 39.2748 38.2849 40.3694 39.2564 39.8756C40.7387 39.1222 39.7334 36.841 38.5921 34.2511C37.9792 32.8602 37.327 31.3802 36.9998 30ZM40.6953 45.2221C40.8964 44.6761 40.9998 44.091 40.9998 43.5H36.9998H32.9998C32.9998 44.091 33.1033 44.6761 33.3043 45.2221C33.5053 45.768 33.7999 46.2641 34.1714 46.682C34.5428 47.0998 34.9838 47.4313 35.4691 47.6575C35.9544 47.8836 36.4745 48 36.9998 48C37.5251 48 38.0452 47.8836 38.5305 47.6575C39.0159 47.4313 39.4568 47.0998 39.8282 46.682C40.1997 46.2641 40.4943 45.768 40.6953 45.2221ZM3.58719 80.9971V85H0.867188V73.8H3.58719V77.9713L7.69919 73.8H10.7809H10.9152H13.5329V80.552C13.5329 80.9573 13.6236 81.3253 13.8049 81.656C13.9863 81.976 14.2316 82.232 14.5409 82.424C14.8503 82.6053 15.1969 82.696 15.5809 82.696C15.9863 82.696 16.3436 82.6053 16.6529 82.424C16.9729 82.232 17.2289 81.976 17.4209 81.656C17.6129 81.3253 17.7089 80.9573 17.7089 80.552V73.8H20.3649V80.696C20.3649 81.5493 20.1569 82.3067 19.7409 82.968C19.3356 83.6293 18.7703 84.152 18.0449 84.536C17.3196 84.9093 16.4983 85.096 15.5809 85.096C14.6529 85.096 13.8263 84.9093 13.1009 84.536C12.3756 84.152 11.8049 83.6293 11.3889 82.968C10.9836 82.3067 10.7809 81.5493 10.7809 80.696V73.9319L6.14895 78.4811L11.2192 85H8.05119L4.40068 80.1982L3.58719 80.9971ZM23.0511 84.904C23.6484 85.0747 24.3151 85.16 25.0511 85.16C25.9044 85.16 26.6564 85.0213 27.3071 84.744C27.9684 84.456 28.4857 84.0453 28.8591 83.512C29.2431 82.968 29.4351 82.3067 29.4351 81.528C29.4351 81.0267 29.3391 80.5893 29.1471 80.216C28.9657 79.832 28.6991 79.5013 28.3471 79.224C28.0057 78.9467 27.5951 78.712 27.1151 78.52C26.6457 78.328 26.1177 78.1733 25.5311 78.056C25.2751 78.0133 25.0297 77.96 24.7951 77.896C24.5604 77.8213 24.3524 77.736 24.1711 77.64C23.9897 77.5333 23.8457 77.416 23.7391 77.288C23.6324 77.16 23.5791 77.0053 23.5791 76.824C23.5791 76.6213 23.6431 76.4507 23.7711 76.312C23.8991 76.1627 24.0751 76.0507 24.2991 75.976C24.5337 75.8907 24.8111 75.848 25.1311 75.848C25.4404 75.848 25.7391 75.896 26.0271 75.992C26.3257 76.088 26.6031 76.2267 26.8591 76.408C27.1257 76.5893 27.3711 76.8187 27.5951 77.096L29.2751 75.48C29.0084 75.0747 28.6831 74.728 28.2991 74.44C27.9257 74.152 27.4724 73.9333 26.9391 73.784C26.4164 73.624 25.7871 73.544 25.0511 73.544C24.4964 73.544 23.9631 73.6293 23.4511 73.8C22.9391 73.96 22.4857 74.1947 22.0911 74.504C21.7071 74.8027 21.3977 75.1653 21.1631 75.592C20.9391 76.008 20.8271 76.4667 20.8271 76.968C20.8271 77.4373 20.9017 77.864 21.0511 78.248C21.2004 78.6213 21.4244 78.9573 21.7231 79.256C22.0324 79.544 22.4164 79.7893 22.8751 79.992C23.3337 80.1947 23.8724 80.3653 24.4911 80.504C24.7151 80.5467 24.9337 80.6 25.1471 80.664C25.3604 80.7173 25.5631 80.7867 25.7551 80.872C25.9471 80.9467 26.1124 81.032 26.2511 81.128C26.3897 81.224 26.4964 81.336 26.5711 81.464C26.6564 81.592 26.6991 81.736 26.6991 81.896C26.6991 82.1093 26.6351 82.2907 26.5071 82.44C26.3791 82.5787 26.1977 82.6853 25.9631 82.76C25.7284 82.8347 25.4671 82.872 25.1791 82.872C24.6031 82.872 24.0431 82.7493 23.4991 82.504C22.9657 82.2587 22.4324 81.7787 21.8991 81.064L20.2511 82.936C20.6137 83.3947 21.0244 83.7947 21.4831 84.136C21.9417 84.4667 22.4644 84.7227 23.0511 84.904ZM36.8237 80.632V85H39.5437V73.8H36.8237V78.2H32.5997V73.8H29.8797V85H32.5997V80.632H36.8237ZM42.9884 84.536C43.7138 84.9093 44.5404 85.096 45.4684 85.096C46.3858 85.096 47.2071 84.9093 47.9324 84.536C48.6578 84.152 49.2231 83.6293 49.6284 82.968C50.0444 82.3067 50.2524 81.5493 50.2524 80.696V73.8H47.5964V80.552C47.5964 80.9573 47.5004 81.3253 47.3084 81.656C47.1164 81.976 46.8604 82.232 46.5404 82.424C46.2311 82.6053 45.8738 82.696 45.4684 82.696C45.0844 82.696 44.7378 82.6053 44.4284 82.424C44.1191 82.232 43.8738 81.976 43.6924 81.656C43.5111 81.3253 43.4204 80.9573 43.4204 80.552V73.8H40.6684V80.696C40.6684 81.5493 40.8711 82.3067 41.2764 82.968C41.6924 83.6293 42.2631 84.152 42.9884 84.536ZM51.3828 73.8V85H58.1088H59.0948H60.7968L61.5963 82.856H65.6956L66.4928 85H69.0422H69.2448H71.6822V81.256C71.6822 80.9893 71.6769 80.7493 71.6662 80.536C71.6662 80.312 71.6609 80.088 71.6502 79.864C71.6395 79.64 71.6182 79.3893 71.5862 79.112C71.5649 78.8347 71.5329 78.52 71.4902 78.168C71.4853 78.1121 71.4801 78.0543 71.4746 77.9948L76.6742 85H79.1382V73.8H76.4982V76.568V77.784C76.5089 78.1573 76.5195 78.504 76.5302 78.824C76.5515 79.144 76.5729 79.4587 76.5942 79.768C76.6262 80.0773 76.6582 80.392 76.6902 80.712C76.6977 80.7869 76.7058 80.8626 76.7144 80.9393L71.4742 73.8H69.0422V84.4842L64.8448 73.8H62.5408L59.0585 82.6H54.1028V73.8H51.3828ZM64.9341 80.808L64.3808 79.32C64.2955 79.096 64.2101 78.856 64.1248 78.6C64.0395 78.344 63.9541 78.0827 63.8688 77.816C63.7964 77.5808 63.7241 77.3533 63.6517 77.1334C63.5843 77.3609 63.5127 77.5885 63.4368 77.816C63.3621 78.0613 63.2768 78.312 63.1808 78.568C63.0848 78.8133 62.9941 79.0693 62.9088 79.336L62.3599 80.808H64.9341Z\",\n          fill: \"#F00264\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps\",\n      children: [1, 2, 3, 4].map((step, index, array) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep >= step ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\",\n          children: currentStep > step ? /*#__PURE__*/_jsxDEV(CheckmarkIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 71\n          }, this) : step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-name\",\n          children: stepNames[step]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, step, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev-step\",\n        onClick: handlePrevStep,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"8\",\n          height: \"15\",\n          viewBox: \"0 0 12 20\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M10 18L2 10L10 2\",\n            stroke: \"white\",\n            \"stroke-width\": \"3\",\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-step\",\n        onClick: () => {\n          handleNextStep();\n          onSavePattern && onSavePattern();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"8\",\n          height: \"15\",\n          viewBox: \"0 0 12 20\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M2 18L10 10L2 2\",\n            stroke: \"white\",\n            \"stroke-width\": \"3\",\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = StepBar;\nexport default StepBar;\nvar _c;\n$RefreshReg$(_c, \"StepBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StepBar","currentStep","handleNextStep","handlePrevStep","onSavePattern","stepNames","CheckmarkIcon","width","height","viewBox","fill","xmlns","children","d","stroke","fileName","_jsxFileName","lineNumber","columnNumber","className","map","step","index","array","onClick","_c","$RefreshReg$"],"sources":["F:/同济实习/cutting/src/components/StepBar/StepBar.js"],"sourcesContent":["// StepBar.js\r\nimport React from 'react';\r\nimport './StepBar.css'\r\nfunction StepBar({ currentStep, handleNextStep, handlePrevStep, onSavePattern}) {\r\n  const stepNames = {\r\n    1: 'Base pattern generation',\r\n    2: 'Unit pattern production',\r\n    3: 'Continuous pattern making',\r\n    4: 'Costume effect preview'\r\n  };\r\n    const CheckmarkIcon = () => (\r\n        <svg width=\"16\" height=\"13\" viewBox=\"0 0 19 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M2 6.71429L7 13L17 2\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"/>\r\n        </svg>\r\n    );\r\n\r\n    return (\r\n        <div className=\"top\">\r\n            <div className=\"logo\">\r\n                <svg width=\"4vw\" height=\"4.5vw\" viewBox=\"0 0 80 86\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                          d=\"M36.9998 66C33.6402 66 30.4014 65.4823 27.3591 64.5222C27.6646 63.3947 27.8277 62.2085 27.8277 60.9843C27.8277 53.5328 21.7871 47.4922 14.3356 47.4922C12.286 47.4922 10.3431 47.9492 8.60334 48.7669C6.30119 44.349 4.99981 39.3265 4.99981 34C4.99981 16.3269 19.3267 2 36.9998 2C54.6729 2 68.9998 16.3269 68.9998 34C68.9998 39.3259 67.6987 44.3479 65.397 48.7656C63.658 47.9487 61.7161 47.4922 59.6677 47.4922C52.2162 47.4922 46.1756 53.5328 46.1756 60.9843C46.1756 62.2081 46.3385 63.3939 46.6439 64.5211C43.6006 65.4819 40.3607 66 36.9998 66ZM36.9998 68C40.5942 68 44.0583 67.4423 47.3103 66.4086C47.3765 66.3875 47.4426 66.3663 47.5086 66.3449C56.0149 63.5831 63.0509 57.559 67.1402 49.7489C69.6055 45.0406 70.9998 39.6831 70.9998 34C70.9998 15.2223 55.7775 0 36.9998 0C18.2221 0 2.99981 15.2223 2.99981 34C2.99981 39.6838 4.39449 45.0419 6.8603 49.7506C6.94022 49.9032 7.02127 50.0552 7.10343 50.2064C11.2584 57.8551 18.2631 63.7311 26.6925 66.4096C29.9436 67.4426 33.4066 68 36.9998 68ZM36.9998 30C36.6726 31.3802 36.0204 32.8602 35.4075 34.2511C34.2662 36.841 33.261 39.1222 34.7433 39.8756C35.7148 40.3694 36.6736 39.2748 36.9998 38.6666C37.3261 39.2748 38.2849 40.3694 39.2564 39.8756C40.7387 39.1222 39.7334 36.841 38.5921 34.2511C37.9792 32.8602 37.327 31.3802 36.9998 30ZM40.6953 45.2221C40.8964 44.6761 40.9998 44.091 40.9998 43.5H36.9998H32.9998C32.9998 44.091 33.1033 44.6761 33.3043 45.2221C33.5053 45.768 33.7999 46.2641 34.1714 46.682C34.5428 47.0998 34.9838 47.4313 35.4691 47.6575C35.9544 47.8836 36.4745 48 36.9998 48C37.5251 48 38.0452 47.8836 38.5305 47.6575C39.0159 47.4313 39.4568 47.0998 39.8282 46.682C40.1997 46.2641 40.4943 45.768 40.6953 45.2221ZM3.58719 80.9971V85H0.867188V73.8H3.58719V77.9713L7.69919 73.8H10.7809H10.9152H13.5329V80.552C13.5329 80.9573 13.6236 81.3253 13.8049 81.656C13.9863 81.976 14.2316 82.232 14.5409 82.424C14.8503 82.6053 15.1969 82.696 15.5809 82.696C15.9863 82.696 16.3436 82.6053 16.6529 82.424C16.9729 82.232 17.2289 81.976 17.4209 81.656C17.6129 81.3253 17.7089 80.9573 17.7089 80.552V73.8H20.3649V80.696C20.3649 81.5493 20.1569 82.3067 19.7409 82.968C19.3356 83.6293 18.7703 84.152 18.0449 84.536C17.3196 84.9093 16.4983 85.096 15.5809 85.096C14.6529 85.096 13.8263 84.9093 13.1009 84.536C12.3756 84.152 11.8049 83.6293 11.3889 82.968C10.9836 82.3067 10.7809 81.5493 10.7809 80.696V73.9319L6.14895 78.4811L11.2192 85H8.05119L4.40068 80.1982L3.58719 80.9971ZM23.0511 84.904C23.6484 85.0747 24.3151 85.16 25.0511 85.16C25.9044 85.16 26.6564 85.0213 27.3071 84.744C27.9684 84.456 28.4857 84.0453 28.8591 83.512C29.2431 82.968 29.4351 82.3067 29.4351 81.528C29.4351 81.0267 29.3391 80.5893 29.1471 80.216C28.9657 79.832 28.6991 79.5013 28.3471 79.224C28.0057 78.9467 27.5951 78.712 27.1151 78.52C26.6457 78.328 26.1177 78.1733 25.5311 78.056C25.2751 78.0133 25.0297 77.96 24.7951 77.896C24.5604 77.8213 24.3524 77.736 24.1711 77.64C23.9897 77.5333 23.8457 77.416 23.7391 77.288C23.6324 77.16 23.5791 77.0053 23.5791 76.824C23.5791 76.6213 23.6431 76.4507 23.7711 76.312C23.8991 76.1627 24.0751 76.0507 24.2991 75.976C24.5337 75.8907 24.8111 75.848 25.1311 75.848C25.4404 75.848 25.7391 75.896 26.0271 75.992C26.3257 76.088 26.6031 76.2267 26.8591 76.408C27.1257 76.5893 27.3711 76.8187 27.5951 77.096L29.2751 75.48C29.0084 75.0747 28.6831 74.728 28.2991 74.44C27.9257 74.152 27.4724 73.9333 26.9391 73.784C26.4164 73.624 25.7871 73.544 25.0511 73.544C24.4964 73.544 23.9631 73.6293 23.4511 73.8C22.9391 73.96 22.4857 74.1947 22.0911 74.504C21.7071 74.8027 21.3977 75.1653 21.1631 75.592C20.9391 76.008 20.8271 76.4667 20.8271 76.968C20.8271 77.4373 20.9017 77.864 21.0511 78.248C21.2004 78.6213 21.4244 78.9573 21.7231 79.256C22.0324 79.544 22.4164 79.7893 22.8751 79.992C23.3337 80.1947 23.8724 80.3653 24.4911 80.504C24.7151 80.5467 24.9337 80.6 25.1471 80.664C25.3604 80.7173 25.5631 80.7867 25.7551 80.872C25.9471 80.9467 26.1124 81.032 26.2511 81.128C26.3897 81.224 26.4964 81.336 26.5711 81.464C26.6564 81.592 26.6991 81.736 26.6991 81.896C26.6991 82.1093 26.6351 82.2907 26.5071 82.44C26.3791 82.5787 26.1977 82.6853 25.9631 82.76C25.7284 82.8347 25.4671 82.872 25.1791 82.872C24.6031 82.872 24.0431 82.7493 23.4991 82.504C22.9657 82.2587 22.4324 81.7787 21.8991 81.064L20.2511 82.936C20.6137 83.3947 21.0244 83.7947 21.4831 84.136C21.9417 84.4667 22.4644 84.7227 23.0511 84.904ZM36.8237 80.632V85H39.5437V73.8H36.8237V78.2H32.5997V73.8H29.8797V85H32.5997V80.632H36.8237ZM42.9884 84.536C43.7138 84.9093 44.5404 85.096 45.4684 85.096C46.3858 85.096 47.2071 84.9093 47.9324 84.536C48.6578 84.152 49.2231 83.6293 49.6284 82.968C50.0444 82.3067 50.2524 81.5493 50.2524 80.696V73.8H47.5964V80.552C47.5964 80.9573 47.5004 81.3253 47.3084 81.656C47.1164 81.976 46.8604 82.232 46.5404 82.424C46.2311 82.6053 45.8738 82.696 45.4684 82.696C45.0844 82.696 44.7378 82.6053 44.4284 82.424C44.1191 82.232 43.8738 81.976 43.6924 81.656C43.5111 81.3253 43.4204 80.9573 43.4204 80.552V73.8H40.6684V80.696C40.6684 81.5493 40.8711 82.3067 41.2764 82.968C41.6924 83.6293 42.2631 84.152 42.9884 84.536ZM51.3828 73.8V85H58.1088H59.0948H60.7968L61.5963 82.856H65.6956L66.4928 85H69.0422H69.2448H71.6822V81.256C71.6822 80.9893 71.6769 80.7493 71.6662 80.536C71.6662 80.312 71.6609 80.088 71.6502 79.864C71.6395 79.64 71.6182 79.3893 71.5862 79.112C71.5649 78.8347 71.5329 78.52 71.4902 78.168C71.4853 78.1121 71.4801 78.0543 71.4746 77.9948L76.6742 85H79.1382V73.8H76.4982V76.568V77.784C76.5089 78.1573 76.5195 78.504 76.5302 78.824C76.5515 79.144 76.5729 79.4587 76.5942 79.768C76.6262 80.0773 76.6582 80.392 76.6902 80.712C76.6977 80.7869 76.7058 80.8626 76.7144 80.9393L71.4742 73.8H69.0422V84.4842L64.8448 73.8H62.5408L59.0585 82.6H54.1028V73.8H51.3828ZM64.9341 80.808L64.3808 79.32C64.2955 79.096 64.2101 78.856 64.1248 78.6C64.0395 78.344 63.9541 78.0827 63.8688 77.816C63.7964 77.5808 63.7241 77.3533 63.6517 77.1334C63.5843 77.3609 63.5127 77.5885 63.4368 77.816C63.3621 78.0613 63.2768 78.312 63.1808 78.568C63.0848 78.8133 62.9941 79.0693 62.9088 79.336L62.3599 80.808H64.9341Z\"\r\n                          fill=\"#F00264\"/>\r\n                </svg>\r\n\r\n\r\n            </div>\r\n            <div className=\"steps\">\r\n                {[1, 2, 3, 4].map((step, index, array) => (\r\n                    <div className={`step ${currentStep >= step ? 'active' : ''}`} key={step}>\r\n                        <div className=\"circle\">{currentStep > step ? <CheckmarkIcon/> : step}</div>\r\n                        <div className=\"step-name\">{stepNames[step]}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"navigation-buttons\">\r\n                <button className=\"prev-step\" onClick={handlePrevStep}>\r\n                    <svg width=\"8\" height=\"15\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M10 18L2 10L10 2\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\"\r\n                              stroke-linejoin=\"round\"/>\r\n                    </svg>\r\n\r\n                </button>\r\n                <button className=\"next-step\" onClick={() => {\r\n                    handleNextStep();\r\n                    onSavePattern && onSavePattern();\r\n                }}>\r\n\r\n                    <svg width=\"8\" height=\"15\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M2 18L10 10L2 2\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\"\r\n                              stroke-linejoin=\"round\"/>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}